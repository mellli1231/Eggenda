Index: app/src/main/java/com/example/eggenda/ui/gallery/GalleryAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.ui.gallery\r\n\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.ui.gallery.GalleryAdapter.ViewHolder\r\nimport com.example.eggenda.gamePetChoose.SharedPreferenceManager\r\nimport com.example.eggenda.gamePlay.petInfo2\r\n\r\nclass GalleryAdapter(private var characterList : IntArray,\r\n                     private val sharedPreferenceManager: SharedPreferenceManager,\r\n                     private val onPetClick: (Int) -> Unit,\r\n                     private val onLongClick : (Int) -> Unit\r\n):RecyclerView.Adapter<GalleryAdapter.ViewHolder>(){\r\n\r\n    private val ownedPetsTemp = sharedPreferenceManager.getPetOwnership()   //ArrayList <Int>\r\n    private var ownedPets : IntArray = ownedPetsTemp.toIntArray()           //change it to Int Array\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n        val view = LayoutInflater.from(parent.context)\r\n            .inflate(R.layout.gallery_pet_items_frame, parent, false)\r\n\r\n        //check if the owned pets size is not as same as total size\r\n        if(ownedPets.size < characterList.size){\r\n            val intList =ownedPets.toMutableList()  // Convert to a mutable list\r\n            intList.add(0)                          // Add an integer\r\n            ownedPets = intList.toIntArray()\r\n            val temp : Array<Int> = intList.toTypedArray()\r\n            sharedPreferenceManager.savePetOwnership(temp)\r\n        }\r\n\r\n        return ViewHolder(view)\r\n    }\r\n\r\n    override fun getItemCount(): Int {return characterList.size }\r\n\r\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n        Log.d(\"Gallery Fragment\", \"Binding position: $position\")\r\n        val petInfo = petInfo2()\r\n        val petId = petInfo.getPetInfoById(characterList[position])?.id!!\r\n        petId?.let { holder.bind(it) }\r\n    }\r\n\r\n\r\n\r\n    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        val imageView: ImageView = itemView.findViewById(R.id.imageView)\r\n//        val textView : TextView = itemView.findViewById(R.id.)\r\n        private val overlayView: View = itemView.findViewById(R.id.petOverlay)\r\n        val petInfo  =  petInfo2()\r\n\r\n        fun bind(petID: Int) {\r\n            imageView.setImageResource(petInfo.getPetInfoById(petID)?.imageId!!)     // Set the image resource\r\n\r\n            if(ownedPets[petID] == 0){\r\n                // Pet is owned, hide gray overlay and enable clicks\r\n                overlayView.alpha = 0.5f  // 50% transparency\r\n                overlayView.visibility = View.VISIBLE\r\n\r\n            }\r\n            else {\r\n                // Pet is owned, hide gray overlay and enable clicks\r\n                overlayView.visibility = View.GONE\r\n            }\r\n\r\n            // Set click listener on the item\r\n            itemView.setOnClickListener {\r\n               onPetClick(petID)\r\n            } //end of onclicklistener\r\n\r\n\r\n            //trigger the long-click logic for showing details\r\n            itemView.setOnLongClickListener {\r\n                onLongClick(petID)\r\n                true\r\n            }\r\n        } //end of bind funciton\r\n    }\r\n\r\n\r\n    fun updatePetsChoose(newImages: IntArray) {\r\n        characterList = newImages\r\n//        filteredPetsList = characterList.filterIndexed { index, _ ->\r\n//            index < ownedPets.size && ownedPets[index] == 1\r\n//        }\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryAdapter.kt b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryAdapter.kt
--- a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryAdapter.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryAdapter.kt	(date 1733177686170)
@@ -86,11 +86,9 @@
 
     fun updatePetsChoose(newImages: IntArray) {
         characterList = newImages
-//        filteredPetsList = characterList.filterIndexed { index, _ ->
-//            index < ownedPets.size && ownedPets[index] == 1
-//        }
         notifyDataSetChanged()
     }
 
 
+
 }
\ No newline at end of file
Index: app/src/main/java/com/example/eggenda/gamePetChoose/GamePetChooseAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.gamePetChoose\r\n\r\nimport android.content.Context\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.gamePlay.petInfo2\r\n\r\n\r\nclass GamePetChooseAdapter(private var characterList: IntArray,\r\n                           private val selectedPetsID: MutableList<Int?>,\r\n                           private val sharedPreferenceManager: SharedPreferenceManager,\r\n                           private val context: Context,\r\n                           private val onImageSelected: (Int) -> Unit,\r\n                           private val onImageDeselected: (Int) -> Unit,\r\n                           private val onLongClick: (Int) -> Unit\r\n) : RecyclerView.Adapter<GamePetChooseAdapter.ViewHolder>(){\r\n\r\n    //gson list about the status of the pets\r\n    private val ownedPetsTemp = sharedPreferenceManager.getPetOwnership()   //ArrayList <Int>\r\n    private val ownedPets : IntArray = ownedPetsTemp.toIntArray()           //change it to Int Array\r\n\r\n    private var temp : Int = 0\r\n\r\n    //filter out the unlocked character list\r\n    private var filteredPetsList = characterList.filterIndexed { index, _->\r\n        index < ownedPets.size && ownedPets[index] == 1\r\n    } .also { Log.d(\"FilteredPets\", \"filteredPetsList size: ${it.size}\") }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n        val view = LayoutInflater.from(parent.context)\r\n            .inflate(R.layout.game_item_frame, parent,false)\r\n        return ViewHolder(view)\r\n    }\r\n\r\n    //hello\r\n\r\n    override fun getItemCount(): Int {return filteredPetsList.size}\r\n\r\n\r\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n        Log.d(\"GamePetChooseAdapter\", \"Binding position: $position\")\r\n        val petInfo = petInfo2()\r\n        val petId = petInfo.getPetInfoById(filteredPetsList[position])?.id!!\r\n        petId?.let { holder.bind(it) }\r\n        sharedPreferenceManager.saveFilteredPetsAmount(filteredPetsList.size)\r\n    }\r\n\r\n\r\n    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        val imageView: ImageView = itemView.findViewById(R.id.imageView)\r\n        val petInfo  =  petInfo2()\r\n        val petInfoID = temp\r\n\r\n\r\n        fun bind(petID: Int) {\r\n            imageView.setImageResource(petInfo.getPetInfoById(petID)?.imageId!!)     // Set the image resource\r\n\r\n            // Set click listener on the item\r\n            itemView.setOnClickListener {\r\n                //unselect it if the photos has already being chosen\r\n                if (selectedPetsID.contains(petID)) { onImageDeselected(petID)      //return pet info id\r\n                } else { onImageSelected(petID) }                                   //select if the image has not been selected\r\n            } //end of onclicklistener\r\n\r\n            //trigger the long-click logic for showing details\r\n            itemView.setOnLongClickListener {\r\n                val petInfoID = temp\r\n                onLongClick(petID)\r\n                true\r\n            }\r\n        } //end of bind funciton\r\n    }\r\n\r\n\r\n    fun updatePetsChoose(newImages: IntArray) {\r\n        characterList = newImages\r\n        filteredPetsList = characterList.filterIndexed { index, _ ->\r\n            index < ownedPets.size && ownedPets[index] == 1\r\n        }\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/gamePetChoose/GamePetChooseAdapter.kt b/app/src/main/java/com/example/eggenda/gamePetChoose/GamePetChooseAdapter.kt
--- a/app/src/main/java/com/example/eggenda/gamePetChoose/GamePetChooseAdapter.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/gamePetChoose/GamePetChooseAdapter.kt	(date 1733177686145)
@@ -8,6 +8,7 @@
 import android.widget.ImageView
 import androidx.recyclerview.widget.RecyclerView
 import com.example.eggenda.R
+import com.example.eggenda.gamePlay.dict
 import com.example.eggenda.gamePlay.petInfo2
 
 
@@ -33,15 +34,12 @@
 
     override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
         val view = LayoutInflater.from(parent.context)
-            .inflate(R.layout.game_item_frame, parent,false)
+            .inflate(R.layout.game_choose_pet_item_frame, parent,false)
         return ViewHolder(view)
     }
 
-    //hello
-
     override fun getItemCount(): Int {return filteredPetsList.size}
 
-
     override fun onBindViewHolder(holder: ViewHolder, position: Int) {
         Log.d("GamePetChooseAdapter", "Binding position: $position")
         val petInfo = petInfo2()
@@ -54,22 +52,33 @@
     inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
         val imageView: ImageView = itemView.findViewById(R.id.imageView)
         val petInfo  =  petInfo2()
-        val petInfoID = temp
-
 
         fun bind(petID: Int) {
+            val petDetails = petInfo.getPetInfoById(petID)
             imageView.setImageResource(petInfo.getPetInfoById(petID)?.imageId!!)     // Set the image resource
 
+            // Set the pet image
+            petDetails?.let {
+                imageView.setImageResource(it.imageId)
+//                 Change the item's background color based on pet properties
+                val backgroundColor = when (it.element) { // Assuming `type` is a property
+                    dict.ELEMENT_FIRE -> context.getColor(R.color.fire)
+                    dict.ELEMENT_WATER -> context.getColor(R.color.water)
+                    dict.ELEMENT_FOREST-> context.getColor(R.color.forest)
+                    else -> context.getColor(R.color.silver_rare)
+                }
+                itemView.setBackgroundColor(backgroundColor) // Apply background color
+            }
+
             // Set click listener on the item
             itemView.setOnClickListener {
                 //unselect it if the photos has already being chosen
                 if (selectedPetsID.contains(petID)) { onImageDeselected(petID)      //return pet info id
                 } else { onImageSelected(petID) }                                   //select if the image has not been selected
-            } //end of onclicklistener
+            }
 
             //trigger the long-click logic for showing details
             itemView.setOnLongClickListener {
-                val petInfoID = temp
                 onLongClick(petID)
                 true
             }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_4_27_p_m___Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_4_27_p_m___Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_4_27_p_m___Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_4_27_p_m___Changes_.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ /dev/null	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2024-11-24_4_27_p_m__[Changes]" date="1732494430549" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_4_27_p_m__[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2024-11-24 4:27 p.m. [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value=".idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m__[Changes]/app_icon.png" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_4_27_p_m__[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_4_27_p_m__[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_4_27_p_m__[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_4_27_p_m__[Changes]/shelved.patch	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ /dev/null	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
@@ -1,888 +0,0 @@
-Index: app/src/main/res/layout/fragment_gallery.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/yellow\"\r\n    android:paddingTop=\"20dp\"\r\n    tools:context=\".ui.gallery.GalleryFragment\">\r\n\r\n<!--    <TextView-->\r\n<!--        android:id=\"@+id/gallery_text_view\"-->\r\n<!--        android:layout_width=\"wrap_content\"-->\r\n<!--        android:layout_height=\"wrap_content\"-->\r\n<!--        android:text=\"Pet Gallery\"-->\r\n<!--        app:layout_constraintEnd_toEndOf=\"parent\"-->\r\n<!--        app:layout_constraintHorizontal_bias=\"0.154\"-->\r\n<!--        app:layout_constraintStart_toStartOf=\"parent\"-->\r\n<!--        tools:layout_editor_absoluteY=\"80dp\" />-->\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/gallery_characterchoose_recyclerView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline8\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline8\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline8\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"300dp\" />\r\n\r\n    <!-- New TextView for the message -->\r\n    <TextView\r\n        android:id=\"@+id/long_hold_message\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Long-hold to view pet information\"\r\n        android:textSize=\"18sp\"\r\n        android:textColor=\"@android:color/black\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:gravity=\"center\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        android:padding=\"16dp\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/fragment_gallery.xml b/app/src/main/res/layout/fragment_gallery.xml
---- a/app/src/main/res/layout/fragment_gallery.xml	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/app/src/main/res/layout/fragment_gallery.xml	(date 1732493455717)
-@@ -9,47 +9,107 @@
-     android:paddingTop="20dp"
-     tools:context=".ui.gallery.GalleryFragment">
- 
--<!--    <TextView-->
--<!--        android:id="@+id/gallery_text_view"-->
--<!--        android:layout_width="wrap_content"-->
--<!--        android:layout_height="wrap_content"-->
--<!--        android:text="Pet Gallery"-->
--<!--        app:layout_constraintEnd_toEndOf="parent"-->
--<!--        app:layout_constraintHorizontal_bias="0.154"-->
--<!--        app:layout_constraintStart_toStartOf="parent"-->
--<!--        tools:layout_editor_absoluteY="80dp" />-->
-+
-+    <TextView
-+        android:id="@+id/gallery_pet_name"
-+        android:layout_width="wrap_content"
-+        android:layout_height="wrap_content"
-+        android:fontFamily="@font/titan_one"
-+        android:text="Please Select a Pet!"
-+        android:textSize="34sp"
-+        app:layout_constraintBottom_toTopOf="@+id/gallery_pet_show"
-+        app:layout_constraintEnd_toStartOf="@+id/guideline9"
-+        app:layout_constraintStart_toStartOf="@+id/guideline9" />
-+
-+    <ImageView
-+        android:id="@+id/gallery_pet_show"
-+        android:layout_width="250dp"
-+        android:layout_height="250dp"
-+        android:src="@drawable/game_choose_nth_3"
-+        app:layout_constraintBottom_toTopOf="@+id/guideline4"
-+        app:layout_constraintEnd_toStartOf="@+id/guideline9"
-+        app:layout_constraintHorizontal_bias="0.65"
-+        app:layout_constraintStart_toStartOf="@+id/guideline9"
-+        app:layout_constraintTop_toTopOf="@+id/guideline4"
-+        app:layout_constraintVertical_bias="0.49" />
-+
-+   <androidx.constraintlayout.widget.ConstraintLayout
-+       android:layout_width="match_parent"
-+       android:layout_height="340dp"
-+       android:background="@color/yellow_subbackground"
-+       app:layout_constraintBottom_toTopOf="@+id/guideline8"
-+       app:layout_constraintEnd_toEndOf="parent"
-+       app:layout_constraintHorizontal_bias="1.0"
-+       app:layout_constraintStart_toStartOf="parent"
-+       app:layout_constraintTop_toTopOf="@+id/guideline8">
-+
-+       <TextView
-+           android:id="@+id/textView3"
-+           android:layout_width="wrap_content"
-+           android:layout_height="wrap_content"
-+           android:fontFamily="@font/titan_one"
-+           android:text="Pet Gallery"
-+           android:textSize="34sp"
-+           app:layout_constraintEnd_toEndOf="parent"
-+           app:layout_constraintStart_toStartOf="parent"
-+           app:layout_constraintTop_toTopOf="parent" />
- 
--    <androidx.recyclerview.widget.RecyclerView
--        android:id="@+id/gallery_characterchoose_recyclerView"
--        android:layout_width="wrap_content"
--        android:layout_height="wrap_content"
--        android:layout_weight="1"
--        app:layout_constraintBottom_toTopOf="@+id/guideline8"
--        app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintStart_toStartOf="parent"
--        app:layout_constraintTop_toTopOf="@+id/guideline8" />
-+       <androidx.recyclerview.widget.RecyclerView
-+           android:id="@+id/gallery_characterchoose_recyclerView"
-+           android:layout_width="wrap_content"
-+           android:layout_height="wrap_content"
-+           android:layout_marginTop="30dp"
-+           android:layout_weight="1"
-+           android:scrollbars="vertical"
-+           app:layout_constraintBottom_toBottomOf="parent"
-+           app:layout_constraintEnd_toEndOf="parent"
-+           app:layout_constraintHorizontal_bias="0.498"
-+           app:layout_constraintStart_toStartOf="parent"
-+           app:layout_constraintTop_toBottomOf="@+id/textView3"
-+           app:layout_constraintVertical_bias="0.051" />
-+
-+
-+   </androidx.constraintlayout.widget.ConstraintLayout>
- 
-     <androidx.constraintlayout.widget.Guideline
-         android:id="@+id/guideline8"
-         android:layout_width="wrap_content"
-         android:layout_height="wrap_content"
-         android:orientation="horizontal"
--        app:layout_constraintGuide_begin="300dp" />
-+        app:layout_constraintGuide_begin="505dp" />
-+
- 
-     <!-- New TextView for the message -->
-+
-     <TextView
-         android:id="@+id/long_hold_message"
-         android:layout_width="0dp"
-         android:layout_height="wrap_content"
--        android:text="Long-hold to view pet information"
--        android:textSize="18sp"
--        android:textColor="@android:color/black"
-+        android:layout_marginBottom="4dp"
-         android:fontFamily="@font/titan_one"
-         android:gravity="center"
--        app:layout_constraintStart_toStartOf="parent"
-+        android:padding="6dp"
-+        android:text="Long-hold Photo to view pet information"
-+        android:textColor="@android:color/black"
-+        android:textSize="18sp"
-+        app:layout_constraintBottom_toBottomOf="parent"
-         app:layout_constraintEnd_toEndOf="parent"
--        app:layout_constraintBottom_toBottomOf="parent"
--        android:padding="16dp" />
-+        app:layout_constraintHorizontal_bias="1.0"
-+        app:layout_constraintStart_toStartOf="parent" />
-+
-+    <androidx.constraintlayout.widget.Guideline
-+        android:id="@+id/guideline4"
-+        android:layout_width="wrap_content"
-+        android:layout_height="wrap_content"
-+        android:orientation="horizontal"
-+        app:layout_constraintGuide_begin="158dp" />
-+
-+    <androidx.constraintlayout.widget.Guideline
-+        android:id="@+id/guideline9"
-+        android:layout_width="wrap_content"
-+        android:layout_height="wrap_content"
-+        android:orientation="vertical"
-+        app:layout_constraintGuide_begin="216dp" />
- 
- </androidx.constraintlayout.widget.ConstraintLayout>
- 
-Index: app/src/main/java/com/example/eggenda/ui/gallery/GalleryViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.eggenda.ui.gallery\r\n\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.example.eggenda.gamePetChoose.GamePetChooseViewModel\r\nimport com.example.eggenda.gamePetChoose.SharedPreferenceManager\r\n\r\nclass GalleryViewModel : ViewModel() {\r\n    //getting Int array from pets Info\r\n    private val _allPets  = MutableLiveData<IntArray>()\r\n    val allPets : LiveData<IntArray> get() = _allPets\r\n\r\n//    class GalleryViewModelFactory(private val maxAmountPets: SharedPreferenceManager) : ViewModelProvider.Factory {\r\n//        override fun <T : ViewModel> create(modelClass: Class<T>): T {\r\n//            if (modelClass.isAssignableFrom(GalleryViewModel::class.java)) {\r\n//                @Suppress(\"UNCHECKED_CAST\")\r\n//                return GamePetChooseViewModel(maxAmountPets) as T\r\n//            }\r\n//            throw IllegalArgumentException(\"Unknown ViewModel class\")\r\n//        }\r\n//    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryViewModel.kt b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryViewModel.kt
---- a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryViewModel.kt	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryViewModel.kt	(date 1732492836415)
-@@ -12,14 +12,15 @@
-     private val _allPets  = MutableLiveData<IntArray>()
-     val allPets : LiveData<IntArray> get() = _allPets
- 
--//    class GalleryViewModelFactory(private val maxAmountPets: SharedPreferenceManager) : ViewModelProvider.Factory {
--//        override fun <T : ViewModel> create(modelClass: Class<T>): T {
--//            if (modelClass.isAssignableFrom(GalleryViewModel::class.java)) {
--//                @Suppress("UNCHECKED_CAST")
--//                return GamePetChooseViewModel(maxAmountPets) as T
--//            }
--//            throw IllegalArgumentException("Unknown ViewModel class")
--//        }
--//    }
-+    private val _currentSelectedPet = MutableLiveData<Int?>() // Null means no pet is selected
-+    val currentSelectedPet: LiveData<Int?> = _currentSelectedPet
-+
-+    fun selectPet(petId: Int?) {
-+        _currentSelectedPet.value = petId
-+    }
-+
-+    fun clearSelection() {
-+        _currentSelectedPet.value = null
-+    }
- 
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/eggenda/ui/gallery/GalleryAdapter.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.eggenda.ui.gallery\r\n\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.ui.gallery.GalleryAdapter.ViewHolder\r\nimport com.example.eggenda.gamePetChoose.SharedPreferenceManager\r\nimport com.example.eggenda.gamePlay.petInfo2\r\n\r\nclass GalleryAdapter(private var characterList : IntArray,\r\n                     private val sharedPreferenceManager: SharedPreferenceManager,\r\n                     private val onLongClick : (Int) -> Unit\r\n):RecyclerView.Adapter<GalleryAdapter.ViewHolder>(){\r\n\r\n    private val ownedPetsTemp = sharedPreferenceManager.getPetOwnership()   //ArrayList <Int>\r\n    private val ownedPets : IntArray = ownedPetsTemp.toIntArray()           //change it to Int Array\r\n\r\n    private var temp : Int = 0\r\n\r\n    //filter out the unlocked character list\r\n//    private var filteredPetsList = characterList.filterIndexed { index, _->\r\n//        index < ownedPets.size && ownedPets[index] == 1\r\n//    } .also { Log.d(\"FilteredPets\", \"filteredPetsList size: ${it.size}\") }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n        val view = LayoutInflater.from(parent.context)\r\n            .inflate(R.layout.gallery_pet_items_frame, parent, false)\r\n        return ViewHolder(view)\r\n    }\r\n\r\n    override fun getItemCount(): Int {return characterList.size }\r\n\r\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n        Log.d(\"Gallery Fragment\", \"Binding position: $position\")\r\n        val petInfo = petInfo2()\r\n        val petId = petInfo.getPetInfoById(characterList[position])?.id!!\r\n        petId?.let { holder.bind(it) }\r\n    }\r\n\r\n\r\n    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        val imageView: ImageView = itemView.findViewById(R.id.imageView)\r\n        private val overlayView: View = itemView.findViewById(R.id.petOverlay)\r\n        val petInfo  =  petInfo2()\r\n\r\n        fun bind(petID: Int) {\r\n            imageView.setImageResource(petInfo.getPetInfoById(petID)?.imageId!!)     // Set the image resource\r\n\r\n            if(ownedPets[petID] == 0){\r\n                //pets is unowned, show gray overlay and enable clicks\r\n                overlayView.visibility = View.VISIBLE\r\n                itemView.isClickable = false\r\n                itemView.isEnabled = false\r\n\r\n            }\r\n            else {\r\n                // Pet is owned, hide gray overlay and enable clicks\r\n                overlayView.visibility = View.GONE\r\n                itemView.isClickable = true\r\n                itemView.isEnabled = true\r\n            }\r\n            //trigger the long-click logic for showing details\r\n            itemView.setOnLongClickListener {\r\n                val petInfoID = temp\r\n                onLongClick(petID)\r\n                true\r\n            }\r\n        } //end of bind funciton\r\n    }\r\n\r\n\r\n    fun updatePetsChoose(newImages: IntArray) {\r\n        characterList = newImages\r\n//        filteredPetsList = characterList.filterIndexed { index, _ ->\r\n//            index < ownedPets.size && ownedPets[index] == 1\r\n//        }\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryAdapter.kt b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryAdapter.kt
---- a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryAdapter.kt	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryAdapter.kt	(date 1732492226060)
-@@ -5,6 +5,8 @@
- import android.view.View
- import android.view.ViewGroup
- import android.widget.ImageView
-+import android.widget.TextView
-+import androidx.lifecycle.MutableLiveData
- import androidx.recyclerview.widget.RecyclerView
- import com.example.eggenda.R
- import com.example.eggenda.ui.gallery.GalleryAdapter.ViewHolder
-@@ -13,22 +15,26 @@
- 
- class GalleryAdapter(private var characterList : IntArray,
-                      private val sharedPreferenceManager: SharedPreferenceManager,
-+                     private val onPetClick: (Int) -> Unit,
-                      private val onLongClick : (Int) -> Unit
- ):RecyclerView.Adapter<GalleryAdapter.ViewHolder>(){
- 
-     private val ownedPetsTemp = sharedPreferenceManager.getPetOwnership()   //ArrayList <Int>
--    private val ownedPets : IntArray = ownedPetsTemp.toIntArray()           //change it to Int Array
--
--    private var temp : Int = 0
--
--    //filter out the unlocked character list
--//    private var filteredPetsList = characterList.filterIndexed { index, _->
--//        index < ownedPets.size && ownedPets[index] == 1
--//    } .also { Log.d("FilteredPets", "filteredPetsList size: ${it.size}") }
-+    private var ownedPets : IntArray = ownedPetsTemp.toIntArray()           //change it to Int Array
- 
-     override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
-         val view = LayoutInflater.from(parent.context)
-             .inflate(R.layout.gallery_pet_items_frame, parent, false)
-+
-+        //check if the owned pets size is not as same as total size
-+        if(ownedPets.size < characterList.size){
-+            val intList =ownedPets.toMutableList()  // Convert to a mutable list
-+            intList.add(0)                          // Add an integer
-+            ownedPets = intList.toIntArray()
-+            val temp : Array<Int> = intList.toTypedArray()
-+            sharedPreferenceManager.savePetOwnership(temp)
-+        }
-+
-         return ViewHolder(view)
-     }
- 
-@@ -42,8 +48,10 @@
-     }
- 
- 
-+
-     inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
-         val imageView: ImageView = itemView.findViewById(R.id.imageView)
-+//        val textView : TextView = itemView.findViewById(R.id.)
-         private val overlayView: View = itemView.findViewById(R.id.petOverlay)
-         val petInfo  =  petInfo2()
- 
-@@ -51,21 +59,24 @@
-             imageView.setImageResource(petInfo.getPetInfoById(petID)?.imageId!!)     // Set the image resource
- 
-             if(ownedPets[petID] == 0){
--                //pets is unowned, show gray overlay and enable clicks
-+                // Pet is owned, hide gray overlay and enable clicks
-+                overlayView.alpha = 0.5f  // 50% transparency
-                 overlayView.visibility = View.VISIBLE
--                itemView.isClickable = false
--                itemView.isEnabled = false
- 
-             }
-             else {
-                 // Pet is owned, hide gray overlay and enable clicks
-                 overlayView.visibility = View.GONE
--                itemView.isClickable = true
--                itemView.isEnabled = true
-             }
-+
-+            // Set click listener on the item
-+            itemView.setOnClickListener {
-+               onPetClick(petID)
-+            } //end of onclicklistener
-+
-+
-             //trigger the long-click logic for showing details
-             itemView.setOnLongClickListener {
--                val petInfoID = temp
-                 onLongClick(petID)
-                 true
-             }
-Index: app/src/main/res/layout/game_monster_choose.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/yellow\"\r\n    android:fitsSystemWindows=\"true\">\r\n\r\n    <Button\r\n        android:id=\"@+id/game_monster_go\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"go!\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline6\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline6\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline6\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"661dp\" />\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/frameLayout\"\r\n        android:layout_width=\"250dp\"\r\n        android:layout_height=\"250dp\"\r\n        android:background=\"@drawable/game_element_frame_fire\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline11\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.495\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline11\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/bossView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/game_enemy_stamp\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/bossDefeatCover\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            app:srcCompat=\"@drawable/game_monster_defeat\" />\r\n\r\n\r\n    </FrameLayout>\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline11\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"276dp\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/back_button\"\r\n        android:layout_width=\"80dp\"\r\n        android:layout_height=\"80dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/frameLayout\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/frameLayout\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/frameLayout\"\r\n        app:srcCompat=\"@drawable/back_arrow\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/next_button\"\r\n        android:layout_width=\"80dp\"\r\n        android:layout_height=\"80dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/frameLayout\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/frameLayout\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/frameLayout\"\r\n        app:srcCompat=\"@drawable/back_arrow\"\r\n        android:scaleX=\"-1\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/boss_title\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"5dp\"\r\n        android:text=\"TextView\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:textSize=\"34sp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/frameLayout\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/frameLayout\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/frameLayout\" />\r\n    <TextView\r\n        android:id=\"@+id/stage_Title\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"5dp\"\r\n        android:text=\"TextView\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:textSize=\"34sp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/boss_title\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/frameLayout\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/frameLayout\" />\r\n\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/monster_status_bar\"\r\n        android:layout_width=\"260dp\"\r\n        android:layout_height=\"40dp\"\r\n        android:background=\"@drawable/monster_status_bg\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline2\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline2\"\r\n        app:layout_constraintVertical_bias=\"0.425\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/monster_status_icon\"\r\n            android:layout_width=\"30dp\"\r\n            android:layout_height=\"30dp\"\r\n            android:src=\"@drawable/game_monster_cross\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.059\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/monster_status_text\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:text=\"Not Yet Defeated!\"\r\n            android:textSize=\"20dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/monster_status_icon\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"445dp\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/game_monster_choose.xml b/app/src/main/res/layout/game_monster_choose.xml
---- a/app/src/main/res/layout/game_monster_choose.xml	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/app/src/main/res/layout/game_monster_choose.xml	(date 1732493797086)
-@@ -131,6 +131,7 @@
-             android:textSize="20dp"
-             app:layout_constraintBottom_toBottomOf="parent"
-             app:layout_constraintEnd_toEndOf="parent"
-+            app:layout_constraintHorizontal_bias="0.304"
-             app:layout_constraintStart_toEndOf="@+id/monster_status_icon"
-             app:layout_constraintTop_toTopOf="parent" />
- 
-Index: app/src/main/java/com/example/eggenda/ui/gallery/GalleryFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.eggenda.ui.gallery\r\n\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.TextView\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.fragment.app.DialogFragment\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.databinding.FragmentGalleryBinding\r\nimport com.example.eggenda.gamePetChoose.GamePetChooseViewModel\r\nimport com.example.eggenda.gamePetChoose.PetChooseDialogFragment\r\nimport com.example.eggenda.gamePetChoose.SharedPreferenceManager\r\nimport com.example.eggenda.gamePlay.petInfo2\r\nimport com.google.firebase.crashlytics.buildtools.reloc.org.apache.commons.io.input.ObservableInputStream\r\n\r\nclass GalleryFragment : Fragment() {\r\n\r\n    private lateinit var sharedPreferenceManager: SharedPreferenceManager\r\n    private lateinit var petInfo: petInfo2\r\n    private lateinit var galleryViewModel: GalleryViewModel\r\n    private lateinit var allPetsArrayID : IntArray\r\n    private lateinit var petsAdapter: GalleryAdapter\r\n    private lateinit var characterRecyclerView: RecyclerView\r\n\r\n    private var _binding: FragmentGalleryBinding? = null\r\n\r\n\r\n    // This property is only valid between onCreateView and\r\n    // onDestroyView.edrqwe\r\n    private val binding get() = _binding!!\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n\r\n        //inflate the layout for the gallery fragment\r\n        _binding = FragmentGalleryBinding.inflate(inflater, container, false)\r\n        sharedPreferenceManager = SharedPreferenceManager(requireContext())\r\n        petInfo = petInfo2()\r\n\r\n        val binding = FragmentGalleryBinding.inflate(inflater, container, false)\r\n        val root: View = binding.root\r\n        characterRecyclerView = binding.galleryCharacterchooseRecyclerView\r\n\r\n        characterRecyclerView = root.findViewById(R.id.gallery_characterchoose_recyclerView)\r\n        characterRecyclerView.layoutManager = GridLayoutManager(requireContext(), 3)\r\n\r\n//        val factory = GalleryViewModel.GalleryViewModelFactory(sharedPreferenceManager)\r\n        galleryViewModel = ViewModelProvider(this)[GalleryViewModel::class.java]\r\n\r\n        //initialize pets array that has in the code in int array\r\n        //here should take it from pet info class\r\n        allPetsArrayID = intArrayOf(0,1,2,3,4,5,6,7,8,9)\r\n\r\n        //initalized classes and views\r\n        characterRecyclerView = root.findViewById(R.id.gallery_characterchoose_recyclerView)\r\n\r\n\r\n        //set the adapter to show the pets\r\n        petsAdapter = GalleryAdapter(\r\n            allPetsArrayID,\r\n            sharedPreferenceManager,\r\n            {petId -> showPetDetailDialog(petId)})\r\n\r\n        petsAdapter.notifyDataSetChanged()\r\n        characterRecyclerView.adapter = petsAdapter\r\n\r\n        galleryViewModel.allPets.observe(viewLifecycleOwner, Observer { photos ->\r\n            Log.d(\"Gallery Fragment\", \"allPets updated: $photos\")\r\n            petsAdapter.updatePetsChoose(photos)\r\n        })\r\n\r\n\r\n        return root\r\n    }\r\n\r\n    private fun showPetDetailDialog(petId: Int) {\r\n        // Show a dialog with pet details\r\n        val dialog = PetChooseDialogFragment.newInstance(petId)\r\n        dialog.show(parentFragmentManager, \"PetChooseDialog\")\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryFragment.kt b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryFragment.kt
---- a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryFragment.kt	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryFragment.kt	(date 1732492918886)
-@@ -5,10 +5,12 @@
- import android.view.LayoutInflater
- import android.view.View
- import android.view.ViewGroup
-+import android.widget.ImageView
- import android.widget.TextView
- import androidx.activity.enableEdgeToEdge
- import androidx.fragment.app.DialogFragment
- import androidx.fragment.app.Fragment
-+import androidx.lifecycle.MutableLiveData
- import androidx.lifecycle.Observer
- import androidx.lifecycle.ViewModelProvider
- import androidx.recyclerview.widget.GridLayoutManager
-@@ -42,7 +44,6 @@
-         container: ViewGroup?,
-         savedInstanceState: Bundle?
-     ): View {
--
-         //inflate the layout for the gallery fragment
-         _binding = FragmentGalleryBinding.inflate(inflater, container, false)
-         sharedPreferenceManager = SharedPreferenceManager(requireContext())
-@@ -55,6 +56,9 @@
-         characterRecyclerView = root.findViewById(R.id.gallery_characterchoose_recyclerView)
-         characterRecyclerView.layoutManager = GridLayoutManager(requireContext(), 3)
- 
-+        //the mutuable list that can save the list of the pets ,that can send to the game part
-+        val selectedPetID =  MutableLiveData<Int?>()
-+
- //        val factory = GalleryViewModel.GalleryViewModelFactory(sharedPreferenceManager)
-         galleryViewModel = ViewModelProvider(this)[GalleryViewModel::class.java]
- 
-@@ -65,11 +69,11 @@
-         //initalized classes and views
-         characterRecyclerView = root.findViewById(R.id.gallery_characterchoose_recyclerView)
- 
--
-         //set the adapter to show the pets
-         petsAdapter = GalleryAdapter(
-             allPetsArrayID,
-             sharedPreferenceManager,
-+            {petId -> galleryViewModel.selectPet(petId)},
-             {petId -> showPetDetailDialog(petId)})
- 
-         petsAdapter.notifyDataSetChanged()
-@@ -81,6 +85,34 @@
-         })
- 
- 
-+        galleryViewModel.currentSelectedPet.observe(viewLifecycleOwner){ petId ->
-+
-+            //set the chosen image
-+            val petChosenImage = root.findViewById<ImageView>(R.id.gallery_pet_show)
-+            val petChoosenText = root.findViewById<TextView>(R.id.gallery_pet_name)
-+
-+            if (petId == null) {
-+                // No pet selected, return to the initalized format
-+                petChosenImage.setImageResource(R.drawable.game_choose_nth_3)
-+                petChoosenText.text = "Please Select a Pet!"
-+                petChosenImage.setOnLongClickListener(null)
-+            } else {
-+                // Pet selected, display the image
-+                petChosenImage.setImageResource(petInfo.getPetInfoById(petId)?.imageId ?: R.layout.gallery_pet_items_frame)
-+                petChoosenText.text = petInfo.getPetInfoById(petId)?.name
-+                petChosenImage.visibility = View.VISIBLE
-+
-+                //set a long click so it can show the info of the pet
-+                petChosenImage.setOnLongClickListener{
-+                    showPetDetailDialog(petId)
-+                    true
-+                }
-+            }
-+
-+        }
-+
-+
-+
-         return root
-     }
- 
-Index: app/src/main/java/com/example/eggenda/gameMonsterChoose/GameMonsterChooseMainActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.eggenda.gameMonsterChoose\r\n\r\nimport android.content.Intent\r\nimport android.media.Image\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.widget.Button\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.appcompat.app.AppCompatDelegate\r\nimport androidx.core.view.isInvisible\r\nimport androidx.lifecycle.Observer\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.gamePetChoose.GamePetChooseMainActivity\r\nimport com.example.eggenda.gamePetChoose.PetChooseDialogFragment\r\nimport com.example.eggenda.gamePetChoose.SharedPreferenceManager\r\nimport com.example.eggenda.gamePlay.stageInfo\r\n\r\nclass GameMonsterChooseMainActivity : AppCompatActivity () {\r\n\r\n    private lateinit var button: Button\r\n    private lateinit var sharedPreferenceManager: SharedPreferenceManager\r\n    private lateinit var stageInfo: stageInfo\r\n\r\n\r\n    private lateinit var viewModel: monsterChooseViewModel\r\n    private var stageId: Int = 0\r\n\r\n    private lateinit var stageTitle:TextView\r\n    private lateinit var bossTitle:TextView\r\n    private lateinit var backBtn:ImageView\r\n    private lateinit var nextBtn:ImageView\r\n    private lateinit var bossImage:ImageView\r\n    private lateinit var bossDefeatCover:ImageView  //add cover to boss image if the boss is defeated\r\n    private lateinit var stageDoneArrayList: ArrayList<Int>\r\n    private var amount = 0\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)\r\n        setContentView(R.layout.game_monster_choose)\r\n        sharedPreferenceManager = SharedPreferenceManager(this)\r\n        stageInfo = stageInfo()\r\n        viewModel = monsterChooseViewModel()\r\n\r\n        stageTitle = findViewById(R.id.stage_Title)\r\n        bossTitle = findViewById(R.id.boss_title)\r\n        backBtn = findViewById(R.id.back_button)\r\n        nextBtn = findViewById(R.id.next_button)\r\n        bossImage = findViewById(R.id.bossView)\r\n        bossDefeatCover = findViewById(R.id.bossDefeatCover)\r\n\r\n\r\n        //handle stageDone\r\n        stageDoneArrayList = sharedPreferenceManager.getStageDone()\r\n        if(stageDoneArrayList.size != stageInfo.stageTotalNum){\r\n            stageDoneArrayList = getNewStageDone(stageDoneArrayList, stageInfo.stageTotalNum)\r\n            sharedPreferenceManager.saveStageDone(stageDoneArrayList)\r\n        }\r\n\r\n\r\n        viewModel.chosenStageID.observe(this, Observer { newStageId->\r\n            if(newStageId == 0 ){\r\n                backBtn.isInvisible = true\r\n            }\r\n            else{\r\n                backBtn.isInvisible = false\r\n            }\r\n            if(newStageId  == stageInfo.stageTotalNum - 1){\r\n                nextBtn.isInvisible = true\r\n            }\r\n            else{\r\n                nextBtn.isInvisible = false\r\n            }\r\n            val selectedStage = stageInfo.StageInfoMap(newStageId)!!\r\n            val stageStr = \"Stage \"+(newStageId + 1).toString()+\":\"\r\n            val bossStr = selectedStage.name\r\n            if(stageDoneArrayList[newStageId] == 1){\r\n                bossDefeatCover.isInvisible = false\r\n            }\r\n            else{\r\n                bossDefeatCover.isInvisible = true\r\n            }\r\n            stageTitle.text = stageStr\r\n            bossTitle.text = bossStr\r\n            bossImage.setImageResource(selectedStage.bossImageId)\r\n            viewModel.updateAmount(selectedStage.deckSize)\r\n\r\n        })\r\n\r\n        bossImage.setOnLongClickListener {\r\n            val stageId = viewModel.chosenStageID.value ?: 0\r\n            showPetDetailDialog(stageId)\r\n            true\r\n        }\r\n\r\n        backBtn.setOnClickListener{\r\n            viewModel.subtractChosenStageID()\r\n        }\r\n        nextBtn.setOnClickListener{\r\n            viewModel.addChosenStageID()\r\n        }\r\n\r\n        button = findViewById(R.id.game_monster_go)\r\n\r\n        button.setOnClickListener {\r\n\r\n            //for pet amount\r\n            sharedPreferenceManager.savePetsAmount(viewModel.getAmount())\r\n            val retrievedList = sharedPreferenceManager.getPetOwnership()\r\n            val intArrayhihi : IntArray = retrievedList.toIntArray()\r\n            Log.d(\"Retrieved List\", \"IntArray: ${intArrayhihi.joinToString(\",\")}\")\r\n\r\n            //for stage id\r\n            Log.d(\"stageID\", \"chosen: ${viewModel.getChosenStageID()}\")\r\n            sharedPreferenceManager.saveStageChoose(viewModel.getChosenStageID())\r\n\r\n            Log.d(\"stageID\", \"saved: ${sharedPreferenceManager.getStageChoose()}\")\r\n            val intent = Intent(this, GamePetChooseMainActivity::class.java)\r\n            startActivity(intent)\r\n            finish()\r\n        }\r\n\r\n    }\r\n\r\n    private fun getNewStageDone(oldStageDone: ArrayList<Int>, stageCount: Int):ArrayList<Int>{\r\n        val ret = ArrayList<Int>()\r\n        for(i in 1..stageCount){\r\n            ret.add(0)\r\n        }\r\n        var index = 0\r\n        while(index < oldStageDone.size && index < stageCount){\r\n            ret[index] = oldStageDone[index]\r\n            index ++\r\n        }\r\n        return ret\r\n    }\r\n\r\n    //set the show dialog funciton\r\n    private fun showPetDetailDialog(stageId:Int){\r\n        val dialog = GameMonsterDialogFragment.newInstance(stageId)\r\n        dialog.show(supportFragmentManager, \"MonsterChooseDialog\")\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/eggenda/gameMonsterChoose/GameMonsterChooseMainActivity.kt b/app/src/main/java/com/example/eggenda/gameMonsterChoose/GameMonsterChooseMainActivity.kt
---- a/app/src/main/java/com/example/eggenda/gameMonsterChoose/GameMonsterChooseMainActivity.kt	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/app/src/main/java/com/example/eggenda/gameMonsterChoose/GameMonsterChooseMainActivity.kt	(date 1732494428777)
-@@ -17,6 +17,7 @@
- import com.example.eggenda.gamePetChoose.PetChooseDialogFragment
- import com.example.eggenda.gamePetChoose.SharedPreferenceManager
- import com.example.eggenda.gamePlay.stageInfo
-+import org.w3c.dom.Text
- 
- class GameMonsterChooseMainActivity : AppCompatActivity () {
- 
-@@ -33,9 +34,11 @@
-     private lateinit var backBtn:ImageView
-     private lateinit var nextBtn:ImageView
-     private lateinit var bossImage:ImageView
--    private lateinit var bossDefeatCover:ImageView  //add cover to boss image if the boss is defeated
-+    private lateinit var bossChallengeCover :ImageView  //add cover to boss image if the boss is not challengable at ths moment
-     private lateinit var stageDoneArrayList: ArrayList<Int>
--    private var amount = 0
-+    private lateinit var monsterStatusIcon : ImageView
-+    private lateinit var monsterStatusText : TextView
-+    private lateinit var ownedPetsList : ArrayList<Int> // to check if the pets are enough for play or not
- 
-     override fun onCreate(savedInstanceState: Bundle?) {
-         super.onCreate(savedInstanceState)
-@@ -51,8 +54,9 @@
-         backBtn = findViewById(R.id.back_button)
-         nextBtn = findViewById(R.id.next_button)
-         bossImage = findViewById(R.id.bossView)
--        bossDefeatCover = findViewById(R.id.bossDefeatCover)
--
-+        bossChallengeCover = findViewById(R.id.bossDefeatCover)
-+        monsterStatusIcon = findViewById(R.id.monster_status_icon)
-+        monsterStatusText = findViewById(R.id.monster_status_text)
- 
-         //handle stageDone
-         stageDoneArrayList = sharedPreferenceManager.getStageDone()
-@@ -61,6 +65,10 @@
-             sharedPreferenceManager.saveStageDone(stageDoneArrayList)
-         }
- 
-+        //handle the owned pets size whenever the pets is updated or not
-+        ownedPetsList = sharedPreferenceManager.getPetOwnership()
-+
-+
- 
-         viewModel.chosenStageID.observe(this, Observer { newStageId->
-             if(newStageId == 0 ){
-@@ -78,11 +86,17 @@
-             val selectedStage = stageInfo.StageInfoMap(newStageId)!!
-             val stageStr = "Stage "+(newStageId + 1).toString()+":"
-             val bossStr = selectedStage.name
-+
-+            //set the stage status bar
-             if(stageDoneArrayList[newStageId] == 1){
--                bossDefeatCover.isInvisible = false
-+                monsterStatusIcon.setImageResource(R.drawable.game_monster_cross)
-+                monsterStatusText.text = "Not Yet Defeated!"
-+//                bossChallengeCover.isInvisible = false
-             }
-             else{
--                bossDefeatCover.isInvisible = true
-+                monsterStatusIcon.setImageResource(R.drawable.game_monster_tick)
-+                monsterStatusText.text = "Finished!"
-+//                bossChallengeCover.isInvisible = true
-             }
-             stageTitle.text = stageStr
-             bossTitle.text = bossStr
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m___Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m___Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m___Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m___Changes_.xml	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ /dev/null	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-@@ -1,8 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m__[Changes]" date="1731885011290" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m__[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2024-11-17 3:10 p.m. [Changes]" />
--  <binary>
--    <option name="AFTER_PATH" value="app/src/main/res/drawable/app_icon.png" />
--    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m__[Changes]/app_icon.png" />
--  </binary>
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m__[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m__[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m__[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-17_3_10_p_m__[Changes]/shelved.patch	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ /dev/null	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-@@ -1,291 +0,0 @@
--Index: app/src/main/java/com/example/eggenda/ui/settings/ProfileActivity.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.eggenda.ui.settings\r\n\r\nimport android.app.Activity\r\nimport android.app.AlertDialog\r\nimport android.app.Dialog\r\nimport android.content.DialogInterface\r\nimport android.content.Intent\r\nimport android.content.SharedPreferences\r\nimport android.graphics.Bitmap\r\nimport android.graphics.BitmapFactory\r\nimport android.graphics.Matrix\r\nimport androidx.exifinterface.media.ExifInterface\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.provider.MediaStore\r\nimport android.view.View\r\nimport android.widget.Button\r\nimport android.widget.EditText\r\nimport android.widget.ImageView\r\nimport android.widget.Toast\r\nimport androidx.activity.result.ActivityResult\r\nimport androidx.activity.result.ActivityResultLauncher\r\nimport androidx.activity.result.contract.ActivityResultContracts\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.content.FileProvider\r\nimport androidx.fragment.app.DialogFragment\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.example.eggenda.MyViewModel\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.Util\r\nimport java.io.File\r\n\r\nclass ProfileActivity: AppCompatActivity() {\r\n    companion object {\r\n        const val FEMALE = 0\r\n        const val MALE = 1\r\n        const val DIALOG_KEY = \"dialog\"\r\n        const val PHOTO_DIALOG = 4\r\n    }\r\n\r\n    private lateinit var userName: EditText\r\n    private lateinit var firstName: EditText\r\n    private lateinit var lastName: EditText\r\n    private lateinit var emailPhone: EditText\r\n    private lateinit var dateBirth: EditText\r\n    private lateinit var country: EditText\r\n    private lateinit var saveProfile: Button\r\n    private lateinit var cancelProfile: Button\r\n\r\n    private lateinit var imageView: ImageView\r\n    private lateinit var button: Button\r\n    private lateinit var tempImgUri: Uri\r\n    private lateinit var imgUri: Uri\r\n    private lateinit var myViewModel: MyViewModel\r\n    private lateinit var cameraResult: ActivityResultLauncher<Intent>\r\n    private val tempImgFileName = \"temp.jpg\"\r\n    private val imgFileName = \"profile.jpg\"\r\n    private var profileImagePath: String? = null\r\n    private lateinit var tempImgFile: File\r\n    private lateinit var profileImgFile: File\r\n    private var isPhotoChange: Boolean = false\r\n    private lateinit var sharedPreferences: SharedPreferences\r\n    private lateinit var galleryResult: ActivityResultLauncher<Intent>\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.profile)\r\n\r\n        //initialize variables\r\n        userName = findViewById(R.id.edit_username)\r\n        firstName = findViewById(R.id.edit_first_name)\r\n        lastName = findViewById(R.id.edit_last_name)\r\n        emailPhone = findViewById(R.id.edit_email_phone)\r\n        dateBirth = findViewById(R.id.edit_birth)\r\n        country = findViewById(R.id.edit_country)\r\n        imageView = findViewById(R.id.profile_photo)\r\n        button = findViewById(R.id.btnChangePhoto)\r\n        saveProfile = findViewById(R.id.save_profile)\r\n        cancelProfile = findViewById(R.id.cancel_profile)\r\n        sharedPreferences = getSharedPreferences(\"profile\", MODE_PRIVATE)\r\n\r\n        //retrieve saved data on startup\r\n        loadProfile()\r\n        println(\"profile successfully loaded onto screen\")\r\n\r\n        //Profile Photo setup\r\n        Util.checkPermissions(this)\r\n\r\n        tempImgFile = File(getExternalFilesDir(null), tempImgFileName)\r\n        tempImgUri = FileProvider.getUriForFile(this, \"com.example.eggenda\", tempImgFile)\r\n\r\n        profileImgFile = File(getExternalFilesDir(null), imgFileName)\r\n        imgUri = FileProvider.getUriForFile(this, \"com.example.eggenda\", profileImgFile)\r\n\r\n        //implement button prompting camera\r\n        button.setOnClickListener() {\r\n            println(\"change profile photo button clicked\")\r\n            showMyDialogFragment(PHOTO_DIALOG, \"Pick Profile Picture\")\r\n        }\r\n\r\n        //initialize gallery activity result\r\n        galleryResult = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result: ActivityResult ->\r\n            if(result.resultCode == Activity.RESULT_OK) {\r\n                //get uri of image\r\n                result.data?.data?.let { uri ->\r\n                    //read image through input stream\r\n                    val inputStream = contentResolver.openInputStream(uri)\r\n                    //write image to tempImgFile\r\n                    tempImgFile.outputStream().use { outputStream->\r\n                        inputStream?.copyTo(outputStream)\r\n                    }\r\n                    //create bitmap\r\n                    val bitmap = Util.getBitmap(this, tempImgUri)\r\n                    setProfilePhoto(bitmap)\r\n                    println(\"Image successfully loaded onto screen\")\r\n                }\r\n            }\r\n        }\r\n\r\n        //initialize gallery activity result\r\n        cameraResult = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result: ActivityResult ->\r\n            if (result.resultCode == Activity.RESULT_OK) {\r\n                println(\"first camera result call\")\r\n                //read image details and create bitmap\r\n                val exifInterface = ExifInterface(tempImgFile.absolutePath)\r\n                val orientation = exifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION, 1)\r\n                val bitmap = Util.getBitmap(this, tempImgUri)\r\n                println(\"orientation: $orientation\")\r\n\r\n                //rotate when needed\r\n                val matrix = Matrix()\r\n                when(orientation) {\r\n                    ExifInterface.ORIENTATION_ROTATE_90 -> matrix.postRotate(90f)\r\n                    ExifInterface.ORIENTATION_ROTATE_180 -> matrix.postRotate(180f)\r\n                    ExifInterface.ORIENTATION_ROTATE_270 -> matrix.postRotate(270f)\r\n                    ExifInterface.ORIENTATION_NORMAL, 1 -> {}\r\n                    else -> {\r\n                        matrix.postRotate(0f)\r\n                    }\r\n                }\r\n                //create correct orientation of image\r\n                val rotated = Bitmap.createBitmap(bitmap, 0, 0, bitmap.width, bitmap.height, matrix, true)\r\n                setProfilePhoto(rotated)\r\n            }\r\n        }\r\n\r\n        //\r\n        myViewModel = ViewModelProvider(this).get(MyViewModel::class.java)\r\n        myViewModel.userImage.observe(this) {\r\n            imageView.setImageBitmap(it)\r\n            println(\"new photo set to view\")\r\n        }\r\n\r\n        //save button feature\r\n        saveProfile.setOnClickListener {\r\n            saveProfile()\r\n            println(\"profile saved\")\r\n            Toast.makeText(this, \"Saved\", Toast.LENGTH_SHORT).show()\r\n            finish()\r\n        }\r\n\r\n        //cancel button feature\r\n        cancelProfile.setOnClickListener {\r\n            //don't save any changes\r\n            println(\"not saving profile\")\r\n            finish()\r\n        }\r\n    }\r\n\r\n    class MyRunsDialogFragment : DialogFragment(), DialogInterface.OnClickListener {\r\n        override fun onCreateDialog(savedInstanceState: Bundle?): Dialog {\r\n            //get arguments and dialog details\r\n            lateinit var ret: Dialog\r\n            val bundle = arguments\r\n            val dialogId = bundle?.getInt(DIALOG_KEY)\r\n            val title = bundle?.getString(\"TITLE\") ?: \"My Title\"\r\n            val builder = AlertDialog.Builder(requireActivity())\r\n\r\n            if(dialogId == PHOTO_DIALOG) {\r\n                val view: View = requireActivity().layoutInflater.inflate(\r\n                    R.layout.dialog_photo,\r\n                    null\r\n                )\r\n                builder.setView(view)\r\n                builder.setTitle(title)\r\n\r\n                //get buttons\r\n                val galleryBtn : Button = view.findViewById(R.id.chooseGallery)\r\n                val photoBtn : Button = view.findViewById(R.id.choosePhoto)\r\n\r\n                //open gallery if button pressed\r\n                galleryBtn.setOnClickListener{\r\n                    (activity as? ProfileActivity)?.openGallery()\r\n                    dismiss()\r\n                }\r\n\r\n                //open camera if button pressed\r\n                photoBtn.setOnClickListener{\r\n                    (activity as? ProfileActivity)?.takePhoto()\r\n                    dismiss()\r\n                }\r\n                ret = builder.create()\r\n            }\r\n            return ret\r\n        }\r\n\r\n        //function when buttons are clicked\r\n        override fun onClick(dialog: DialogInterface, item: Int) {\r\n            if(item == Dialog.BUTTON_POSITIVE) {\r\n                Toast.makeText(activity, \"Input Saved\", Toast.LENGTH_LONG).show()\r\n                println(\"fragment positive button clicked\")\r\n            }\r\n            if(item == DialogInterface.BUTTON_NEGATIVE) {\r\n                Toast.makeText(activity, \"Input cancelled\", Toast.LENGTH_LONG).show()\r\n                println(\"fragment negative button clicked\")\r\n            }\r\n        }\r\n    }\r\n\r\n    //show dialog fragment\r\n    private fun showMyDialogFragment(dialogType: Int, title: String) {\r\n        val myDialog = MyRunsDialogFragment()\r\n        val bundle = Bundle().apply {\r\n            putInt(DIALOG_KEY, dialogType)\r\n            putString(\"TITLE\", title)\r\n        }\r\n        myDialog.arguments = bundle\r\n        myDialog.show(supportFragmentManager, \"my_dialog\")\r\n    }\r\n\r\n    //function to open gallery and call activity result to display photo\r\n    private fun openGallery() {\r\n        val intent = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)\r\n        galleryResult.launch(intent)\r\n        println(\"gallery opened\")\r\n    }\r\n\r\n    //function to open camera and take photo then call activity result to display photo\r\n    private fun takePhoto() {\r\n        val intent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\r\n        intent.putExtra(MediaStore.EXTRA_OUTPUT, tempImgUri)\r\n        cameraResult.launch(intent)\r\n        println(\"camera launched\")\r\n    }\r\n\r\n    //function to set profile photo onto screen\r\n    private fun setProfilePhoto(bitmap: Bitmap) {\r\n        println(\"set profile photo\")\r\n        myViewModel.userImage.value = bitmap\r\n        isPhotoChange = true\r\n        imageView.setImageBitmap(bitmap)\r\n    }\r\n\r\n    //function to load saved profile to screen\r\n    private fun loadProfile() {\r\n        profileImagePath = sharedPreferences.getString(\"profileImagePath\", null)\r\n\r\n        //load saved data\r\n        if (profileImagePath != null) {\r\n            val ogFile = File(profileImagePath!!)\r\n            if (ogFile.exists()) {\r\n                val bitmap = BitmapFactory.decodeFile(ogFile.absolutePath)\r\n                imageView.setImageBitmap(bitmap)\r\n            }\r\n        }\r\n\r\n        //get saved data\r\n        val savedUsername = sharedPreferences.getString(\"username\", \"\")\r\n        val savedfirstName = sharedPreferences.getString(\"firstName\", \"\")\r\n        val savedlastName = sharedPreferences.getString(\"lastName\", \"\")\r\n        val savedEmailPhone = sharedPreferences.getString(\"emailPhone\", \"\")\r\n        val savedBirth = sharedPreferences.getString(\"dateBirth\", \"\")\r\n        val savedCountry = sharedPreferences.getString(\"country\", \"\")\r\n\r\n        //load data onto screen\r\n        userName.setText(savedUsername)\r\n        firstName.setText(savedfirstName)\r\n        lastName.setText(savedlastName)\r\n        emailPhone.setText(savedEmailPhone)\r\n        dateBirth.setText(savedBirth)\r\n        country.setText(savedCountry)\r\n    }\r\n\r\n    //function to save profile settings\r\n    private fun saveProfile() {\r\n        //extract inputted data\r\n        val username = userName.text.toString()\r\n        val first = firstName.text.toString()\r\n        val last = lastName.text.toString()\r\n        val ep = emailPhone.text.toString()\r\n        val birth = dateBirth.text.toString()\r\n        val country2 = country.text.toString()\r\n\r\n        //only update file path if a photo was taken\r\n        if(isPhotoChange) {\r\n            tempImgFile.copyTo(profileImgFile, overwrite = true)\r\n            profileImagePath = profileImgFile.path\r\n        }\r\n\r\n        //log profile values\r\n        println(\"username: $username\")\r\n        println(\"first name: $first\")\r\n        println(\"last name: $last\")\r\n        println(\"email/phone: $ep\")\r\n        println(\"date of birth: $birth\")\r\n        println(\"country: $country2\")\r\n\r\n        //save changes\r\n        val editor = sharedPreferences.edit()\r\n        editor.putString(\"username\", username)\r\n        editor.putString(\"firstName\", first)\r\n        editor.putString(\"lastName\", last)\r\n        editor.putString(\"emailPhone\", ep)\r\n        editor.putString(\"dateBirth\", birth)\r\n        editor.putString(\"country\", country2)\r\n        editor.putString(\"profileImagePath\", profileImagePath)\r\n        editor.apply()\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/eggenda/ui/settings/ProfileActivity.kt b/app/src/main/java/com/example/eggenda/ui/settings/ProfileActivity.kt
----- a/app/src/main/java/com/example/eggenda/ui/settings/ProfileActivity.kt	(revision 0a42b132300258816e221681938e46ceb836ac79)
--+++ b/app/src/main/java/com/example/eggenda/ui/settings/ProfileActivity.kt	(date 1731035688128)
--@@ -32,8 +32,6 @@
-- 
-- class ProfileActivity: AppCompatActivity() {
--     companion object {
---        const val FEMALE = 0
---        const val MALE = 1
--         const val DIALOG_KEY = "dialog"
--         const val PHOTO_DIALOG = 4
--     }
--Index: app/src/main/res/layout/profile.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/yellow\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        android:layout_marginHorizontal=\"20dp\">\r\n\r\n        <!--profile photo-->\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            android:gravity=\"center\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/profile_photo\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:maxWidth=\"150dp\"\r\n                android:maxHeight=\"175dp\"\r\n                android:adjustViewBounds=\"true\"\r\n                android:layout_margin=\"10dp\"\r\n                android:src=\"@drawable/defaultprofile\"\r\n                android:scaleType=\"centerCrop\">\r\n            </ImageView>\r\n\r\n            <Button\r\n                android:id=\"@+id/btnChangePhoto\"\r\n                android:backgroundTint=\"@color/bold_yellow\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_margin=\"5dp\"\r\n                android:text=\"@string/edit_button\"\r\n                android:textSize=\"18sp\"\r\n                android:fontFamily=\"@font/titan_one\"\r\n                />\r\n\r\n        </LinearLayout>\r\n\r\n        <!--username-->\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"90dp\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"#4A3109\"\r\n                android:text=\"@string/username_header\"\r\n                android:textSize=\"16sp\"\r\n                android:fontFamily=\"@font/titan_one\"\r\n                />\r\n\r\n            <EditText\r\n                android:id=\"@+id/edit_username\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:inputType=\"text\"\r\n                android:textSize=\"16sp\"\r\n                android:background=\"@drawable/edit_text_border\"\r\n                android:text=\"@string/username_hint\"\r\n                android:paddingStart=\"16dp\"\r\n                android:textColor=\"@color/dark_blue\"\r\n                android:fontFamily=\"@font/dangrek_font\"/>\r\n        </LinearLayout>\r\n\r\n        <!--first name-->\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"90dp\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"#4A3109\"\r\n                android:text=\"@string/first_name_header\"\r\n                android:textSize=\"16sp\"\r\n                android:fontFamily=\"@font/titan_one\"/>\r\n\r\n            <EditText\r\n                android:id=\"@+id/edit_first_name\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:inputType=\"text\"\r\n                android:textSize=\"16sp\"\r\n                android:background=\"@drawable/edit_text_border\"\r\n                android:text=\"@string/first_name_hint\"\r\n                android:paddingStart=\"16dp\"\r\n                android:textColor=\"@color/dark_blue\"\r\n                android:fontFamily=\"@font/dangrek_font\"/>\r\n        </LinearLayout>\r\n\r\n        <!--last name-->\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"90dp\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"#4A3109\"\r\n                android:text=\"@string/last_name_header\"\r\n                android:textSize=\"16sp\"\r\n                android:fontFamily=\"@font/titan_one\"/>\r\n\r\n            <EditText\r\n                android:id=\"@+id/edit_last_name\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:inputType=\"text\"\r\n                android:textSize=\"16sp\"\r\n                android:background=\"@drawable/edit_text_border\"\r\n                android:text=\"@string/last_name_hint\"\r\n                android:paddingStart=\"16dp\"\r\n                android:textColor=\"@color/dark_blue\"\r\n                android:fontFamily=\"@font/dangrek_font\"/>\r\n        </LinearLayout>\r\n\r\n        <!--email/phone-->\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"90dp\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"#4A3109\"\r\n                android:text=\"@string/e_mail_phone_header\"\r\n                android:textSize=\"16sp\"\r\n                android:fontFamily=\"@font/titan_one\"/>\r\n\r\n            <EditText\r\n                android:id=\"@+id/edit_email_phone\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:inputType=\"text\"\r\n                android:textSize=\"16sp\"\r\n                android:background=\"@drawable/edit_text_border\"\r\n                android:text=\"@string/e_mail_phone_hint\"\r\n                android:paddingStart=\"16dp\"\r\n                android:textColor=\"@color/dark_blue\"\r\n                android:fontFamily=\"@font/dangrek_font\"/>\r\n        </LinearLayout>\r\n\r\n        <!--Date of Birth-->\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"90dp\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"#4A3109\"\r\n                android:text=\"@string/date_of_birth_header\"\r\n                android:textSize=\"16sp\"\r\n                android:fontFamily=\"@font/titan_one\"/>\r\n\r\n            <EditText\r\n                android:id=\"@+id/edit_birth\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:inputType=\"text\"\r\n                android:textSize=\"16sp\"\r\n                android:background=\"@drawable/edit_text_border\"\r\n                android:text=\"@string/birth_hint\"\r\n                android:paddingStart=\"16dp\"\r\n                android:textColor=\"@color/dark_blue\"\r\n                android:fontFamily=\"@font/dangrek_font\"/>\r\n        </LinearLayout>\r\n\r\n        <!--country-->\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"90dp\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"#4A3109\"\r\n                android:text=\"@string/country_header\"\r\n                android:textSize=\"16sp\"\r\n                android:fontFamily=\"@font/titan_one\"/>\r\n\r\n            <EditText\r\n                android:id=\"@+id/edit_country\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:inputType=\"text\"\r\n                android:textSize=\"16sp\"\r\n                android:background=\"@drawable/edit_text_border\"\r\n                android:text=\"@string/country_hint\"\r\n                android:paddingStart=\"16dp\"\r\n                android:textColor=\"@color/dark_blue\"\r\n                android:fontFamily=\"@font/dangrek_font\"/>\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            android:paddingBottom=\"16dp\">\r\n\r\n            <Button\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"0.5\"\r\n                android:layout_margin=\"16dp\"\r\n                android:id=\"@+id/save_profile\"\r\n                android:text=\"@string/save_button\"\r\n                android:textSize=\"18sp\"\r\n                android:fontFamily=\"@font/titan_one\"\r\n                android:backgroundTint=\"@color/bold_yellow\"/>\r\n\r\n            <Button\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"0.5\"\r\n                android:layout_margin=\"16dp\"\r\n                android:id=\"@+id/cancel_profile\"\r\n                android:text=\"@string/cancel_button\"\r\n                android:textSize=\"18sp\"\r\n                android:fontFamily=\"@font/titan_one\"\r\n                android:backgroundTint=\"@color/bold_yellow\"/>\r\n        </LinearLayout>\r\n\r\n    </LinearLayout>\r\n</ScrollView>\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/res/layout/profile.xml b/app/src/main/res/layout/profile.xml
----- a/app/src/main/res/layout/profile.xml	(revision 0a42b132300258816e221681938e46ceb836ac79)
--+++ b/app/src/main/res/layout/profile.xml	(date 1731884065932)
--@@ -65,7 +65,7 @@
--                 android:inputType="text"
--                 android:textSize="16sp"
--                 android:background="@drawable/edit_text_border"
---                android:text="@string/username_hint"
--+                android:hint="@string/username_hint"
--                 android:paddingStart="16dp"
--                 android:textColor="@color/dark_blue"
--                 android:fontFamily="@font/dangrek_font"/>
--@@ -92,7 +92,7 @@
--                 android:inputType="text"
--                 android:textSize="16sp"
--                 android:background="@drawable/edit_text_border"
---                android:text="@string/first_name_hint"
--+                android:hint="@string/first_name_hint"
--                 android:paddingStart="16dp"
--                 android:textColor="@color/dark_blue"
--                 android:fontFamily="@font/dangrek_font"/>
--@@ -119,7 +119,7 @@
--                 android:inputType="text"
--                 android:textSize="16sp"
--                 android:background="@drawable/edit_text_border"
---                android:text="@string/last_name_hint"
--+                android:hint="@string/last_name_hint"
--                 android:paddingStart="16dp"
--                 android:textColor="@color/dark_blue"
--                 android:fontFamily="@font/dangrek_font"/>
--@@ -146,7 +146,7 @@
--                 android:inputType="text"
--                 android:textSize="16sp"
--                 android:background="@drawable/edit_text_border"
---                android:text="@string/e_mail_phone_hint"
--+                android:hint="@string/e_mail_phone_hint"
--                 android:paddingStart="16dp"
--                 android:textColor="@color/dark_blue"
--                 android:fontFamily="@font/dangrek_font"/>
--@@ -173,7 +173,7 @@
--                 android:inputType="text"
--                 android:textSize="16sp"
--                 android:background="@drawable/edit_text_border"
---                android:text="@string/birth_hint"
--+                android:hint="@string/birth_hint"
--                 android:paddingStart="16dp"
--                 android:textColor="@color/dark_blue"
--                 android:fontFamily="@font/dangrek_font"/>
--@@ -200,7 +200,7 @@
--                 android:inputType="text"
--                 android:textSize="16sp"
--                 android:background="@drawable/edit_text_border"
---                android:text="@string/country_hint"
--+                android:hint="@string/country_hint"
--                 android:paddingStart="16dp"
--                 android:textColor="@color/dark_blue"
--                 android:fontFamily="@font/dangrek_font"/>
--Index: app/src/main/java/com/example/eggenda/MainActivity.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.eggenda\r\n\r\nimport android.content.Context\r\nimport android.os.Bundle\r\nimport android.view.Menu\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.android.material.navigation.NavigationView\r\nimport androidx.navigation.findNavController\r\nimport androidx.navigation.ui.AppBarConfiguration\r\nimport androidx.navigation.ui.navigateUp\r\nimport androidx.navigation.ui.setupActionBarWithNavController\r\nimport androidx.navigation.ui.setupWithNavController\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.example.eggenda.databinding.ActivityMainBinding\r\nimport java.util.Locale\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n\r\n    private lateinit var appBarConfiguration: AppBarConfiguration\r\n    private lateinit var binding: ActivityMainBinding\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        // Apply the selected language using LocaleHelper\r\n        println(\"getting persisted data in MainActivity\")\r\n        LocaleHelper.getPersistedData(this, Locale.getDefault().language)\r\n            ?.let { LocaleHelper.setLocale(this, it) }\r\n\r\n        binding = ActivityMainBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        setSupportActionBar(binding.appBarMain.toolbar)\r\n\r\n        // Mail icon in home screen\r\n//        binding.appBarMain.fab.setOnClickListener { view ->\r\n//            Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\r\n//                .setAction(\"Action\", null)\r\n//                .setAnchorView(R.id.fab).show()\r\n//        }\r\n        val drawerLayout: DrawerLayout = binding.drawerLayout\r\n        val navView: NavigationView = binding.navView\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        // Passing each menu ID as a set of Ids because each\r\n        // menu should be considered as top level destinations.\r\n        appBarConfiguration = AppBarConfiguration(\r\n            setOf(\r\n                R.id.nav_home, R.id.nav_gallery, R.id.nav_slideshow, R.id.nav_game\r\n            ), drawerLayout\r\n        )\r\n        setupActionBarWithNavController(navController, appBarConfiguration)\r\n        navView.setupWithNavController(navController)\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        menuInflater.inflate(R.menu.main, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onSupportNavigateUp(): Boolean {\r\n        val navController = findNavController(R.id.nav_host_fragment_content_main)\r\n        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()\r\n    }\r\n\r\n    override fun attachBaseContext(newBase: Context) {\r\n        // Set the locale using LocaleHelper based on the persisted language preference\r\n        val currentLanguage = LocaleHelper.getLanguage(newBase)\r\n        if (Locale.getDefault().language != currentLanguage) {\r\n            println(\"calling localeHelper from attachBaseContext\")\r\n            LocaleHelper.setLocale(newBase, currentLanguage)\r\n        }\r\n        super.attachBaseContext(LocaleHelper.onAttach(newBase))\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/eggenda/MainActivity.kt b/app/src/main/java/com/example/eggenda/MainActivity.kt
----- a/app/src/main/java/com/example/eggenda/MainActivity.kt	(revision 0a42b132300258816e221681938e46ceb836ac79)
--+++ b/app/src/main/java/com/example/eggenda/MainActivity.kt	(date 1731884942366)
--@@ -1,6 +1,7 @@
-- package com.example.eggenda
-- 
-- import android.content.Context
--+import android.content.Intent
-- import android.os.Bundle
-- import android.view.Menu
-- import com.google.android.material.snackbar.Snackbar
--@@ -13,6 +14,7 @@
-- import androidx.drawerlayout.widget.DrawerLayout
-- import androidx.appcompat.app.AppCompatActivity
-- import com.example.eggenda.databinding.ActivityMainBinding
--+import com.example.eggenda.ui.account.LoginActivity
-- import java.util.Locale
-- 
-- class MainActivity : AppCompatActivity() {
--@@ -23,6 +25,15 @@
--     override fun onCreate(savedInstanceState: Bundle?) {
--         super.onCreate(savedInstanceState)
-- 
--+        //start login page if user is not logged in
--+        val sharedPreferences = getSharedPreferences("account", MODE_PRIVATE)
--+        val isLoggedIn = sharedPreferences.getBoolean("isLoggedIn", false)
--+
--+        if(!isLoggedIn) {
--+            val intent = Intent(this, LoginActivity::class.java)
--+            startActivity(intent)
--+            finish()
--+        }
--         // Apply the selected language using LocaleHelper
--         println("getting persisted data in MainActivity")
--         LocaleHelper.getPersistedData(this, Locale.getDefault().language)
--Index: app/src/main/java/com/example/eggenda/ui/account/LoginActivity.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/eggenda/ui/account/LoginActivity.kt b/app/src/main/java/com/example/eggenda/ui/account/LoginActivity.kt
--new file mode 100644
----- /dev/null	(date 1731884808367)
--+++ b/app/src/main/java/com/example/eggenda/ui/account/LoginActivity.kt	(date 1731884808367)
--@@ -0,0 +1,50 @@
--+package com.example.eggenda.ui.account
--+
--+import android.content.Intent
--+import android.content.SharedPreferences
--+import android.os.Bundle
--+import android.widget.Button
--+import android.widget.EditText
--+import android.widget.Toast
--+import androidx.appcompat.app.AppCompatActivity
--+import com.example.eggenda.MainActivity
--+import com.example.eggenda.R
--+
--+class LoginActivity : AppCompatActivity() {
--+    private lateinit var username: EditText
--+    private lateinit var password: EditText
--+    private lateinit var loginBtn: Button
--+    private lateinit var sharedPreferences: SharedPreferences
--+
--+    override fun onCreate(savedInstanceState: Bundle?) {
--+        super.onCreate(savedInstanceState)
--+        setContentView(R.layout.activity_login)
--+
--+        username = findViewById(R.id.username_input)
--+        password = findViewById(R.id.password_input)
--+        loginBtn = findViewById(R.id.login_btn)
--+        sharedPreferences = getSharedPreferences("account", MODE_PRIVATE)
--+
--+        //once decide to login
--+        loginBtn.setOnClickListener {
--+            val user = username.text.toString().trim()
--+            val pw = password.text.toString().trim()
--+
--+            //if valid input then save username and password and keep logged in
--+            if(user.isNotEmpty() && pw.isNotEmpty()) {
--+                val editor = sharedPreferences.edit()
--+                editor.putBoolean("isLoggedIn", true)
--+                editor.putString("username", user)
--+                editor.putString("password", pw)
--+                editor.apply()
--+
--+                //start app
--+                val intent = Intent(this, MainActivity::class.java)
--+                startActivity(intent)
--+                finish()
--+            } else {
--+                Toast.makeText(this, "Invalid Input", Toast.LENGTH_SHORT).show()
--+            }
--+        }
--+    }
--+}
--\ No newline at end of file
--Index: app/src/main/res/values/strings.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><resources>\r\n    <string name=\"app_name\">Eggenda</string>\r\n    <string name=\"navigation_drawer_open\">Open navigation drawer</string>\r\n    <string name=\"navigation_drawer_close\">Close navigation drawer</string>\r\n    <string name=\"nav_header_title\">Android Studio</string>\r\n    <string name=\"nav_header_subtitle\">android.studio@android.com</string>\r\n    <string name=\"nav_header_desc\">Navigation header</string>\r\n    <string name=\"action_settings\">Settings</string>\r\n\r\n    <string name=\"menu_home\">Home</string>\r\n    <string name=\"menu_gallery\">Gallery</string>\r\n    <string name=\"menu_slideshow\">Slideshow</string>\r\n    <string name=\"gallery_choice\">Choose from Gallery</string>\r\n    <string name=\"photo_choice\">Take a Photo</string>\r\n    <string name=\"settings_title\">Settings</string>\r\n    <string name=\"game_start\">Start</string>\r\n    <string name=\"game_label\">Game</string>\r\n    <string name=\"display_name\">John Smith</string>\r\n    <string name=\"hatch_progress\">Hatch Progress: ??%</string>\r\n    <string name=\"new_quest\">New Quest</string>\r\n    <string name=\"quest_board\">Quest Board</string>\r\n    <string name=\"nq_title\">New Quest</string>\r\n    <string name=\"nq_subtitle\">Make your quest easier with our reminders</string>\r\n    <string name=\"deadline\">Deadline</string>\r\n    <string name=\"date\">DD/MM/YY</string>\r\n    <string name=\"accept\">Accept</string>\r\n    <string name=\"decline\">Decline</string>\r\n    <string name=\"experience\">Experience: 0/100</string>\r\n    <string name=\"gain_xp\">Gain XP</string>\r\n    <string name=\"task\">Task</string>\r\n    <string name=\"create_a_task\">Create a task</string>\r\n    <string name=\"time_limit\">Time Limit</string>\r\n    <string name=\"time_format\">HH:MM:SS</string>\r\n    <string name=\"details\">Details</string>\r\n    <string name=\"write_here\">Write here...</string>\r\n    <string name=\"attachments\">Attachments</string>\r\n    <string name=\"max_20mb\">Max 20mb</string>\r\n    <string name=\"user_profile_header\">User Profile</string>\r\n    <string name=\"language_header\">Language</string>\r\n    <string name=\"conditions_header\">Terms and Conditions</string>\r\n    <string name=\"edit_button\">Edit</string>\r\n    <string name=\"username_header\">Username</string>\r\n    <string name=\"username_hint\" translatable=\"false\">JohnSmith</string>\r\n    <string name=\"first_name_header\">First Name</string>\r\n    <string name=\"first_name_hint\" translatable=\"false\">John</string>\r\n    <string name=\"last_name_header\">Last Name</string>\r\n    <string name=\"last_name_hint\" translatable=\"false\">Smith</string>\r\n    <string name=\"e_mail_phone_header\">E-mail/Phone</string>\r\n    <string name=\"e_mail_phone_hint\" translatable=\"false\">E-mail/Phone</string>\r\n    <string name=\"date_of_birth_header\">Date of Birth</string>\r\n    <string name=\"birth_hint\" translatable=\"false\">dd/mm/yy</string>\r\n    <string name=\"country_header\">Country</string>\r\n    <string name=\"country_hint\" translatable=\"false\">ex. Canada</string>\r\n    <string name=\"save_button\">Save</string>\r\n    <string name=\"cancel_button\">Cancel</string>\r\n    <string name=\"logout\">Log Out\\n</string>\r\n    <string name=\"terms_conditions_details\" translatable=\"false\">terms and conditions</string>\r\n    <string name=\"game\">Start Game</string>\r\n\r\n    <string-array name=\"language_options\">\r\n        <item>English</item>\r\n        <item>Chinese</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"language_values\">\r\n        <item>en</item>\r\n        <item>zh</item>\r\n    </string-array>\r\n\r\n</resources>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
----- a/app/src/main/res/values/strings.xml	(revision 0a42b132300258816e221681938e46ceb836ac79)
--+++ b/app/src/main/res/values/strings.xml	(date 1731884226688)
--@@ -56,6 +56,8 @@
--     <string name="logout">Log Out\n</string>
--     <string name="terms_conditions_details" translatable="false">terms and conditions</string>
--     <string name="game">Start Game</string>
--+    <string name="password_hint">Password</string>
--+    <string name="login_button">Login</string>
-- 
--     <string-array name="language_options">
--         <item>English</item>
--Index: app/src/main/res/layout/activity_login.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/res/layout/activity_login.xml b/app/src/main/res/layout/activity_login.xml
--new file mode 100644
----- /dev/null	(date 1731884263758)
--+++ b/app/src/main/res/layout/activity_login.xml	(date 1731884263758)
--@@ -0,0 +1,57 @@
--+<?xml version="1.0" encoding="utf-8"?>
--+<RelativeLayout
--+    xmlns:android="http://schemas.android.com/apk/res/android"
--+    xmlns:app="http://schemas.android.com/apk/res-auto"
--+    xmlns:tools="http://schemas.android.com/tools"
--+    android:layout_width="match_parent"
--+    android:layout_height="match_parent"
--+    android:background="@color/yellow"
--+    android:gravity="center"
--+    android:padding="16dp"
--+    tools:context=".ui.account.LoginActivity">
--+    
--+    <LinearLayout
--+        android:layout_width="match_parent"
--+        android:layout_height="wrap_content"
--+        android:gravity="center"
--+        android:orientation="vertical">
--+        
--+        <ImageView
--+            android:layout_width="160dp"
--+            android:layout_height="160dp"
--+            android:src="@drawable/app_icon"/>
--+
--+        <EditText
--+            android:layout_width="match_parent"
--+            android:layout_height="wrap_content"
--+            android:hint="@string/username_header"
--+            android:textSize="20sp"
--+            android:background="@drawable/edit_text_border"
--+            android:padding="18dp"
--+            android:layout_marginVertical="16dp"
--+            android:inputType="text"
--+            android:id="@+id/username_input"
--+            android:fontFamily="@font/dangrek_font"/>
--+
--+        <EditText
--+            android:layout_width="match_parent"
--+            android:layout_height="wrap_content"
--+            android:hint="@string/password_hint"
--+            android:textSize="20sp"
--+            android:background="@drawable/edit_text_border"
--+            android:padding="18dp"
--+            android:inputType="textPassword"
--+            android:id="@+id/password_input"
--+            android:fontFamily="@font/dangrek_font"/>
--+
--+        <Button
--+            android:id="@+id/login_btn"
--+            android:layout_width="wrap_content"
--+            android:layout_height="wrap_content"
--+            android:text="@string/login_button"
--+            android:textSize="24sp"
--+            android:fontFamily="@font/titan_one"
--+            android:padding="14dp"
--+            android:layout_margin="16dp"/>
--+    </LinearLayout>
--+</RelativeLayout>
--\ No newline at end of file
--Index: app/src/main/java/com/example/eggenda/Util.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.eggenda\r\n\r\nimport android.Manifest\r\nimport android.app.Activity\r\nimport android.content.Context\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Bitmap\r\nimport android.graphics.BitmapFactory\r\nimport android.graphics.Matrix\r\nimport android.net.Uri\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\n\r\nobject Util {\r\n    fun checkPermissions(activity: Activity?) {\r\n        if (ContextCompat.checkSelfPermission(activity!!, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(activity, arrayOf(Manifest.permission.CAMERA), 0)\r\n        }\r\n\r\n        if(ContextCompat.checkSelfPermission(activity!!, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(activity, arrayOf(Manifest.permission.READ_EXTERNAL_STORAGE), 1)\r\n        }\r\n    }\r\n\r\n\r\n    fun getBitmap(context: Context, imgUri: Uri): Bitmap {\r\n        var bitmap = BitmapFactory.decodeStream(context.contentResolver.openInputStream(imgUri))\r\n        val matrix = Matrix()\r\n        var ret = Bitmap.createBitmap(bitmap, 0, 0, bitmap.width, bitmap.height, matrix, true)\r\n        return ret\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/eggenda/Util.kt b/app/src/main/java/com/example/eggenda/Util.kt
----- a/app/src/main/java/com/example/eggenda/Util.kt	(revision 0a42b132300258816e221681938e46ceb836ac79)
--+++ b/app/src/main/java/com/example/eggenda/Util.kt	(date 1731035688106)
--@@ -22,7 +22,6 @@
--         }
--     }
-- 
---
--     fun getBitmap(context: Context, imgUri: Uri): Bitmap {
--         var bitmap = BitmapFactory.decodeStream(context.contentResolver.openInputStream(imgUri))
--         val matrix = Matrix()
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/.idea/misc.xml	(date 1732491322689)
-@@ -1,4 +1,3 @@
--<?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="ExternalStorageConfigurationManager" enabled="true" />
-   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
-Index: .idea/deploymentTargetSelector.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
---- a/.idea/deploymentTargetSelector.xml	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/.idea/deploymentTargetSelector.xml	(date 1732491695212)
-@@ -4,6 +4,14 @@
-     <selectionStates>
-       <SelectionState runConfigName="app">
-         <option name="selectionMode" value="DROPDOWN" />
-+        <DropdownSelection timestamp="2024-11-24T23:35:41.458874Z">
-+          <Target type="DEFAULT_BOOT">
-+            <handle>
-+              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\User\.android\avd\Medium_Phone_API_31.avd" />
-+            </handle>
-+          </Target>
-+        </DropdownSelection>
-+        <DialogSelection />
-       </SelectionState>
-     </selectionStates>
-   </component>
-Index: .idea/gradle.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#GRADLE_LOCAL_JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/gradle.xml b/.idea/gradle.xml
---- a/.idea/gradle.xml	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/.idea/gradle.xml	(date 1732485276971)
-@@ -4,6 +4,7 @@
-   <component name="GradleSettings">
-     <option name="linkedExternalProjectsSettings">
-       <GradleProjectSettings>
-+        <option name="testRunner" value="CHOOSE_PER_TEST" />
-         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-         <option name="gradleJvm" value="#GRADLE_LOCAL_JAVA_HOME" />
-         <option name="modules">
-Index: app/src/main/res/layout/gallery_pet_items_frame.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/gallery_unit_frame\"\r\n    android:layout_width=\"150dp\"\r\n    android:layout_height=\"150dp\"\r\n    android:background=\"@drawable/game_stroke_background\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:padding=\"4dp\"\r\n        android:scaleType=\"centerInside\"\r\n        />\r\n\r\n    <!-- Gray Overlay -->\r\n    <View\r\n        android:id=\"@+id/petOverlay\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/disabled_color\"\r\n        android:visibility=\"gone\" />\r\n\r\n</FrameLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/gallery_pet_items_frame.xml b/app/src/main/res/layout/gallery_pet_items_frame.xml
---- a/app/src/main/res/layout/gallery_pet_items_frame.xml	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/app/src/main/res/layout/gallery_pet_items_frame.xml	(date 1732440625968)
-@@ -3,8 +3,8 @@
-     xmlns:app="http://schemas.android.com/apk/res-auto"
-     xmlns:tools="http://schemas.android.com/tools"
-     android:id="@+id/gallery_unit_frame"
--    android:layout_width="150dp"
--    android:layout_height="150dp"
-+    android:layout_width="100dp"
-+    android:layout_height="100dp"
-     android:background="@drawable/game_stroke_background">
- 
-     <ImageView
-@@ -12,8 +12,8 @@
-         android:layout_width="match_parent"
-         android:layout_height="match_parent"
-         android:padding="4dp"
--        android:scaleType="centerInside"
--        />
-+        android:src="@drawable/game_enemy_goblin"
-+        android:scaleType="centerInside" />
- 
-     <!-- Gray Overlay -->
-     <View
-Index: app/src/main/res/values/colors.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"purple_200\">#FFD798</color>\r\n    <color name=\"purple_500\">#FFB034</color>\r\n    <color name=\"purple_700\">#FF9B00</color>\r\n    <color name=\"teal_200\">#FFD798</color>\r\n    <color name=\"teal_700\">#FF9B00</color>\r\n    <color name=\"black\">#FF000000</color>\r\n    <color name=\"white\">#FFFFFFFF</color>\r\n    <color name=\"bold_yellow\">#FFB034</color>\r\n    <color name=\"yellow\">#FFEBCC</color>\r\n    <color name=\"dark_blue\">#1B1F31</color>\r\n    <color name=\"enable_color\">#FFB554</color>\r\n    <color name=\"gold_rare\">#EEFFDB59</color>\r\n    <color name=\"silver_rare\">#C0C0C0</color>\r\n    <color name=\"bronze_rare\">#B08D57</color>\r\n    <color name=\"fire\">#EEFF5959</color>\r\n    <color name=\"water\">#EE66A0FF</color>\r\n    <color name=\"forest\">#EE87FFAB</color>\r\n    <color name=\"disabled_color\">#A0A0A0</color>\r\n    <color name=\"link\">#1f9acf</color>\r\n    <color name=\"red\">#FD2222</color>\r\n    <color name=\"strike_through_color\">@color/bold_yellow</color> <!-- Red for strike-through -->\r\n    <color name=\"normal_text_color\">#FF0000</color>    <!-- Black for normal text -->\r\n    <color name=\"brown\">#4A310A</color>\r\n    <color name=\"dialog_btn_norm\">#BAFABB</color>\r\n    <color name=\"dialog_btn_norm1\">#60AF60</color>\r\n    <color name=\"dialog_btn_chosen\">#FF8181</color>\r\n    <color name=\"dialog_btn_chosen1\">#D44848</color>\r\n</resources>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
---- a/app/src/main/res/values/colors.xml	(revision e8ca78089929fdbc6a4c3f6a6d71d3fc219aef3a)
-+++ b/app/src/main/res/values/colors.xml	(date 1732493198376)
-@@ -17,7 +17,8 @@
-     <color name="fire">#EEFF5959</color>
-     <color name="water">#EE66A0FF</color>
-     <color name="forest">#EE87FFAB</color>
--    <color name="disabled_color">#A0A0A0</color>
-+    <color name="disabled_color">#D7D7D7</color>
-+<!--    <color name="disabled_color">#A0A0A0</color>-->
-     <color name="link">#1f9acf</color>
-     <color name="red">#FD2222</color>
-     <color name="strike_through_color">@color/bold_yellow</color> <!-- Red for strike-through -->
-@@ -27,4 +28,5 @@
-     <color name="dialog_btn_norm1">#60AF60</color>
-     <color name="dialog_btn_chosen">#FF8181</color>
-     <color name="dialog_btn_chosen1">#D44848</color>
-+    <color name="yellow_subbackground">#EAD7BF</color>
- </resources>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_02_PM__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_02_PM__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_02_PM__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_02_PM__Changes_1.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ /dev/null	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_11_23_2024_11_02_PM_[Changes]1" date="1732431773283" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_02_PM_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/23/2024 11:02 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/res/layout/gallery_pet_show.xml
===================================================================
diff --git a/app/src/main/res/layout/gallery_pet_show.xml b/app/src/main/res/layout/gallery_pet_show.xml
deleted file mode 100644
--- a/app/src/main/res/layout/gallery_pet_show.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ /dev/null	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="@color/yellow"
-    tools:context=".ui.gallery.GalleryFragment">
-
-
-    <TextView
-        android:id="@+id/gallery_text_view"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="Pet Gallery"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.154"
-        app:layout_constraintStart_toStartOf="parent"
-        tools:layout_editor_absoluteY="80dp" />
-
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/gallery_characterchoose_recyclerView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_weight="1"
-        app:layout_constraintBottom_toTopOf="@+id/guideline8"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="@+id/guideline8" />
-
-    <androidx.constraintlayout.widget.Guideline
-        android:id="@+id/guideline8"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        app:layout_constraintGuide_begin="289dp" />
-
-</androidx.constraintlayout.widget.ConstraintLayout>
-
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_23_2024_11_14_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_23_2024_11_14_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_11_23_2024_11_14_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_23_2024_11_14_PM_[Changes]/shelved.patch	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ /dev/null	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
@@ -1,34 +0,0 @@
-Index: gradle/libs.versions.toml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>[versions]\r\nagp = \"8.6.1\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.15.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nconstraintlayout = \"2.2.0\"\r\nlifecycleLivedataKtx = \"2.8.7\"\r\nlifecycleViewmodelKtx = \"2.8.7\"\r\nnavigationFragmentKtx = \"2.8.3\"\r\nnavigationUiKtx = \"2.8.3\"\r\ngson = \"2.11.0\"\r\n\r\npreferenceKtx = \"1.2.1\"\r\nactivity = \"1.9.2\"\r\nfirebaseCrashlyticsBuildtools = \"3.0.2\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nandroidx-constraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nandroidx-lifecycle-livedata-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-livedata-ktx\", version.ref = \"lifecycleLivedataKtx\" }\r\nandroidx-lifecycle-viewmodel-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-viewmodel-ktx\", version.ref = \"lifecycleViewmodelKtx\" }\r\nandroidx-navigation-fragment-ktx = { group = \"androidx.navigation\", name = \"navigation-fragment-ktx\", version.ref = \"navigationFragmentKtx\" }\r\nandroidx-navigation-ui-ktx = { group = \"androidx.navigation\", name = \"navigation-ui-ktx\", version.ref = \"navigationUiKtx\" }\r\ngson = {module = \"com.google.code.gson:gson\", version.ref = \"gson\"}\r\n\r\n\r\nandroidx-exifinterface = { group = \"androidx.exifinterface\", name = \"exifinterface\", version = \"1.3.7\" }\r\nandroidx-preference-ktx = { group = \"androidx.preference\", name = \"preference-ktx\", version.ref = \"preferenceKtx\" }\r\nandroidx-activity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nfirebase-crashlytics-buildtools = { group = \"com.google.firebase\", name = \"firebase-crashlytics-buildtools\", version.ref = \"firebaseCrashlyticsBuildtools\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\nkotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
---- a/gradle/libs.versions.toml	(revision b2f9a749af5c97c5a3039d1ba22c82936e405c56)
-+++ b/gradle/libs.versions.toml	(date 1732432457118)
-@@ -1,6 +1,6 @@
- [versions]
- agp = "8.6.1"
--kotlin = "1.9.0"
-+kotlin = "1.9.24"
- coreKtx = "1.15.0"
- junit = "4.13.2"
- junitVersion = "1.2.1"
-@@ -10,12 +10,12 @@
- constraintlayout = "2.2.0"
- lifecycleLivedataKtx = "2.8.7"
- lifecycleViewmodelKtx = "2.8.7"
--navigationFragmentKtx = "2.8.3"
--navigationUiKtx = "2.8.3"
-+navigationFragmentKtx = "2.8.4"
-+navigationUiKtx = "2.8.4"
- gson = "2.11.0"
- 
- preferenceKtx = "1.2.1"
--activity = "1.9.2"
-+activity = "1.9.3"
- firebaseCrashlyticsBuildtools = "3.0.2"
- 
- [libraries]
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_14_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_14_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_14_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_14_PM_[Changes]/shelved.patch	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ /dev/null	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
@@ -1,35 +0,0 @@
-Index: gradle/libs.versions.toml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>[versions]\r\nagp = \"8.6.1\"\r\nfirebaseBom = \"33.6.0\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.15.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nconstraintlayout = \"2.2.0\"\r\nlifecycleLivedataKtx = \"2.8.7\"\r\nlifecycleViewmodelKtx = \"2.8.7\"\r\nnavigationFragmentKtx = \"2.8.3\"\r\nnavigationUiKtx = \"2.8.3\"\r\ngson = \"2.11.0\"\r\n\r\npreferenceKtx = \"1.2.1\"\r\nactivity = \"1.9.2\"\r\nfirebaseCrashlyticsBuildtools = \"3.0.2\"\r\nroomCommon = \"2.6.1\"\r\nplayServicesMaps = \"19.0.0\"\r\nroomKtx = \"2.6.1\"\r\nfirebaseDatabaseKtx = \"21.0.0\"\r\nfirebaseAuthKtx = \"23.1.0\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\nandroidx-room-compiler = { module = \"androidx.room:room-compiler\", version.ref = \"roomCommon\" }\r\nandroidx-room-runtime = { module = \"androidx.room:room-runtime\", version.ref = \"roomCommon\" }\r\nfirebase-bom = { module = \"com.google.firebase:firebase-bom\", version.ref = \"firebaseBom\" }\r\nfirebase-analytics = { module = \"com.google.firebase:firebase-analytics\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nandroidx-constraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nandroidx-lifecycle-livedata-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-livedata-ktx\", version.ref = \"lifecycleLivedataKtx\" }\r\nandroidx-lifecycle-viewmodel-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-viewmodel-ktx\", version.ref = \"lifecycleViewmodelKtx\" }\r\nandroidx-navigation-fragment-ktx = { group = \"androidx.navigation\", name = \"navigation-fragment-ktx\", version.ref = \"navigationFragmentKtx\" }\r\nandroidx-navigation-ui-ktx = { group = \"androidx.navigation\", name = \"navigation-ui-ktx\", version.ref = \"navigationUiKtx\" }\r\ngson = {module = \"com.google.code.gson:gson\", version.ref = \"gson\"}\r\njbcrypt = \"org.mindrot:jbcrypt:0.4\"\r\n\r\nandroidx-exifinterface = { group = \"androidx.exifinterface\", name = \"exifinterface\", version = \"1.3.7\" }\r\nandroidx-preference-ktx = { group = \"androidx.preference\", name = \"preference-ktx\", version.ref = \"preferenceKtx\" }\r\nandroidx-activity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nfirebase-crashlytics-buildtools = { group = \"com.google.firebase\", name = \"firebase-crashlytics-buildtools\", version.ref = \"firebaseCrashlyticsBuildtools\" }\r\nandroidx-room-common = { group = \"androidx.room\", name = \"room-common\", version.ref = \"roomCommon\" }\r\nplay-services-maps = { group = \"com.google.android.gms\", name = \"play-services-maps\", version.ref = \"playServicesMaps\" }\r\nandroidx-room-ktx = { group = \"androidx.room\", name = \"room-ktx\", version.ref = \"roomKtx\" }\r\nfirebase-database-ktx = { group = \"com.google.firebase\", name = \"firebase-database-ktx\", version.ref = \"firebaseDatabaseKtx\" }\r\nfirebase-auth-ktx = { group = \"com.google.firebase\", name = \"firebase-auth-ktx\", version.ref = \"firebaseAuthKtx\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\nkotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
---- a/gradle/libs.versions.toml	(revision 2670201f5dd28a21b710fb77699d71fc0a08025d)
-+++ b/gradle/libs.versions.toml	(date 1732432328640)
-@@ -1,7 +1,7 @@
- [versions]
- agp = "8.6.1"
- firebaseBom = "33.6.0"
--kotlin = "1.9.0"
-+kotlin = "1.9.24"
- coreKtx = "1.15.0"
- junit = "4.13.2"
- junitVersion = "1.2.1"
-@@ -11,12 +11,12 @@
- constraintlayout = "2.2.0"
- lifecycleLivedataKtx = "2.8.7"
- lifecycleViewmodelKtx = "2.8.7"
--navigationFragmentKtx = "2.8.3"
--navigationUiKtx = "2.8.3"
-+navigationFragmentKtx = "2.8.4"
-+navigationUiKtx = "2.8.4"
- gson = "2.11.0"
- 
- preferenceKtx = "1.2.1"
--activity = "1.9.2"
-+activity = "1.9.3"
- firebaseCrashlyticsBuildtools = "3.0.2"
- roomCommon = "2.6.1"
- playServicesMaps = "19.0.0"
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_14_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_14_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_14_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_14_PM__Changes_.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ /dev/null	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_11_23_2024_11_14_PM_[Changes]" date="1732432457124" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_14_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/23/2024 11:14 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_23_2024_11_14_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_23_2024_11_14_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_11_23_2024_11_14_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_23_2024_11_14_PM__Changes_.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ /dev/null	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_11_23_2024_11_14_PM_[Changes]" date="1732432485164" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_23_2024_11_14_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 11/23/2024 11:14 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_02_PM_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_02_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_02_PM_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_23_2024_11_02_PM_[Changes]1/shelved.patch	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ /dev/null	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
@@ -1,110 +0,0 @@
-Index: gradle/libs.versions.toml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>[versions]\r\nagp = \"8.6.1\"\r\nfirebaseBom = \"33.6.0\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.15.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nconstraintlayout = \"2.2.0\"\r\nlifecycleLivedataKtx = \"2.8.7\"\r\nlifecycleViewmodelKtx = \"2.8.7\"\r\nnavigationFragmentKtx = \"2.8.3\"\r\nnavigationUiKtx = \"2.8.3\"\r\ngson = \"2.11.0\"\r\n\r\npreferenceKtx = \"1.2.1\"\r\nactivity = \"1.9.2\"\r\nfirebaseCrashlyticsBuildtools = \"3.0.2\"\r\nroomCommon = \"2.6.1\"\r\nplayServicesMaps = \"19.0.0\"\r\nroomKtx = \"2.6.1\"\r\nfirebaseDatabaseKtx = \"21.0.0\"\r\nfirebaseAuthKtx = \"23.1.0\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\nandroidx-room-compiler = { module = \"androidx.room:room-compiler\", version.ref = \"roomCommon\" }\r\nandroidx-room-runtime = { module = \"androidx.room:room-runtime\", version.ref = \"roomCommon\" }\r\nfirebase-bom = { module = \"com.google.firebase:firebase-bom\", version.ref = \"firebaseBom\" }\r\nfirebase-analytics = { module = \"com.google.firebase:firebase-analytics\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nandroidx-constraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nandroidx-lifecycle-livedata-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-livedata-ktx\", version.ref = \"lifecycleLivedataKtx\" }\r\nandroidx-lifecycle-viewmodel-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-viewmodel-ktx\", version.ref = \"lifecycleViewmodelKtx\" }\r\nandroidx-navigation-fragment-ktx = { group = \"androidx.navigation\", name = \"navigation-fragment-ktx\", version.ref = \"navigationFragmentKtx\" }\r\nandroidx-navigation-ui-ktx = { group = \"androidx.navigation\", name = \"navigation-ui-ktx\", version.ref = \"navigationUiKtx\" }\r\ngson = {module = \"com.google.code.gson:gson\", version.ref = \"gson\"}\r\njbcrypt = \"org.mindrot:jbcrypt:0.4\"\r\n\r\nandroidx-exifinterface = { group = \"androidx.exifinterface\", name = \"exifinterface\", version = \"1.3.7\" }\r\nandroidx-preference-ktx = { group = \"androidx.preference\", name = \"preference-ktx\", version.ref = \"preferenceKtx\" }\r\nandroidx-activity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nfirebase-crashlytics-buildtools = { group = \"com.google.firebase\", name = \"firebase-crashlytics-buildtools\", version.ref = \"firebaseCrashlyticsBuildtools\" }\r\nandroidx-room-common = { group = \"androidx.room\", name = \"room-common\", version.ref = \"roomCommon\" }\r\nplay-services-maps = { group = \"com.google.android.gms\", name = \"play-services-maps\", version.ref = \"playServicesMaps\" }\r\nandroidx-room-ktx = { group = \"androidx.room\", name = \"room-ktx\", version.ref = \"roomKtx\" }\r\nfirebase-database-ktx = { group = \"com.google.firebase\", name = \"firebase-database-ktx\", version.ref = \"firebaseDatabaseKtx\" }\r\nfirebase-auth-ktx = { group = \"com.google.firebase\", name = \"firebase-auth-ktx\", version.ref = \"firebaseAuthKtx\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\nkotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
---- a/gradle/libs.versions.toml	(revision 2670201f5dd28a21b710fb77699d71fc0a08025d)
-+++ b/gradle/libs.versions.toml	(date 1732431165437)
-@@ -1,7 +1,7 @@
- [versions]
--agp = "8.6.1"
-+agp = "8.7.2"
- firebaseBom = "33.6.0"
--kotlin = "1.9.0"
-+kotlin = "1.9.24"
- coreKtx = "1.15.0"
- junit = "4.13.2"
- junitVersion = "1.2.1"
-@@ -11,12 +11,12 @@
- constraintlayout = "2.2.0"
- lifecycleLivedataKtx = "2.8.7"
- lifecycleViewmodelKtx = "2.8.7"
--navigationFragmentKtx = "2.8.3"
--navigationUiKtx = "2.8.3"
-+navigationFragmentKtx = "2.8.4"
-+navigationUiKtx = "2.8.4"
- gson = "2.11.0"
- 
- preferenceKtx = "1.2.1"
--activity = "1.9.2"
-+activity = "1.9.3"
- firebaseCrashlyticsBuildtools = "3.0.2"
- roomCommon = "2.6.1"
- playServicesMaps = "19.0.0"
-Index: gradle/wrapper/gradle-wrapper.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>#Sat Nov 02 13:24:07 PDT 2024\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-8.7-bin.zip\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>ISO-8859-1
-===================================================================
-diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
---- a/gradle/wrapper/gradle-wrapper.properties	(revision 2670201f5dd28a21b710fb77699d71fc0a08025d)
-+++ b/gradle/wrapper/gradle-wrapper.properties	(date 1732428874823)
-@@ -1,6 +1,6 @@
- #Sat Nov 02 13:24:07 PDT 2024
- distributionBase=GRADLE_USER_HOME
- distributionPath=wrapper/dists
--distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-bin.zip
-+distributionUrl=https\://services.gradle.org/distributions/gradle-8.9-bin.zip
- zipStoreBase=GRADLE_USER_HOME
- zipStorePath=wrapper/dists
-Index: .idea/compiler.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"17\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/compiler.xml b/.idea/compiler.xml
---- a/.idea/compiler.xml	(revision 2670201f5dd28a21b710fb77699d71fc0a08025d)
-+++ b/.idea/compiler.xml	(date 1732428888340)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="CompilerConfiguration">
--    <bytecodeTargetLevel target="17" />
-+    <bytecodeTargetLevel target="21" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/gradle.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#GRADLE_LOCAL_JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/gradle.xml b/.idea/gradle.xml
---- a/.idea/gradle.xml	(revision 2670201f5dd28a21b710fb77699d71fc0a08025d)
-+++ b/.idea/gradle.xml	(date 1732429051874)
-@@ -4,6 +4,7 @@
-   <component name="GradleSettings">
-     <option name="linkedExternalProjectsSettings">
-       <GradleProjectSettings>
-+        <option name="testRunner" value="CHOOSE_PER_TEST" />
-         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-         <option name="gradleJvm" value="#GRADLE_LOCAL_JAVA_HOME" />
-         <option name="modules">
-Index: .idea/kotlinc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"KotlinJpsPluginSettings\">\r\n    <option name=\"version\" value=\"1.9.0\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/kotlinc.xml b/.idea/kotlinc.xml
---- a/.idea/kotlinc.xml	(revision 2670201f5dd28a21b710fb77699d71fc0a08025d)
-+++ b/.idea/kotlinc.xml	(date 1732431267056)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="KotlinJpsPluginSettings">
--    <option name="version" value="1.9.0" />
-+    <option name="version" value="1.9.24" />
-   </component>
- </project>
-\ No newline at end of file
Index: app/src/main/java/com/example/eggenda/ui/gallery/GalleryViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.ui.gallery\r\n\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.example.eggenda.gamePetChoose.GamePetChooseViewModel\r\nimport com.example.eggenda.gamePetChoose.SharedPreferenceManager\r\n\r\nclass GalleryViewModel : ViewModel() {\r\n    //getting Int array from pets Info\r\n    private val _allPets  = MutableLiveData<IntArray>()\r\n    val allPets : LiveData<IntArray> get() = _allPets\r\n\r\n    private val _currentSelectedPet = MutableLiveData<Int?>() // Null means no pet is selected\r\n    val currentSelectedPet: LiveData<Int?> = _currentSelectedPet\r\n\r\n    fun selectPet(petId: Int?) {\r\n        _currentSelectedPet.value = petId\r\n    }\r\n\r\n    fun clearSelection() {\r\n        _currentSelectedPet.value = null\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryViewModel.kt b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryViewModel.kt
--- a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryViewModel.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryViewModel.kt	(date 1733177686175)
@@ -15,12 +15,26 @@
     private val _currentSelectedPet = MutableLiveData<Int?>() // Null means no pet is selected
     val currentSelectedPet: LiveData<Int?> = _currentSelectedPet
 
+    private val _allMonster  = MutableLiveData<IntArray>()
+    val allMonster : LiveData<IntArray> get() = _allMonster
+
+    private val _currentSelectedMonster = MutableLiveData<Int?>() // Null means no pet is selected
+    val currentSelectedMonster: LiveData<Int?> = _currentSelectedMonster
+
     fun selectPet(petId: Int?) {
         _currentSelectedPet.value = petId
     }
 
-    fun clearSelection() {
+    fun selectMonster(monsterId: Int?) {
+        _currentSelectedMonster.value = monsterId
+    }
+
+    fun clearSelectionPets() {
         _currentSelectedPet.value = null
     }
 
+    fun clearSelectionMonster() {
+        _currentSelectedMonster.value = null
+    }
+
 }
\ No newline at end of file
Index: app/src/main/res/layout/game_pet_play_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"350dp\"\r\n    android:layout_height=\"550dp\"\r\n    android:orientation=\"vertical\"\r\n    android:gravity=\"center\"\r\n    android:id=\"@+id/game_dialog_root_layout\">\r\n\r\n    <View\r\n        android:id=\"@+id/game_dailog_background_view\"\r\n        android:layout_width=\"320dp\"\r\n        android:layout_height=\"30dp\"\r\n        android:background=\"@color/disabled_color\"\r\n        android:padding=\"3dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/titleHorLine\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintHorizontal_bias=\"0.485\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/titleHorLine\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/game_card_petName\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"Shy Raccoon\"\r\n        android:textSize=\"20sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/game_dailog_background_view\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/game_dailog_background_view\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/game_dailog_background_view\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/game_dailog_background_view\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/game_card_petId\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"004\"\r\n        android:textSize=\"20sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/game_dailog_background_view\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/game_card_petName\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/game_dailog_background_view\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/game_dailog_background_view\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/card_image_line\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_end=\"402dp\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/game_card_pet_bg\"\r\n        android:layout_width=\"310dp\"\r\n        android:layout_height=\"190dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/card_image_line\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintHorizontal_bias=\"0.464\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/card_image_line\"\r\n        app:layout_constraintVertical_bias=\"0.526\"\r\n        app:srcCompat=\"@drawable/a_card_bg\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/game_card_pet_image\"\r\n        android:layout_width=\"170dp\"\r\n        android:layout_height=\"170dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/card_image_line\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/game_card_pet_bg\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/card_image_line\"\r\n        app:srcCompat=\"@drawable/pet_c_shyraccoon\" />\r\n\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"Artist : Nelson Fang\"\r\n        android:textSize=\"15dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.093\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/descConsLay\"\r\n        app:layout_constraintVertical_bias=\"0.515\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/descConsLay\"\r\n        android:layout_width=\"320dp\"\r\n        android:layout_height=\"260dp\"\r\n        android:orientation=\"vertical\"\r\n        android:background=\"@color/disabled_color\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/descriptionBox_line\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintHorizontal_bias=\"0.581\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/descriptionBox_line\"\r\n        app:layout_constraintVertical_bias=\"0.458\">\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/game_dialog_petSkill_name\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"Skill Name\"\r\n            android:textSize=\"17sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/descHorLine\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintHorizontal_bias=\"0.528\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/descHorLine\"\r\n            app:layout_constraintVertical_bias=\"0.478\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/game_dialog_skillDescription\"\r\n            android:layout_width=\"290dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"Deal 100 water damage\\non the 5th turn\\nwhen this unit is placed on the board\"\r\n            android:textSize=\"14.5sp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/game_dialog_petSkill_name\" />\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/game_dialog_condition_title\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"Condition\"\r\n            android:textSize=\"17sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/game_dialog_skillDescription\" />\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/game_dialog_next_reminder\"\r\n            android:layout_width=\"290dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"5 more turn(s) to stay on the board                 jwlqlwkepo\"\r\n            android:textSize=\"14.5sp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/game_dialog_condition_title\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/game_dialog_next_dmg_title\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"Next Damage\"\r\n            android:textSize=\"17sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/game_dialog_next_reminder\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/game_dialog_nextDmgAmount\"\r\n            android:layout_width=\"290dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"100 water damage\"\r\n            android:textSize=\"14.5sp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.533\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/game_dialog_next_dmg_title\" />\r\n\r\n        <androidx.constraintlayout.widget.Guideline\r\n            android:id=\"@+id/descVerLine\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintGuide_begin=\"49dp\" />\r\n\r\n        <androidx.constraintlayout.widget.Guideline\r\n            android:id=\"@+id/descHorLine\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            app:layout_constraintGuide_begin=\"16dp\" />\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/card_virtical_line\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintGuide_end=\"175dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/titleHorLine\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_percent=\"0.06\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/descriptionBox_line\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_end=\"170dp\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/game_pet_play_dialog.xml b/app/src/main/res/layout/game_pet_play_dialog.xml
--- a/app/src/main/res/layout/game_pet_play_dialog.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/layout/game_pet_play_dialog.xml	(date 1733178698678)
@@ -9,7 +9,7 @@
     android:gravity="center"
     android:id="@+id/game_dialog_root_layout">
 
-    <View
+    <androidx.constraintlayout.widget.ConstraintLayout
         android:id="@+id/game_dailog_background_view"
         android:layout_width="320dp"
         android:layout_height="30dp"
@@ -19,32 +19,34 @@
         app:layout_constraintEnd_toStartOf="@+id/card_virtical_line"
         app:layout_constraintHorizontal_bias="0.485"
         app:layout_constraintStart_toStartOf="@+id/card_virtical_line"
-        app:layout_constraintTop_toTopOf="@+id/titleHorLine" />
+        app:layout_constraintTop_toTopOf="@+id/titleHorLine" >
 
-    <TextView
-        android:id="@+id/game_card_petName"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:fontFamily="@font/titan_one"
-        android:text="Shy Raccoon"
-        android:textSize="20sp"
-        app:layout_constraintBottom_toBottomOf="@+id/game_dailog_background_view"
-        app:layout_constraintEnd_toEndOf="@+id/game_dailog_background_view"
-        app:layout_constraintStart_toStartOf="@+id/game_dailog_background_view"
-        app:layout_constraintTop_toTopOf="@+id/game_dailog_background_view" />
+        <TextView
+            android:id="@+id/game_card_petName"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:fontFamily="@font/titan_one"
+            android:text="Shy Raccoon"
+            android:textSize="20sp"
+            app:layout_constraintBottom_toBottomOf="@+id/game_dailog_background_view"
+            app:layout_constraintEnd_toEndOf="@+id/game_dailog_background_view"
+            app:layout_constraintStart_toStartOf="@+id/game_dailog_background_view"
+            app:layout_constraintTop_toTopOf="@+id/game_dailog_background_view" />
 
-    <TextView
-        android:id="@+id/game_card_petId"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:fontFamily="@font/titan_one"
-        android:text="004"
-        android:textSize="20sp"
-        app:layout_constraintBottom_toBottomOf="@+id/game_dailog_background_view"
-        app:layout_constraintEnd_toStartOf="@+id/game_card_petName"
-        app:layout_constraintStart_toStartOf="@+id/game_dailog_background_view"
-        app:layout_constraintTop_toTopOf="@+id/game_dailog_background_view" />
+        <TextView
+            android:id="@+id/game_card_petId"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:fontFamily="@font/titan_one"
+            android:text="004"
+            android:textSize="20sp"
+            app:layout_constraintBottom_toBottomOf="@+id/game_dailog_background_view"
+            app:layout_constraintEnd_toStartOf="@+id/game_card_petName"
+            app:layout_constraintStart_toStartOf="@+id/game_dailog_background_view"
+            app:layout_constraintTop_toTopOf="@+id/game_dailog_background_view" />
 
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
     <androidx.constraintlayout.widget.Guideline
         android:id="@+id/card_image_line"
         android:layout_width="wrap_content"
@@ -62,7 +64,7 @@
         app:layout_constraintStart_toStartOf="@+id/card_virtical_line"
         app:layout_constraintTop_toTopOf="@+id/card_image_line"
         app:layout_constraintVertical_bias="0.526"
-        app:srcCompat="@drawable/a_card_bg" />
+        app:srcCompat="@drawable/background_raccoon_housetrash" />
 
     <ImageView
         android:id="@+id/game_card_pet_image"
@@ -101,7 +103,6 @@
         app:layout_constraintTop_toTopOf="@+id/descriptionBox_line"
         app:layout_constraintVertical_bias="0.458">
 
-
         <TextView
             android:id="@+id/game_dialog_petSkill_name"
             android:layout_width="match_parent"
@@ -113,17 +114,18 @@
             android:textStyle="bold"
             app:layout_constraintBottom_toTopOf="@+id/descHorLine"
             app:layout_constraintEnd_toStartOf="@+id/descVerLine"
-            app:layout_constraintHorizontal_bias="0.528"
+            app:layout_constraintHorizontal_bias="0.103"
             app:layout_constraintStart_toStartOf="@+id/descVerLine"
             app:layout_constraintTop_toTopOf="@+id/descHorLine"
-            app:layout_constraintVertical_bias="0.478" />
+            app:layout_constraintVertical_bias="0.484" />
+
 
         <TextView
             android:id="@+id/game_dialog_skillDescription"
             android:layout_width="290dp"
             android:layout_height="wrap_content"
             android:fontFamily="@font/titan_one"
-            android:padding="5dp"
+            android:padding="3dp"
             android:text="Deal 100 water damage\non the 5th turn\nwhen this unit is placed on the board"
             android:textSize="14.5sp"
             app:layout_constraintEnd_toEndOf="parent"
@@ -131,31 +133,34 @@
             app:layout_constraintTop_toBottomOf="@+id/game_dialog_petSkill_name" />
 
 
-        <TextView
-            android:id="@+id/game_dialog_condition_title"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:fontFamily="@font/titan_one"
-            android:padding="5dp"
-            android:text="Condition"
-            android:textSize="17sp"
-            android:textStyle="bold"
-            app:layout_constraintEnd_toStartOf="@+id/descVerLine"
-            app:layout_constraintStart_toStartOf="@+id/descVerLine"
-            app:layout_constraintTop_toBottomOf="@+id/game_dialog_skillDescription" />
+<!--        <TextView-->
+<!--            android:id="@+id/game_dialog_condition_title"-->
+<!--            android:layout_width="match_parent"-->
+<!--            android:layout_height="wrap_content"-->
+<!--            android:fontFamily="@font/titan_one"-->
+<!--            android:padding="5dp"-->
+<!--            android:text="Condition"-->
+<!--            android:textSize="17sp"-->
+<!--            android:textStyle="bold"-->
+<!--            app:layout_constraintEnd_toStartOf="@+id/descVerLine"-->
+<!--            app:layout_constraintStart_toStartOf="@+id/descVerLine"-->
+<!--            app:layout_constraintTop_toBottomOf="@+id/game_dialog_skillDescription" />-->
 
 
-        <TextView
-            android:id="@+id/game_dialog_next_reminder"
-            android:layout_width="290dp"
-            android:layout_height="wrap_content"
-            android:fontFamily="@font/titan_one"
-            android:padding="5dp"
-            android:text="5 more turn(s) to stay on the board                 jwlqlwkepo"
-            android:textSize="14.5sp"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@+id/game_dialog_condition_title" />
+<!--        <TextView-->
+<!--            android:id="@+id/game_dialog_next_reminder"-->
+<!--            android:layout_width="305dp"-->
+<!--            android:layout_height="wrap_content"-->
+<!--            android:fontFamily="@font/titan_one"-->
+<!--            android:letterSpacing="0.007"-->
+<!--            android:lineSpacingExtra="1dp"-->
+<!--            android:padding="5dp"-->
+<!--            android:text="5 more turn(s) to stay on the board                 jwlqlwkepo"-->
+<!--            android:textSize="15.5sp"-->
+<!--            app:layout_constraintEnd_toEndOf="parent"-->
+<!--            app:layout_constraintHorizontal_bias="1.0"-->
+<!--            app:layout_constraintStart_toStartOf="parent"-->
+<!--            app:layout_constraintTop_toBottomOf="@+id/game_dialog_petSkill_name" />-->
 
         <TextView
             android:id="@+id/game_dialog_next_dmg_title"
@@ -163,19 +168,20 @@
             android:layout_height="wrap_content"
             android:fontFamily="@font/titan_one"
             android:padding="5dp"
-            android:text="Next Damage"
+            android:text="Abilities after X turns"
             android:textSize="17sp"
             android:textStyle="bold"
             app:layout_constraintEnd_toStartOf="@+id/descVerLine"
+            app:layout_constraintHorizontal_bias="0.153"
             app:layout_constraintStart_toStartOf="@+id/descVerLine"
-            app:layout_constraintTop_toBottomOf="@+id/game_dialog_next_reminder" />
+            app:layout_constraintTop_toBottomOf="@+id/game_dialog_skillDescription" />
 
         <TextView
             android:id="@+id/game_dialog_nextDmgAmount"
             android:layout_width="290dp"
             android:layout_height="wrap_content"
             android:fontFamily="@font/titan_one"
-            android:padding="5dp"
+            android:padding="3dp"
             android:text="100 water damage"
             android:textSize="14.5sp"
             app:layout_constraintEnd_toEndOf="parent"
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n        <DropdownSelection timestamp=\"2024-11-25T07:17:45.132499300Z\">\r\n          <Target type=\"DEFAULT_BOOT\">\r\n            <handle>\r\n              <DeviceId pluginId=\"LocalEmulator\" identifier=\"path=C:\\Users\\melod\\.android\\avd\\Pixel_6_API_VanillaIceCream.avd\" />\r\n            </handle>\r\n          </Target>\r\n        </DropdownSelection>\r\n        <DialogSelection />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/.idea/deploymentTargetSelector.xml	(date 1733177706588)
@@ -4,10 +4,10 @@
     <selectionStates>
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
-        <DropdownSelection timestamp="2024-11-25T07:17:45.132499300Z">
+        <DropdownSelection timestamp="2024-12-02T22:08:08.581843300Z">
           <Target type="DEFAULT_BOOT">
             <handle>
-              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\melod\.android\avd\Pixel_6_API_VanillaIceCream.avd" />
+              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\User\.android\avd\Medium_Phone_API_31.avd" />
             </handle>
           </Target>
         </DropdownSelection>
Index: app/src/main/res/drawable/game_menu_dialog_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <solid android:color=\"@color/yellow\" /> <!-- Default background color -->\r\n    <corners android:radius=\"15dp\" /> <!-- Set corner radius to 20dp -->\r\n\r\n</shape>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/game_menu_dialog_bg.xml b/app/src/main/res/drawable/game_menu_dialog_bg.xml
--- a/app/src/main/res/drawable/game_menu_dialog_bg.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/drawable/game_menu_dialog_bg.xml	(date 1733177686197)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="utf-8"?>
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
     <solid android:color="@color/yellow" /> <!-- Default background color -->
     <corners android:radius="15dp" /> <!-- Set corner radius to 20dp -->
Index: app/src/main/java/com/example/eggenda/gamePlay/stageInfo.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.gamePlay\r\n\r\nimport com.example.eggenda.R\r\n\r\n\r\nclass stageInfo {\r\n\r\n    val stageTotalNum = 5\r\n\r\n    fun StageInfoMap(id: Int): stage?{\r\n        val petMap: Map<Int, () -> stage> = mapOf(\r\n            0 to { stage_0() },\r\n            1 to { stage_1() },\r\n            2 to { stage_2() },\r\n            3 to { stage_3() },\r\n            4 to { stage_4() },\r\n        )\r\n        return petMap[id]?.invoke()\r\n    }\r\n\r\n\r\n    interface stage{\r\n        val id: Int //id of the stage\r\n        val name: String    //name of the boss\r\n        val bossImageId: Int    //boss image id\r\n        val acceptElement: Int    //accept element from player\r\n        val objectiveType: Int  //obj type\r\n        val maxTurn: Int    //max turn for player to fight\r\n        val damageRequirement: Int  //boss hp\r\n        val description: String //for UI use\r\n        val deckSize: Int   //deckSize limitation for players\r\n\r\n        //for game play use\r\n        fun actionType(turn:Int ):Int\r\n        fun actionAmount(turn: Int, petStatus: Array<petStatus?>):Int\r\n        fun actionDescription(turn: Int,petStatus: Array<petStatus?>):String\r\n\r\n    }\r\n\r\n    private class stage_0():stage{\r\n        override val id: Int = 0\r\n        override val name: String = \"Innocent Sapling\"\r\n        override val bossImageId: Int = R.drawable.game_enemy_sapling\r\n        override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT\r\n        override val objectiveType: Int = dict.STAGE_OBJECTIVE_BEST\r\n        override val maxTurn: Int = 3\r\n        override val damageRequirement: Int = 60\r\n        override val description: String = \"No way you can't defeat a small innocent sapling!\"\r\n        override val deckSize:Int = 3\r\n\r\n        override fun actionType(turn: Int): Int {\r\n            return dict.STAGE_ACTION_NO_ACTION\r\n        }\r\n\r\n        override fun actionAmount(turn: Int,petStatus: Array<petStatus?>): Int {\r\n            return 0\r\n        }\r\n\r\n        override fun actionDescription(turn: Int,petStatus: Array<petStatus?>): String {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    private class stage_1():stage{\r\n        override val id: Int = 1\r\n        override val name: String = \"Wood Pile\"\r\n        override val bossImageId: Int = R.drawable.game_enemy_woodpile\r\n        override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT\r\n        override val objectiveType: Int = dict.STAGE_OBJECTIVE_BEST\r\n        override val maxTurn: Int = 8\r\n        override val damageRequirement: Int = 120\r\n        override val description: String = \"Just a wood pile\"\r\n        override val deckSize:Int = 3\r\n\r\n        override fun actionType(turn: Int): Int {\r\n            return dict.STAGE_ACTION_NO_ACTION\r\n        }\r\n\r\n        override fun actionAmount(turn: Int,petStatus: Array<petStatus?>): Int {\r\n            return 0\r\n        }\r\n\r\n        override fun actionDescription(turn: Int,petStatus: Array<petStatus?>): String {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    private class stage_2():stage{\r\n        override val id: Int = 2\r\n        override val name: String = \"Icy\"\r\n        override val bossImageId: Int = R.drawable.game_enemy_icy\r\n        override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT\r\n        override val objectiveType: Int = dict.STAGE_OBJECTIVE_FIGHT\r\n        override val maxTurn: Int = 6\r\n        override val damageRequirement: Int = 160\r\n        override val description: String = \"Icy will pull your pet for comfy hug :3\"\r\n        override val deckSize:Int = 3\r\n\r\n        override fun actionType(turn: Int): Int {\r\n            if(turn % 3 == 0){\r\n                return dict.STAGE_ACTION_PUSH\r\n            }\r\n            return dict.STAGE_ACTION_NO_ACTION\r\n        }\r\n\r\n        override fun actionAmount(turn: Int,petStatus: Array<petStatus?>): Int {\r\n            if(turn % 3 == 0){\r\n                return dict.STAGE_PUSH_NORTH\r\n            }\r\n            return 0\r\n        }\r\n\r\n        override fun actionDescription(turn: Int,petStatus: Array<petStatus?>): String {\r\n            if(turn % 3 == 0){\r\n                return name+\" pull your pet to the \"+dict.PUSH_STRING[actionAmount(turn,petStatus)]+\"!!\"\r\n            }\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n\r\n    private class stage_3():stage{\r\n        override val id: Int = 3\r\n        override val name: String = \"High Quality Wood Pile\"\r\n        override val bossImageId: Int = R.drawable.game_enemy_hq_woodpile\r\n        override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT\r\n        override val objectiveType: Int = dict.STAGE_OBJECTIVE_EXACT\r\n        override val maxTurn: Int = 8\r\n        override val damageRequirement: Int = 230\r\n        override val description: String = \"Control your force!\"\r\n        override val deckSize:Int = 4\r\n\r\n        override fun actionType(turn: Int): Int {\r\n            return dict.STAGE_ACTION_NO_ACTION\r\n        }\r\n\r\n        override fun actionAmount(turn: Int,petStatus: Array<petStatus?>): Int {\r\n            return 0\r\n        }\r\n\r\n        override fun actionDescription(turn: Int,petStatus: Array<petStatus?>): String {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    private class stage_4():stage{\r\n        override val id: Int = 4\r\n        override val name: String = \"Goblin\"\r\n        override val bossImageId: Int = R.drawable.game_enemy_goblin\r\n        override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT\r\n        override val objectiveType: Int = dict.STAGE_OBJECTIVE_FIGHT\r\n        override val maxTurn: Int = 10\r\n        override val damageRequirement: Int = 240\r\n        override val description: String = \"Goblin will smash you harder and harder until you die!!\"\r\n        override val deckSize:Int = 4\r\n        //\r\n        override fun actionType(turn: Int): Int {\r\n            if(turn % 2 == 0){\r\n                return dict.STAGE_ACTION_ATTACK\r\n            }\r\n            return dict.STAGE_ACTION_NO_ACTION\r\n        }\r\n\r\n        override fun actionAmount(turn: Int,petStatus: Array<petStatus?>): Int {\r\n            if(turn % 2 == 0){\r\n                return turn * 10\r\n            }\r\n            return 0\r\n        }\r\n\r\n        override fun actionDescription(turn: Int, petStatus: Array<petStatus?>): String {\r\n            if(turn % 2 == 0){\r\n                return name+\" dealt \"+actionAmount(turn,petStatus)+\" damages to you!!\"\r\n            }\r\n            return \"\"\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/gamePlay/stageInfo.kt b/app/src/main/java/com/example/eggenda/gamePlay/stageInfo.kt
--- a/app/src/main/java/com/example/eggenda/gamePlay/stageInfo.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/gamePlay/stageInfo.kt	(date 1733177686162)
@@ -5,7 +5,7 @@
 
 class stageInfo {
 
-    val stageTotalNum = 5
+    val stageTotalNum = 9
 
     fun StageInfoMap(id: Int): stage?{
         val petMap: Map<Int, () -> stage> = mapOf(
@@ -14,6 +14,10 @@
             2 to { stage_2() },
             3 to { stage_3() },
             4 to { stage_4() },
+            5 to { stage_5() },
+            6 to { stage_6() },
+            7 to { stage_7() },
+            8 to { stage_8() }
         )
         return petMap[id]?.invoke()
     }
@@ -39,13 +43,13 @@
 
     private class stage_0():stage{
         override val id: Int = 0
-        override val name: String = "Innocent Sapling"
-        override val bossImageId: Int = R.drawable.game_enemy_sapling
+        override val name: String = "Small seed"
+        override val bossImageId: Int = R.drawable.game_enemy_seed
         override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT
         override val objectiveType: Int = dict.STAGE_OBJECTIVE_BEST
-        override val maxTurn: Int = 3
-        override val damageRequirement: Int = 60
-        override val description: String = "No way you can't defeat a small innocent sapling!"
+        override val maxTurn: Int = 2
+        override val damageRequirement: Int = 20
+        override val description: String = "Try evil water!"
         override val deckSize:Int = 3
 
         override fun actionType(turn: Int): Int {
@@ -63,13 +67,13 @@
 
     private class stage_1():stage{
         override val id: Int = 1
-        override val name: String = "Wood Pile"
-        override val bossImageId: Int = R.drawable.game_enemy_woodpile
+        override val name: String = "Big seed"
+        override val bossImageId: Int = R.drawable.game_enemy_bigseed
         override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT
         override val objectiveType: Int = dict.STAGE_OBJECTIVE_BEST
-        override val maxTurn: Int = 8
-        override val damageRequirement: Int = 120
-        override val description: String = "Just a wood pile"
+        override val maxTurn: Int = 3
+        override val damageRequirement: Int = 40
+        override val description: String = "Try flaming skull!"
         override val deckSize:Int = 3
 
         override fun actionType(turn: Int): Int {
@@ -87,6 +91,30 @@
 
     private class stage_2():stage{
         override val id: Int = 2
+        override val name: String = "Innocent Sapling"
+        override val bossImageId: Int = R.drawable.game_enemy_sapling
+        override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT
+        override val objectiveType: Int = dict.STAGE_OBJECTIVE_BEST
+        override val maxTurn: Int = 3
+        override val damageRequirement: Int = 60
+        override val description: String = "No way you can't defeat a small innocent sapling!"
+        override val deckSize:Int = 3
+
+        override fun actionType(turn: Int): Int {
+            return dict.STAGE_ACTION_NO_ACTION
+        }
+
+        override fun actionAmount(turn: Int,petStatus: Array<petStatus?>): Int {
+            return 0
+        }
+
+        override fun actionDescription(turn: Int,petStatus: Array<petStatus?>): String {
+            return ""
+        }
+    }
+
+    private class stage_3():stage{
+        override val id: Int = 3
         override val name: String = "Icy"
         override val bossImageId: Int = R.drawable.game_enemy_icy
         override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT
@@ -118,9 +146,33 @@
         }
     }
 
+    private class stage_4():stage{
+        override val id: Int = 4
+        override val name: String = "Wood Pile"
+        override val bossImageId: Int = R.drawable.game_enemy_woodpile
+        override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT
+        override val objectiveType: Int = dict.STAGE_OBJECTIVE_BEST
+        override val maxTurn: Int = 8
+        override val damageRequirement: Int = 120
+        override val description: String = "Just a wood pile"
+        override val deckSize:Int = 3
+
+        override fun actionType(turn: Int): Int {
+            return dict.STAGE_ACTION_NO_ACTION
+        }
+
+        override fun actionAmount(turn: Int,petStatus: Array<petStatus?>): Int {
+            return 0
+        }
+
+        override fun actionDescription(turn: Int,petStatus: Array<petStatus?>): String {
+            return ""
+        }
+    }
 
-    private class stage_3():stage{
-        override val id: Int = 3
+
+    private class stage_5():stage{
+        override val id: Int = 5
         override val name: String = "High Quality Wood Pile"
         override val bossImageId: Int = R.drawable.game_enemy_hq_woodpile
         override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT
@@ -143,8 +195,8 @@
         }
     }
 
-    private class stage_4():stage{
-        override val id: Int = 4
+    private class stage_6():stage{
+        override val id: Int = 6
         override val name: String = "Goblin"
         override val bossImageId: Int = R.drawable.game_enemy_goblin
         override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT
@@ -175,4 +227,72 @@
             return ""
         }
     }
+
+    private class stage_7():stage{
+        override val id: Int = 7
+        override val name: String = "Big Tree"
+        override val bossImageId: Int = R.drawable.game_enemy_bigtree
+        override val acceptElement: Int = dict.STAGE_ACCEPT_ALL_ELEMENT
+        override val objectiveType: Int = dict.STAGE_OBJECTIVE_FIGHT
+        override val maxTurn: Int = 9
+        override val damageRequirement: Int = 590
+        override val description: String = "The last plant in the forest!"
+        override val deckSize:Int = 5
+        //
+        override fun actionType(turn: Int): Int {
+            return dict.STAGE_ACTION_NO_ACTION
+        }
+
+        override fun actionAmount(turn: Int,petStatus: Array<petStatus?>): Int {
+            return 0
+        }
+
+        override fun actionDescription(turn: Int,petStatus: Array<petStatus?>): String {
+            return ""
+        }
+    }
+
+    private class stage_8():stage{
+        override val id: Int = 8
+        override val name: String = "Head of E.P.A"
+        override val bossImageId: Int = R.drawable.game_enemy_satan
+        override val acceptElement: Int = dict.ELEMENT_WATER
+        override val objectiveType: Int = dict.STAGE_OBJECTIVE_FIGHT
+        override val maxTurn: Int = 20
+        override val damageRequirement: Int = 600
+        override val description: String = "How dare you kill all the plants!"
+        override val deckSize:Int = 5
+        //
+        override fun actionType(turn: Int): Int {
+//            return dict.STAGE_ACTION_NO_ACTION
+            if(turn % 2 == 0){
+                return dict.STAGE_ACTION_PUSH
+            }
+            if(turn % 5 == 0){
+                return dict.STAGE_ACTION_ATTACK
+            }
+            return dict.STAGE_ACTION_NO_ACTION
+        }
+
+        override fun actionAmount(turn: Int,petStatus: Array<petStatus?>): Int {
+            if(turn % 5 == 0){
+                return 80
+            }
+            if(turn % 2 == 0){
+                return dict.STAGE_PUSH_NORTH
+            }
+            return 0
+        }
+
+        override fun actionDescription(turn: Int,petStatus: Array<petStatus?>): String {
+            if(turn % 5 == 0){
+                return "Headquarter of Environmental Protection Agency dealt 80 damage to you!"
+            }
+            if(turn % 2 == 0){
+                return "Headquarter of Environmental Protection Agency pull you to the north"
+            }
+            return ""
+        }
+    }
+
 }
\ No newline at end of file
Index: app/src/main/res/drawable/game_menu_dialog_title.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <solid android:color=\"@color/gold_rare\" /> <!-- Stroke color -->\" /> <!-- Background color -->\r\n    <corners android:radius=\"20dp\" /> <!-- Optional: rounded corners -->\r\n</shape>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/game_menu_dialog_title.xml b/app/src/main/res/drawable/game_menu_dialog_title.xml
--- a/app/src/main/res/drawable/game_menu_dialog_title.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/drawable/game_menu_dialog_title.xml	(date 1733177686198)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@color/gold_rare" /> <!-- Stroke color -->" /> <!-- Background color -->
+    <solid android:color="@color/enable_color" /> <!-- Stroke color -->" /> <!-- Background color -->
     <corners android:radius="20dp" /> <!-- Optional: rounded corners -->
 </shape>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_11_14_p_m___Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><changelist name=\"Uncommitted_changes_before_Update_at_2024-11-24_11_14_p_m__[Changes]\" date=\"1732518858607\" recycled=\"true\" deleted=\"true\">\r\n  <option name=\"PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_11_14_p_m__[Changes]/shelved.patch\" />\r\n  <option name=\"DESCRIPTION\" value=\"Uncommitted changes before Update at 2024-11-24 11:14 p.m. [Changes]\" />\r\n</changelist>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_11_14_p_m___Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_11_14_p_m___Changes_.xml
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_11_14_p_m___Changes_.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_11_14_p_m___Changes_.xml	(date 1733177850547)
@@ -1,4 +1,10 @@
+<<<<<<<< HEAD:.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_11_14_p_m___Changes_.xml
 <changelist name="Uncommitted_changes_before_Update_at_2024-11-24_11_14_p_m__[Changes]" date="1732518858607" recycled="true" deleted="true">
   <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_11_14_p_m__[Changes]/shelved.patch" />
   <option name="DESCRIPTION" value="Uncommitted changes before Update at 2024-11-24 11:14 p.m. [Changes]" />
+========
+<changelist name="Uncommitted_changes_before_Update_at_2024-11-24_11_00_p_m__[Changes]" date="1732518030880" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_11_00_p_m__[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2024-11-24 11:00 p.m. [Changes]" />
+>>>>>>>> refs/heads/gameMergeTest:.idea/shelf/Uncommitted_changes_before_Update_at_2024-11-24_11_00_p_m___Changes_.xml
 </changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/eggenda/gamePlay/boardAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.gamePlay\r\n\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.FrameLayout\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.eggenda.R\r\nimport org.w3c.dom.Text\r\n\r\nclass boardAdapter(\r\n    private val itemCount: Int,\r\n    private val onItemClick: (position: Int) -> Unit,\r\n    private val onItemLongClick: (position: Int) -> Unit\r\n) : RecyclerView.Adapter<boardAdapter.ViewHolder>() {\r\n\r\n    inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        val masterFrame: FrameLayout = itemView.findViewById(R.id.masterFrame)\r\n        val imageView: ImageView = itemView.findViewById(R.id.imageView)\r\n        val elementFrame: ImageView = itemView.findViewById(R.id.elementFrame)\r\n        val countFrame: ImageView = itemView.findViewById(R.id.countFrame)\r\n        val countView: TextView = itemView.findViewById(R.id.attackCount)\r\n\r\n\r\n\r\n        init {\r\n            itemView.setOnClickListener {\r\n                onItemClick(adapterPosition)\r\n            }\r\n            itemView.setOnLongClickListener {\r\n                onItemLongClick(adapterPosition)\r\n                true\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n        val view = LayoutInflater.from(parent.context).inflate(R.layout.game_board_frame, parent, false)\r\n        return ViewHolder(view)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n        // You can set an initial image or customize the view here if needed\r\n    }\r\n\r\n    override fun getItemCount(): Int = itemCount\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/gamePlay/boardAdapter.kt b/app/src/main/java/com/example/eggenda/gamePlay/boardAdapter.kt
--- a/app/src/main/java/com/example/eggenda/gamePlay/boardAdapter.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/gamePlay/boardAdapter.kt	(date 1733177686151)
@@ -23,8 +23,6 @@
         val countFrame: ImageView = itemView.findViewById(R.id.countFrame)
         val countView: TextView = itemView.findViewById(R.id.attackCount)
 
-
-
         init {
             itemView.setOnClickListener {
                 onItemClick(adapterPosition)
Index: app/src/main/res/layout/fragment_game.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/yellow\"\r\n    tools:context=\".ui.game.GameFragment\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/game_fragment_title\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"Game Category\"\r\n        android:textSize=\"40dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/gameFrag_titleHorLine\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/gameFrag_verLine\"\r\n        app:layout_constraintHorizontal_bias=\"0.503\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/gameFrag_verLine\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/gameFrag_titleHorLine\"\r\n        app:layout_constraintVertical_bias=\"1.0\" />\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/game_fragment_description\"\r\n        android:layout_width=\"350dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"32dp\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:padding=\"5dp\"\r\n        android:text=\"Please Choose one to Start your Challenge\"\r\n        android:textSize=\"20dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/itemHorLine\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/game_fragment_title\"\r\n        app:layout_constraintVertical_bias=\"0.28\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/game_frag_fight_conlay\"\r\n        android:layout_width=\"150dp\"\r\n        android:layout_height=\"200dp\"\r\n        android:background=\"@drawable/game_menu_dialog_btn_chossen\"\r\n        android:focusable=\"true\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/itemHorLine\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/gameFrag_verLine\"\r\n        app:layout_constraintHorizontal_bias=\"0.736\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/itemHorLine\"\r\n        android:clickable=\"true\"\r\n        app:layout_constraintVertical_bias=\"0.485\">\r\n\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:id=\"@+id/photo_constrain_layout\"\r\n            android:layout_width=\"130dp\"\r\n            android:layout_height=\"110dp\"\r\n            android:background=\"@drawable/monster_status_bg\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.145\">\r\n\r\n            <ImageView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"100dp\"\r\n                android:src=\"@drawable/game_monster_icon\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:text=\"Play\"\r\n            android:textSize=\"40dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/photo_constrain_layout\" />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/game_frag_tutorial_conlay\"\r\n        android:layout_width=\"150dp\"\r\n        android:layout_height=\"200dp\"\r\n        android:background=\"@drawable/game_menu_dialog_button_norm\"\r\n        android:clickable=\"true\"\r\n        android:focusable=\"true\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/itemHorLine\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/gameFrag_verLine\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/itemHorLine\">\r\n\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:id=\"@+id/tutorial_constrain_layout\"\r\n            android:layout_width=\"130dp\"\r\n            android:layout_height=\"110dp\"\r\n            android:background=\"@drawable/monster_status_bg\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.145\">\r\n\r\n            <ImageView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"100dp\"\r\n                android:src=\"@drawable/game_tutorial_icon\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:text=\"How-to\"\r\n            android:textSize=\"35sp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tutorial_constrain_layout\" />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n    <Button\r\n        android:id=\"@+id/game_fragment_info_btn\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"40dp\"\r\n        android:layout_marginTop=\"172dp\"\r\n        android:background=\"@drawable/game_start_button\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"About Game\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.497\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/itemHorLine\"\r\n        app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/gameFrag_verLine\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintGuide_begin=\"207dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/gameFrag_titleHorLine\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"85dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/itemHorLine\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"375dp\" />\r\n\r\n\r\n<!--        <Button-->\r\n<!--        android:id=\"@+id/game_start_frag_btn\"-->\r\n<!--        android:layout_width=\"wrap_content\"-->\r\n<!--        android:layout_height=\"wrap_content\"-->\r\n<!--        android:text=\"@string/game_start\"-->\r\n<!--        app:layout_constraintBottom_toTopOf=\"@+id/guideline5\"-->\r\n<!--        app:layout_constraintEnd_toEndOf=\"parent\"-->\r\n<!--        app:layout_constraintStart_toStartOf=\"parent\"-->\r\n<!--        app:layout_constraintTop_toTopOf=\"@+id/guideline5\" />-->\r\n\r\n<!--    <androidx.constraintlayout.widget.Guideline-->\r\n<!--        android:id=\"@+id/guideline5\"-->\r\n<!--        android:layout_width=\"wrap_content\"-->\r\n<!--        android:layout_height=\"wrap_content\"-->\r\n<!--        android:orientation=\"horizontal\"-->\r\n<!--        app:layout_constraintGuide_begin=\"336dp\" />-->\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_game.xml b/app/src/main/res/layout/fragment_game.xml
--- a/app/src/main/res/layout/fragment_game.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/layout/fragment_game.xml	(date 1733177686243)
@@ -29,6 +29,7 @@
         android:layout_marginTop="32dp"
         android:fontFamily="@font/titan_one"
         android:padding="5dp"
+        android:gravity="center"
         android:text="Please Choose one to Start your Challenge"
         android:textSize="20dp"
         app:layout_constraintBottom_toTopOf="@+id/itemHorLine"
Index: app/src/main/java/com/example/eggenda/gamePlay/menuDialog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.gamePlay\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.MotionEvent\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.animation.ScaleAnimation\r\nimport android.widget.Toast\r\nimport androidx.activity.viewModels\r\nimport androidx.constraintlayout.widget.ConstraintLayout\r\nimport androidx.fragment.app.DialogFragment\r\nimport androidx.fragment.app.viewModels\r\nimport com.example.eggenda.MainActivity\r\nimport com.example.eggenda.R\r\n\r\nclass menuDialog : DialogFragment() {\r\n\r\n    private val viewModel: gameViewModel2 by viewModels()\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        val view = inflater.inflate(R.layout.game_menu_dialog, container, false)\r\n\r\n        val resumeBtn : ConstraintLayout = view.findViewById(R.id.game_dialog_resume)\r\n        val restartBtn : ConstraintLayout = view.findViewById(R.id.game_dialog_restart)\r\n        val quitBtn : ConstraintLayout = view.findViewById(R.id.game_dialog_quit)\r\n\r\n        val rootLayout : View = view.findViewById(R.id.menu_root_layout)\r\n\r\n        dialog?.window?.setBackgroundDrawableResource(R.drawable.game_menu_dialog_bg)\r\n\r\n        //resume the game\r\n        resumeBtn.setOnClickListener { dismiss() }\r\n\r\n        //restart the game\r\n        restartBtn.setOnClickListener {\r\n            //restart the game\r\n            viewModel.updateGameRunState(dict.GAME_NOT_START)\r\n            activity?.recreate()\r\n\r\n        }\r\n\r\n        //quit game\r\n        quitBtn.setOnClickListener {\r\n            viewModel.updateGameRunState(dict.GAME_NOT_START)\r\n            val intent = Intent(requireContext(), MainActivity::class.java)\r\n            dismiss()\r\n            startActivity(intent)\r\n        }\r\n\r\n\r\n\r\n\r\n        return view\r\n    }\r\n\r\n    companion object {\r\n\r\n        fun newInstance(): menuDialog {\r\n            val fragment = menuDialog()\r\n            val args = Bundle().apply {}\r\n            fragment.arguments = args\r\n            return fragment\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n\r\n        //set the size of the dialog\r\n        dialog?.window?.setLayout(\r\n            resources.getDimensionPixelSize(R.dimen.menu_width),\r\n            resources.getDimensionPixelSize(R.dimen.menu_hight),\r\n\r\n            )\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/gamePlay/menuDialog.kt b/app/src/main/java/com/example/eggenda/gamePlay/menuDialog.kt
--- a/app/src/main/java/com/example/eggenda/gamePlay/menuDialog.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/gamePlay/menuDialog.kt	(date 1733177686156)
@@ -1,5 +1,6 @@
 package com.example.eggenda.gamePlay
 
+import android.content.Context
 import android.content.Intent
 import android.os.Bundle
 import android.util.Log
@@ -18,7 +19,20 @@
 
 class menuDialog : DialogFragment() {
 
-    private val viewModel: gameViewModel2 by viewModels()
+    interface MenuDialogListener {
+        fun onRestartGame()
+        fun onQuitGame()
+    }
+
+    private var listener: MenuDialogListener? = null
+
+
+    override fun onAttach(context: Context) {
+        super.onAttach(context)
+        // Ensure the activity implements the interface
+        listener = context as? MenuDialogListener
+            ?: throw RuntimeException("$context must implement MenuDialogListener")
+    }
 
     override fun onCreateView(
         inflater: LayoutInflater,
@@ -40,21 +54,16 @@
 
         //restart the game
         restartBtn.setOnClickListener {
-            //restart the game
-            viewModel.updateGameRunState(dict.GAME_NOT_START)
-            activity?.recreate()
+            listener?.onRestartGame()
+            dismiss()
 
         }
 
         //quit game
         quitBtn.setOnClickListener {
-            viewModel.updateGameRunState(dict.GAME_NOT_START)
-            val intent = Intent(requireContext(), MainActivity::class.java)
+            listener?.onQuitGame()
             dismiss()
-            startActivity(intent)
         }
-
-
 
 
         return view
@@ -71,6 +80,10 @@
 
     }
 
+    interface RestartDialogListener {
+        fun onRestartConfirmed()
+    }
+
 
 
     override fun onResume() {
Index: app/src/main/res/layout/fragment_gallery.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/yellow\"\r\n    android:paddingTop=\"20dp\"\r\n    tools:context=\".ui.gallery.GalleryFragment\">\r\n\r\n\r\n    <TextView\r\n        android:id=\"@+id/gallery_pet_name\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"Please Select a Pet!\"\r\n        android:textSize=\"34sp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/gallery_pet_show\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline9\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/guideline9\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/gallery_pet_show\"\r\n        android:layout_width=\"250dp\"\r\n        android:layout_height=\"250dp\"\r\n        android:src=\"@drawable/game_choose_nth_3\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline4\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/guideline9\"\r\n        app:layout_constraintHorizontal_bias=\"0.65\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/guideline9\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline4\"\r\n        app:layout_constraintVertical_bias=\"0.49\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView3\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"Pet Gallery\"\r\n        android:textSize=\"34sp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/constraintLayout3\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.545\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/gallery_pet_show\"\r\n        app:layout_constraintVertical_bias=\"0.518\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/constraintLayout3\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"300dp\"\r\n        android:background=\"@color/yellow_subbackground\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline8\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline8\"\r\n        app:layout_constraintVertical_bias=\"0.545\">\r\n\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/gallery_characterchoose_recyclerView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:scrollbars=\"vertical\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.5\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline8\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"499dp\" />\r\n\r\n\r\n    <!-- New TextView for the message -->\r\n\r\n    <TextView\r\n        android:id=\"@+id/long_hold_message\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"4dp\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:gravity=\"center\"\r\n        android:padding=\"6dp\"\r\n        android:text=\"Long-hold Photo to view pet information\"\r\n        android:textColor=\"@android:color/black\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"1.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/constraintLayout3\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline4\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"158dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline9\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintGuide_begin=\"216dp\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_gallery.xml b/app/src/main/res/layout/fragment_gallery.xml
--- a/app/src/main/res/layout/fragment_gallery.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/layout/fragment_gallery.xml	(date 1733177686242)
@@ -10,42 +10,141 @@
     tools:context=".ui.gallery.GalleryFragment">
 
 
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="350dp"
+        android:layout_height="50dp"
+        android:background="@drawable/gallery_switch_background"
+        app:layout_constraintBottom_toTopOf="@+id/gallery_pet_name"
+        app:layout_constraintEnd_toStartOf="@+id/guideline9"
+        app:layout_constraintStart_toStartOf="@+id/guideline9"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <View
+            android:id="@+id/gallery_pet_button"
+            android:layout_width="185dp"
+            android:layout_height="match_parent"
+            android:background="@drawable/game_dialog_btn_norm"
+            android:clickable="true"
+            android:focusable="true"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            android:visibility="visible"/>
+
+        <View
+            android:id="@+id/gallery_monster_button"
+            android:layout_width="185dp"
+            android:layout_height="match_parent"
+            android:background="@drawable/game_dialog_btn_chosen"
+            android:clickable="true"
+            android:focusable="true"
+            android:visibility="visible"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="1.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.0"/>
+        <View
+            android:id="@+id/gallery_pet_invisible"
+            android:layout_width="185dp"
+            android:layout_height="match_parent"
+            android:background="@drawable/game_dialog_btn_norm"
+            android:clickable="true"
+            android:focusable="true"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            android:visibility="gone"/>
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:fontFamily="@font/titan_one"
+            android:text="Pet"
+            android:textSize="30sp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="@+id/gallery_monster_button"
+            app:layout_constraintHorizontal_bias="0.233"
+            app:layout_constraintStart_toStartOf="@+id/gallery_pet_button"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.50" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:fontFamily="@font/titan_one"
+            android:text="Monster"
+            android:textSize="30sp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.924"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.533" />
+
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
     <TextView
         android:id="@+id/gallery_pet_name"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
+        android:layout_marginBottom="36dp"
         android:fontFamily="@font/titan_one"
         android:text="Please Select a Pet!"
-        android:textSize="34sp"
-        app:layout_constraintBottom_toTopOf="@+id/gallery_pet_show"
+        android:textSize="30sp"
+        app:layout_constraintBottom_toTopOf="@+id/viewSwitcher"
         app:layout_constraintEnd_toStartOf="@+id/guideline9"
+        app:layout_constraintHorizontal_bias="0.498"
         app:layout_constraintStart_toStartOf="@+id/guideline9" />
 
-    <ImageView
-        android:id="@+id/gallery_pet_show"
-        android:layout_width="250dp"
-        android:layout_height="250dp"
-        android:src="@drawable/game_choose_nth_3"
+    <ViewSwitcher
+        android:id="@+id/viewSwitcher"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
         app:layout_constraintBottom_toTopOf="@+id/guideline4"
         app:layout_constraintEnd_toStartOf="@+id/guideline9"
-        app:layout_constraintHorizontal_bias="0.65"
+        app:layout_constraintHorizontal_bias="0.498"
         app:layout_constraintStart_toStartOf="@+id/guideline9"
-        app:layout_constraintTop_toTopOf="@+id/guideline4"
-        app:layout_constraintVertical_bias="0.49" />
+        app:layout_constraintTop_toTopOf="@+id/guideline4">
+
+        <!-- TextView to display text -->
+        <ImageView
+            android:id="@+id/game_pet_choose_image"
+            android:layout_width="150dp"
+            android:layout_height="150dp"
+            android:layout_gravity="center"
+            app:layout_constraintBottom_toTopOf="@+id/infoHorLine"
+            app:layout_constraintEnd_toStartOf="@+id/chooseVerLine"
+            app:layout_constraintStart_toStartOf="@+id/chooseVerLine"
+            app:layout_constraintTop_toTopOf="@+id/infoHorLine"
+            app:layout_constraintVertical_bias="0.413" />
 
+        <TextView
+            android:id="@+id/game_pet_choose_text"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:fontFamily="@font/titan_one"
+            android:text="Please Choose a Pet"
+            android:textSize="30sp" />
+    </ViewSwitcher>
+
     <TextView
-        android:id="@+id/textView3"
+        android:id="@+id/gallery_title"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:fontFamily="@font/titan_one"
         android:text="Pet Gallery"
         android:textSize="34sp"
         app:layout_constraintBottom_toTopOf="@+id/constraintLayout3"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.545"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/gallery_pet_show"
-        app:layout_constraintVertical_bias="0.518" />
+        app:layout_constraintEnd_toStartOf="@+id/guideline9"
+        app:layout_constraintStart_toStartOf="@+id/guideline9"
+        app:layout_constraintTop_toBottomOf="@+id/viewSwitcher"
+        app:layout_constraintVertical_bias="0.883" />
 
     <androidx.constraintlayout.widget.ConstraintLayout
         android:id="@+id/constraintLayout3"
@@ -107,14 +206,14 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:orientation="horizontal"
-        app:layout_constraintGuide_begin="158dp" />
+        app:layout_constraintGuide_begin="219dp" />
 
     <androidx.constraintlayout.widget.Guideline
         android:id="@+id/guideline9"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:orientation="vertical"
-        app:layout_constraintGuide_begin="216dp" />
+        app:layout_constraintGuide_begin="205dp" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
 
Index: app/src/main/res/layout/game_item_frame.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/unitFrame\"\r\n    android:layout_width=\"75dp\"\r\n    android:layout_height=\"75dp\"\r\n    android:background=\"@drawable/game_stroke_background\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:padding=\"4dp\"\r\n        android:scaleType=\"centerInside\"\r\n        />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/game_item_frame.xml b/app/src/main/res/layout/game_item_frame.xml
--- a/app/src/main/res/layout/game_item_frame.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/layout/game_item_frame.xml	(date 1733177686247)
@@ -12,7 +12,6 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:padding="4dp"
-        android:scaleType="centerInside"
-        />
+        android:scaleType="centerInside" />
 
 </FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/game_card_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"350dp\"\r\n    android:layout_height=\"550dp\"\r\n    android:orientation=\"vertical\"\r\n    android:gravity=\"center\"\r\n    android:id=\"@+id/dialog_root_layout\">\r\n\r\n    <View\r\n        android:id=\"@+id/dailgo_background_view\"\r\n        android:layout_width=\"320dp\"\r\n        android:layout_height=\"30dp\"\r\n        android:background=\"@color/disabled_color\"\r\n        android:padding=\"3dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/titleHorLine\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintHorizontal_bias=\"0.425\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/titleHorLine\"\r\n        app:layout_constraintVertical_bias=\"0.485\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/card_petName\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"Shy Raccoon\"\r\n        android:textSize=\"20sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/dailgo_background_view\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/dailgo_background_view\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/dailgo_background_view\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/dailgo_background_view\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/card_petId\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"004\"\r\n        android:textSize=\"20sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/dailgo_background_view\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/card_petName\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/dailgo_background_view\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/dailgo_background_view\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/card_image_line\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_end=\"402dp\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/card_pet_bg\"\r\n        android:layout_width=\"310dp\"\r\n        android:layout_height=\"190dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/card_image_line\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/card_image_line\"\r\n        app:layout_constraintHorizontal_bias=\"0.464\"\r\n        app:layout_constraintVertical_bias=\"0.526\"\r\n        app:srcCompat=\"@drawable/a_card_bg\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/card_pet_image\"\r\n        android:layout_width=\"170dp\"\r\n        android:layout_height=\"170dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/card_image_line\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/card_pet_bg\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/card_image_line\"\r\n        app:srcCompat=\"@drawable/pet_c_shyraccoon\" />\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"Artist : Nelson Fang\"\r\n        android:textSize=\"15dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.093\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/descConsLay\"\r\n        app:layout_constraintVertical_bias=\"0.515\" />\r\n\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/descConsLay\"\r\n        android:layout_width=\"320dp\"\r\n        android:layout_height=\"260dp\"\r\n        android:orientation=\"vertical\"\r\n        android:background=\"@color/disabled_color\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/descriptionBox_line\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintHorizontal_bias=\"0.581\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/card_virtical_line\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/descriptionBox_line\"\r\n        app:layout_constraintVertical_bias=\"0.458\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/dialog_petSkill_name\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"Skill Name\"\r\n            android:textSize=\"17sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/descHorLine\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintHorizontal_bias=\"0.528\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/descHorLine\"\r\n            app:layout_constraintVertical_bias=\"0.478\" />\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/dialog_skillCondition\"\r\n            android:layout_width=\"290dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"Deal 100 water damage\\non the 5th turn\\nwhen this unit is placed on the board\"\r\n            android:textSize=\"14.5sp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/dialog_petSkill_name\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/dialog_attak_type_title\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"Attack Type\"\r\n            android:textSize=\"17sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintHorizontal_bias=\"0.288\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/dialog_skillCondition\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/dialog_attackType\"\r\n            android:layout_width=\"290dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"Stay\"\r\n            android:textSize=\"14.5dp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/dialog_attak_type_title\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/dialog_count_title\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"Count\"\r\n            android:textStyle=\"bold\"\r\n            android:textSize=\"17sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/descVerLine\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/dialog_attackType\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/dialog_count\"\r\n            android:layout_width=\"290dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:text=\"5 turns make an attack\"\r\n            android:textSize=\"14.5dp\"\r\n            android:padding=\"5dp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.533\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/dialog_count_title\"/>\r\n\r\n        <androidx.constraintlayout.widget.Guideline\r\n            android:id=\"@+id/descVerLine\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintGuide_begin=\"62dp\" />\r\n\r\n        <androidx.constraintlayout.widget.Guideline\r\n            android:id=\"@+id/descHorLine\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            app:layout_constraintGuide_begin=\"16dp\" />\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/card_virtical_line\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintGuide_end=\"175dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/titleHorLine\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_percent=\"0.06\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/descriptionBox_line\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_end=\"170dp\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/game_card_layout.xml b/app/src/main/res/layout/game_card_layout.xml
--- a/app/src/main/res/layout/game_card_layout.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/layout/game_card_layout.xml	(date 1733177686244)
@@ -158,31 +158,31 @@
             app:layout_constraintStart_toStartOf="parent"
             app:layout_constraintTop_toBottomOf="@+id/dialog_attak_type_title"/>
 
-        <TextView
-            android:id="@+id/dialog_count_title"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:fontFamily="@font/titan_one"
-            android:padding="5dp"
-            android:text="Count"
-            android:textStyle="bold"
-            android:textSize="17sp"
-            app:layout_constraintEnd_toStartOf="@+id/descVerLine"
-            app:layout_constraintStart_toStartOf="@+id/descVerLine"
-            app:layout_constraintTop_toBottomOf="@+id/dialog_attackType"/>
+<!--        <TextView-->
+<!--            android:id="@+id/dialog_count_title"-->
+<!--            android:layout_width="match_parent"-->
+<!--            android:layout_height="wrap_content"-->
+<!--            android:fontFamily="@font/titan_one"-->
+<!--            android:padding="5dp"-->
+<!--            android:text="Count"-->
+<!--            android:textStyle="bold"-->
+<!--            android:textSize="17sp"-->
+<!--            app:layout_constraintEnd_toStartOf="@+id/descVerLine"-->
+<!--            app:layout_constraintStart_toStartOf="@+id/descVerLine"-->
+<!--            app:layout_constraintTop_toBottomOf="@+id/dialog_attackType"/>-->
 
-        <TextView
-            android:id="@+id/dialog_count"
-            android:layout_width="290dp"
-            android:layout_height="wrap_content"
-            android:fontFamily="@font/titan_one"
-            android:text="5 turns make an attack"
-            android:textSize="14.5dp"
-            android:padding="5dp"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintHorizontal_bias="0.533"
-            app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@+id/dialog_count_title"/>
+<!--        <TextView-->
+<!--            android:id="@+id/dialog_count"-->
+<!--            android:layout_width="290dp"-->
+<!--            android:layout_height="wrap_content"-->
+<!--            android:fontFamily="@font/titan_one"-->
+<!--            android:text="5 turns make an attack"-->
+<!--            android:textSize="14.5dp"-->
+<!--            android:padding="5dp"-->
+<!--            app:layout_constraintEnd_toEndOf="parent"-->
+<!--            app:layout_constraintHorizontal_bias="0.533"-->
+<!--            app:layout_constraintStart_toStartOf="parent"-->
+<!--            app:layout_constraintTop_toBottomOf="@+id/dialog_count_title"/>-->
 
         <androidx.constraintlayout.widget.Guideline
             android:id="@+id/descVerLine"
Index: app/src/main/res/layout/game_monster_choose.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/yellow\"\r\n    android:fitsSystemWindows=\"true\">\r\n\r\n    <Button\r\n        android:id=\"@+id/game_monster_info_btn\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"Stage Info\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/monster_status_bar\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/frameLayout\"\r\n        app:layout_constraintVertical_bias=\"0.222\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/game_monster_go\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"go!\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline6\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline6\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline6\"\r\n        android:layout_width=\"1dp\"\r\n        android:layout_height=\"1dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"659dp\" />\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/frameLayout\"\r\n        android:layout_width=\"250dp\"\r\n        android:layout_height=\"250dp\"\r\n        android:background=\"@drawable/game_element_frame_fire\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline11\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.495\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline11\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/bossView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/game_enemy_stamp\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/bossDefeatCover\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            app:srcCompat=\"@drawable/game_monster_defeat\" />\r\n\r\n\r\n    </FrameLayout>\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline11\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"236dp\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/back_button\"\r\n        android:layout_width=\"80dp\"\r\n        android:layout_height=\"80dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/frameLayout\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/frameLayout\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/frameLayout\"\r\n        app:srcCompat=\"@drawable/back_arrow\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/next_button\"\r\n        android:layout_width=\"80dp\"\r\n        android:layout_height=\"80dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/frameLayout\"\r\n        app:layout_constraintStart_toEndOf=\"@+id/frameLayout\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/frameLayout\"\r\n        app:srcCompat=\"@drawable/back_arrow\"\r\n        android:scaleX=\"-1\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/boss_title\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"5dp\"\r\n        android:text=\"TextView\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:textSize=\"34sp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/frameLayout\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/frameLayout\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/frameLayout\" />\r\n    <TextView\r\n        android:id=\"@+id/stage_Title\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"5dp\"\r\n        android:text=\"TextView\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:textSize=\"34sp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/boss_title\"\r\n        app:layout_constraintEnd_toEndOf=\"@+id/frameLayout\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/frameLayout\" />\r\n\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/monster_status_bar\"\r\n        android:layout_width=\"260dp\"\r\n        android:layout_height=\"40dp\"\r\n        android:background=\"@drawable/monster_status_bg\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline2\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.496\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline2\"\r\n        app:layout_constraintVertical_bias=\"1.0\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/monster_status_icon\"\r\n            android:layout_width=\"30dp\"\r\n            android:layout_height=\"30dp\"\r\n            android:visibility=\"invisible\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.059\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/monster_status_text\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:text=\"Not Yet Defeated!\"\r\n            android:textSize=\"20dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.304\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/monster_status_icon\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"460dp\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/monster_pets_warning\"\r\n        android:layout_width=\"290dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:text=\"Warning : \\n The number of pets selected is insufficient to challenge the boss!\"\r\n        android:textColor=\"@color/fire\"\r\n        android:textSize=\"18dp\"\r\n        android:visibility=\"invisible\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/game_monster_go\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.495\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/monster_status_bar\"\r\n        app:layout_constraintVertical_bias=\"0.25\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/game_monster_choose.xml b/app/src/main/res/layout/game_monster_choose.xml
--- a/app/src/main/res/layout/game_monster_choose.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/layout/game_monster_choose.xml	(date 1733177686249)
@@ -9,22 +9,25 @@
 
     <Button
         android:id="@+id/game_monster_info_btn"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
+        android:layout_width="250dp"
+        android:layout_height="50dp"
         android:fontFamily="@font/titan_one"
         android:text="Stage Info"
+        android:textSize="25dp"
         app:layout_constraintBottom_toTopOf="@+id/monster_status_bar"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/frameLayout"
-        app:layout_constraintVertical_bias="0.222" />
+        app:layout_constraintVertical_bias="0.225" />
 
     <Button
         android:id="@+id/game_monster_go"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:fontFamily="@font/titan_one"
+        android:gravity="center_horizontal"
         android:text="go!"
-        android:fontFamily="@font/titan_one"
+        android:textSize="30dp"
         app:layout_constraintBottom_toTopOf="@+id/guideline6"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
@@ -35,7 +38,7 @@
         android:layout_width="1dp"
         android:layout_height="1dp"
         android:orientation="horizontal"
-        app:layout_constraintGuide_begin="659dp" />
+        app:layout_constraintGuide_begin="660dp" />
 
     <FrameLayout
         android:id="@+id/frameLayout"
@@ -83,30 +86,31 @@
         android:id="@+id/next_button"
         android:layout_width="80dp"
         android:layout_height="80dp"
+        android:scaleX="-1"
         app:layout_constraintBottom_toBottomOf="@+id/frameLayout"
         app:layout_constraintStart_toEndOf="@+id/frameLayout"
         app:layout_constraintTop_toTopOf="@+id/frameLayout"
-        app:srcCompat="@drawable/back_arrow"
-        android:scaleX="-1"/>
+        app:srcCompat="@drawable/back_arrow" />
 
     <TextView
         android:id="@+id/boss_title"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginBottom="5dp"
-        android:text="TextView"
         android:fontFamily="@font/titan_one"
+        android:text="TextView"
         android:textSize="34sp"
         app:layout_constraintBottom_toTopOf="@+id/frameLayout"
         app:layout_constraintEnd_toEndOf="@+id/frameLayout"
         app:layout_constraintStart_toStartOf="@+id/frameLayout" />
+
     <TextView
         android:id="@+id/stage_Title"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_marginBottom="5dp"
+        android:fontFamily="@font/titan_one"
         android:text="TextView"
-        android:fontFamily="@font/titan_one"
         android:textSize="34sp"
         app:layout_constraintBottom_toTopOf="@+id/boss_title"
         app:layout_constraintEnd_toEndOf="@+id/frameLayout"
@@ -157,24 +161,43 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:orientation="horizontal"
-        app:layout_constraintGuide_begin="460dp" />
+        app:layout_constraintGuide_begin="457dp" />
+
 
     <TextView
         android:id="@+id/monster_pets_warning"
-        android:layout_width="290dp"
+        android:layout_width="330dp"
         android:layout_height="wrap_content"
         android:layout_marginTop="8dp"
         android:fontFamily="@font/titan_one"
-        android:text="Warning : \n The number of pets selected is insufficient to challenge the boss!"
+        android:text="Warning : \n The number of pets owned is insufficient to challenge the boss!"
         android:textColor="@color/fire"
-        android:textSize="18dp"
-        android:visibility="invisible"
+        android:textSize="21dp"
         app:layout_constraintBottom_toTopOf="@+id/game_monster_go"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.495"
+        app:layout_constraintHorizontal_bias="0.802"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/monster_status_bar"
-        app:layout_constraintVertical_bias="0.25" />
+        app:layout_constraintVertical_bias="0.277" />
+
+    <!--    <TextView-->
+<!--        android:id="@+id/monster_pets_go"-->
+<!--        android:layout_width="290dp"-->
+<!--        android:layout_height="wrap_content"-->
+<!--        android:layout_gravity="center"-->
+<!--        android:layout_marginTop="8dp"-->
+<!--        android:fontFamily="@font/titan_one"-->
+<!--        android:text="Pets Amount Required: \n 3 pets"-->
+<!--        android:textColor="@color/water"-->
+<!--        android:textSize="18dp"-->
+<!--        android:visibility="invisible"-->
+<!--        app:layout_constraintBottom_toTopOf="@+id/game_monster_go"-->
+<!--        app:layout_constraintEnd_toEndOf="parent"-->
+<!--        app:layout_constraintHorizontal_bias="0.57"-->
+<!--        app:layout_constraintStart_toStartOf="parent"-->
+<!--        app:layout_constraintTop_toBottomOf="@+id/monster_status_bar"-->
+<!--        app:layout_constraintVertical_bias="0.277" />-->
+
 
 
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+    </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/eggenda/gamePetChoose/GamePetChooseMainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.gamePetChoose\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Button\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport android.widget.ViewSwitcher\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.appcompat.app.AppCompatDelegate\r\nimport androidx.constraintlayout.widget.ConstraintLayout\r\nimport androidx.core.content.ContentProviderCompat.requireContext\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.fragment.app.DialogFragment\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.gameMonsterChoose.GameMonsterDialogFragment\r\nimport com.example.eggenda.gamePlay.gameActivity\r\nimport com.example.eggenda.gamePlay.petInfo2\r\nimport com.example.eggenda.gamePlay.stageInfo\r\nimport com.google.gson.Gson\r\nimport com.google.gson.reflect.TypeToken\r\n\r\nclass GamePetChooseMainActivity : AppCompatActivity(){\r\n    private lateinit var petsViewModel : GamePetChooseViewModel\r\n    private lateinit var petsAdapter: GamePetChooseAdapter\r\n    private lateinit var selectPetsAdapter: SelectAdapter\r\n    private lateinit var characterSelectedList : RecyclerView\r\n    private lateinit var characterRecyclerView : RecyclerView\r\n    private lateinit var startButton: Button\r\n    private lateinit var sharedPreferenceManager: SharedPreferenceManager\r\n    private lateinit var allPetsArrayID : IntArray\r\n    private lateinit var stageInfo : stageInfo\r\n    private lateinit var petInfo : petInfo2\r\n\r\n    //load info from other activities\r\n    private var selectedStage : Int = -1\r\n\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContentView(R.layout.game_character_choose)\r\n        AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)\r\n\r\n        //initalize classes\r\n        sharedPreferenceManager = SharedPreferenceManager(this)\r\n        petInfo = petInfo2()\r\n        stageInfo = stageInfo()\r\n\r\n        selectedStage = sharedPreferenceManager.getStageChoose()\r\n\r\n\r\n        //to set the game should have maximum how many characters\r\n        var deckSize = stageInfo.StageInfoMap(selectedStage)!!.deckSize\r\n\r\n        //the mutuable list that can save the list of the pets ,that can send to the game part\r\n        val selectedPetID =  MutableList<Int?>(deckSize){ null }\r\n\r\n        //initialize view model\r\n        val factory = GamePetChooseViewModel.GamePetChooseViewModelFactory(sharedPreferenceManager)\r\n        petsViewModel = ViewModelProvider(this, factory).get(GamePetChooseViewModel::class.java)\r\n\r\n        //initialize pets array that has in the code in int array\r\n        //here should take it form pet info class\r\n        allPetsArrayID = intArrayOf(0,1,2,3,4,5,6,7,8,9)\r\n\r\n        //initialize start button\r\n        startButton = findViewById(R.id.fight_start)\r\n        updateStartButtonState(false, selectedPetID)   //update the start button to gray\r\n\r\n\r\n        //set the monster class\r\n        val monsterConstraint = findViewById<ConstraintLayout>(R.id.monster_constraint_layout)\r\n        val monsterName = findViewById<TextView>(R.id.game_pet_choose_monseter)\r\n        val monsterPhoto = findViewById<ImageView>(R.id.game_pet_choose_monster_image)\r\n        monsterName.text = stageInfo.StageInfoMap(selectedStage)!!.name\r\n        monsterPhoto.setImageResource(stageInfo.StageInfoMap(selectedStage)!!.bossImageId)\r\n\r\n        //set a long click to check monster info\r\n        monsterConstraint.setOnLongClickListener{\r\n            showMonsterDetailDialog(selectedStage)\r\n            true\r\n        }\r\n\r\n\r\n        //set the character 3 in a row\r\n        characterRecyclerView = findViewById(R.id.game_characterchoose_recyclerView)\r\n        val filteredAmt = sharedPreferenceManager.getFilteredPetsAmount()\r\n        characterRecyclerView.layoutManager = GridLayoutManager(this, filteredAmt)\r\n\r\n        //set adapter for showing pets\r\n        petsAdapter = GamePetChooseAdapter(\r\n            allPetsArrayID,\r\n            selectedPetID,\r\n            sharedPreferenceManager,\r\n            this,\r\n            {petId -> onImageSelected(petId, selectedPetID) },\r\n            {petId -> onImageDeselected(petId, selectedPetID) },\r\n            {petId -> showPetDetailDialog(petId)})\r\n        petsAdapter.notifyDataSetChanged()\r\n        characterRecyclerView.adapter = petsAdapter\r\n\r\n\r\n        //set the selected image view with customized amount\r\n        characterSelectedList = findViewById(R.id.game_character_selectedList)\r\n//        val spanCount = if(maxSelectableImage > 0) maxSelectableImage else 3\r\n        characterSelectedList.layoutManager = GridLayoutManager(this, deckSize)\r\n\r\n        //set the adapter for selecting pets\r\n        selectPetsAdapter = SelectAdapter(deckSize, selectedPetID, petInfo)\r\n        characterSelectedList.adapter = selectPetsAdapter\r\n\r\n        //observe the changes of the pets photo\r\n        petsViewModel.allPets.observe(this, Observer { photos ->\r\n            Log.d(\"MainActivity\", \"allPets updated: $photos\")\r\n            petsAdapter.updatePetsChoose(photos)\r\n        })\r\n\r\n\r\n        //variables to set\r\n        val  viewSwitcher : ViewSwitcher = findViewById(R.id.viewSwitcher)\r\n        //preset the format\r\n        viewSwitcher.setDisplayedChild(1)\r\n\r\n        // Observe currently selected pet\r\n        petsViewModel.currentSelectedPet.observe(this) { petId ->\r\n\r\n            val petChosenImage = findViewById<ImageView>(R.id.game_pet_choose_image)\r\n\r\n\r\n            if (petId == null) {\r\n                // No pet selected, return to the initalized format\r\n                viewSwitcher.setDisplayedChild(1)\r\n                petChosenImage.setOnLongClickListener(null)\r\n            } else {\r\n                // Pet selected, display the image\r\n                petChosenImage.setImageResource(petInfo.getPetInfoById(petId)?.imageId ?: R.layout.gallery_pet_items_frame)\r\n                petChosenImage.visibility = View.VISIBLE\r\n                viewSwitcher.setDisplayedChild(0)\r\n\r\n                //set a long click so it can show the info of the pet\r\n                petChosenImage.setOnLongClickListener{\r\n                    showPetDetailDialog(petId)\r\n                    true\r\n                }\r\n            }\r\n        }\r\n\r\n        petsViewModel.selectedPets.observe(this, Observer { photos ->\r\n            selectPetsAdapter.updatePets(photos)\r\n            Log.d(\"Main Activity\", \"updated\")\r\n            updateStartButtonState(petsViewModel.isSelectionComplete(), selectedPetID)\r\n        })\r\n\r\n        petsViewModel.updateList(selectedPetID)\r\n\r\n    }\r\n\r\n    //make updates of selected pets with selectedAdapter\r\n    private fun onImageSelected(petId: Int, selectedPetID :MutableList <Int?> ) {\r\n        val emptyIndex = selectedPetID.indexOfFirst { it == null}\r\n        val petSelected = petInfo.getPetInfoById(petId)?.id     //get the petId by function\r\n\r\n        //if there is space\r\n        if(emptyIndex != -1){\r\n            selectedPetID[emptyIndex] = petSelected //renew the photo\r\n            selectPetsAdapter.updatePetsAt(emptyIndex, petSelected)\r\n\r\n            // Update the ViewModel with the current selection\r\n            petsViewModel.updateList(selectedPetID)\r\n            petsViewModel.selectPet(petId)  //notify View Model of the current selection\r\n        }\r\n        updateStartButtonState(petsViewModel.isSelectionComplete(), selectedPetID)\r\n        petsAdapter.notifyDataSetChanged() // update all photo's RecyclerView\r\n        selectPetsAdapter.notifyDataSetChanged() // update selected photo RecyclerView\r\n    }\r\n\r\n    //make deletetion and change of list with selected Adapter\r\n    private fun onImageDeselected(petId: Int, selectedPetID: MutableList<Int?>) {\r\n        val index = selectedPetID.indexOf(petId)         // find the chosen place of the photo\r\n\r\n        if (index != -1) { // if photo found\r\n            selectedPetID[index] = null // clear the chosen photo\r\n\r\n            // move photo\r\n            for (i in index until selectedPetID.size - 1) {\r\n                selectedPetID[i] = selectedPetID[i + 1] // the next photo move the the current position\r\n            }\r\n            selectedPetID[selectedPetID.size - 1] = null // clear the last position\r\n            petsViewModel.updateList(selectedPetID)      // Update the ViewModel with the current selection\r\n            petsViewModel.clearSelection()              // Clear the chosen image on top\r\n\r\n        }\r\n\r\n        updateStartButtonState(petsViewModel.isSelectionComplete(), selectedPetID)\r\n        petsAdapter.notifyDataSetChanged()\r\n        selectPetsAdapter.notifyDataSetChanged()\r\n    }\r\n\r\n    //update the color state of the start button\r\n    private fun updateStartButtonState(isEnable:Boolean, selectedPetArray: MutableList<Int?>){\r\n        if(isEnable){\r\n            //validate start button and let it go to the next page\r\n            startButton.isEnabled = true\r\n            startButton.setBackgroundColor(ContextCompat.getColor(this, R.color.enable_color))\r\n            startButton.invalidate()\r\n\r\n            startButton.setOnClickListener{\r\n                //save the list to shared preference\r\n                sharedPreferenceManager = SharedPreferenceManager(this)     //initalize mananger\r\n                val petIntArray : IntArray = selectedPetArray.filterNotNull().toIntArray()\r\n                sharedPreferenceManager.savePetsList(petIntArray)\r\n\r\n                //go to game start activity\r\n                val intent = Intent(this,gameActivity::class.java )\r\n                finish()\r\n                startActivity(intent)\r\n            }\r\n\r\n        }\r\n        else {\r\n            // change it into non-selectable status\r\n            startButton.isEnabled = false\r\n            startButton.setBackgroundColor(ContextCompat.getColor(this, R.color.disabled_color))\r\n            startButton.invalidate()\r\n\r\n        }\r\n    }\r\n\r\n    //set the show pet dialog function\r\n    private fun showPetDetailDialog(petId:Int){\r\n        val dialog = PetChooseDialogFragment.newInstance(petId)\r\n        dialog.show(supportFragmentManager, \"PetChooseDialog\")\r\n\r\n    }\r\n\r\n    //set the show monster dialog function\r\n    private fun showMonsterDetailDialog(stageId : Int){\r\n        val dialog = GameMonsterDialogFragment.newInstance(stageId)\r\n        dialog.show(supportFragmentManager, \"MonsterChooseDialog\")\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/gamePetChoose/GamePetChooseMainActivity.kt b/app/src/main/java/com/example/eggenda/gamePetChoose/GamePetChooseMainActivity.kt
--- a/app/src/main/java/com/example/eggenda/gamePetChoose/GamePetChooseMainActivity.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/gamePetChoose/GamePetChooseMainActivity.kt	(date 1733177686147)
@@ -44,8 +44,6 @@
     //load info from other activities
     private var selectedStage : Int = -1
 
-
-
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         enableEdgeToEdge()
@@ -56,14 +54,13 @@
         sharedPreferenceManager = SharedPreferenceManager(this)
         petInfo = petInfo2()
         stageInfo = stageInfo()
-
         selectedStage = sharedPreferenceManager.getStageChoose()
 
 
         //to set the game should have maximum how many characters
         var deckSize = stageInfo.StageInfoMap(selectedStage)!!.deckSize
 
-        //the mutuable list that can save the list of the pets ,that can send to the game part
+        //the mutuable list that can save the list of the pets ,that can send to the game partasqswq
         val selectedPetID =  MutableList<Int?>(deckSize){ null }
 
         //initialize view model
@@ -71,14 +68,12 @@
         petsViewModel = ViewModelProvider(this, factory).get(GamePetChooseViewModel::class.java)
 
         //initialize pets array that has in the code in int array
-        //here should take it form pet info class
-        allPetsArrayID = intArrayOf(0,1,2,3,4,5,6,7,8,9)
+        allPetsArrayID = IntArray(petInfo.getTotalPetAmount()){it}
 
         //initialize start button
         startButton = findViewById(R.id.fight_start)
         updateStartButtonState(false, selectedPetID)   //update the start button to gray
 
-
         //set the monster class
         val monsterConstraint = findViewById<ConstraintLayout>(R.id.monster_constraint_layout)
         val monsterName = findViewById<TextView>(R.id.game_pet_choose_monseter)
@@ -92,8 +87,7 @@
             true
         }
 
-
-        //set the character 3 in a row
+        //set the character in the layout, see choose adapter
         characterRecyclerView = findViewById(R.id.game_characterchoose_recyclerView)
         val filteredAmt = sharedPreferenceManager.getFilteredPetsAmount()
         characterRecyclerView.layoutManager = GridLayoutManager(this, filteredAmt)
@@ -113,7 +107,6 @@
 
         //set the selected image view with customized amount
         characterSelectedList = findViewById(R.id.game_character_selectedList)
-//        val spanCount = if(maxSelectableImage > 0) maxSelectableImage else 3
         characterSelectedList.layoutManager = GridLayoutManager(this, deckSize)
 
         //set the adapter for selecting pets
@@ -122,19 +115,16 @@
 
         //observe the changes of the pets photo
         petsViewModel.allPets.observe(this, Observer { photos ->
-            Log.d("MainActivity", "allPets updated: $photos")
             petsAdapter.updatePetsChoose(photos)
         })
 
 
-        //variables to set
+        //view switcher setting
         val  viewSwitcher : ViewSwitcher = findViewById(R.id.viewSwitcher)
-        //preset the format
-        viewSwitcher.setDisplayedChild(1)
+        viewSwitcher.setDisplayedChild(1)//preset the format
 
         // Observe currently selected pet
         petsViewModel.currentSelectedPet.observe(this) { petId ->
-
             val petChosenImage = findViewById<ImageView>(R.id.game_pet_choose_image)
 
 
@@ -158,7 +148,6 @@
 
         petsViewModel.selectedPets.observe(this, Observer { photos ->
             selectPetsAdapter.updatePets(photos)
-            Log.d("Main Activity", "updated")
             updateStartButtonState(petsViewModel.isSelectionComplete(), selectedPetID)
         })
 
Index: app/src/main/java/com/example/eggenda/gamePetChoose/PetChooseDialogFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.gamePetChoose\r\n\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.fragment.app.DialogFragment\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.gamePlay.dict\r\nimport com.example.eggenda.gamePlay.petInfo2\r\n\r\nclass PetChooseDialogFragment  : DialogFragment (){\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n//        val view =  inflater.inflate(R.layout.game_pet_choose_dialog, container, false)\r\n        val view =  inflater.inflate(R.layout.game_card_layout, container, false)\r\n        val petInfo = petInfo2()\r\n        val getId = arguments?.getInt(ARG_PET_ID)\r\n        val getpet = getId?.let { petInfo.getPetInfoById(it) }\r\n\r\n        val element_background = dict.ELEMENT_STRING[getpet?.element!!]\r\n        val rarity = dict.RARETY_STRING[getpet?.rarity!!]\r\n        val rootLayout : View = view.findViewById(R.id.dialog_root_layout)\r\n\r\n\r\n        //rarity need to change\r\n        when (rarity){\r\n            \"LEGENDARY\" ->\r\n                when(element_background){\r\n                    \"Fire\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_fire_gold)\r\n                    \"Water\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_water_gold)\r\n                    \"Forest\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_forest_gold)\r\n                }\r\n            \"RARE\" ->\r\n                when(element_background){\r\n                    \"Fire\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_fire_silver)\r\n                    \"Water\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_water_silver)\r\n                    \"Forest\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_forest_silver)\r\n                }\r\n\r\n            \"NORMAL\" ->\r\n                when(element_background){\r\n                    \"Fire\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_fire_gray)\r\n                    \"Water\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_water_gray)\r\n                    \"Forest\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_forest_gray)\r\n                }\r\n\r\n\r\n        }\r\n\r\n        //set the data on views\r\n        if (getpet != null) {\r\n            view.findViewById<ImageView>(R.id.card_pet_image).setImageResource(getpet.imageId)\r\n            view.findViewById<TextView>(R.id.card_petId).text = String.format(\"%03d\", getpet.id)\r\n            view.findViewById<TextView>(R.id.card_petName).text = getpet.name\r\n            view.findViewById<TextView>(R.id.dialog_petSkill_name).text = getpet.skillName\r\n            view.findViewById<TextView>(R.id.dialog_skillCondition).text = getpet.description\r\n            view.findViewById<TextView>(R.id.dialog_attackType).text = dict.ATK_STRING[getpet.attackType]\r\n            view.findViewById<TextView>(R.id.dialog_count).text = getpet.count.toString() + \"turn(s) to make an attack\"\r\n        }\r\n\r\n        return view\r\n\r\n    }\r\n\r\n    override fun onCreate (savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        val petInfo = petInfo2()\r\n        val getId = arguments?.getInt(ARG_PET_ID)\r\n        val getpet = getId?.let { petInfo.getPetInfoById(it) }\r\n    }\r\n\r\n    companion object{\r\n        private const val ARG_PET_ID = \"pet_id\"\r\n\r\n        fun newInstance(petId : Int) : PetChooseDialogFragment{\r\n            val fragment = PetChooseDialogFragment()\r\n            val args = Bundle().apply {putInt(ARG_PET_ID, petId)}\r\n            fragment.arguments = args\r\n            return fragment\r\n        }\r\n    }\r\n\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n\r\n        //set the size of the dialog\r\n        dialog?.window?.setLayout(\r\n            resources.getDimensionPixelSize(R.dimen.card_width),\r\n            resources.getDimensionPixelSize(R.dimen.card_hight),\r\n\r\n        )\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/gamePetChoose/PetChooseDialogFragment.kt b/app/src/main/java/com/example/eggenda/gamePetChoose/PetChooseDialogFragment.kt
--- a/app/src/main/java/com/example/eggenda/gamePetChoose/PetChooseDialogFragment.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/gamePetChoose/PetChooseDialogFragment.kt	(date 1733177686149)
@@ -63,7 +63,7 @@
             view.findViewById<TextView>(R.id.dialog_petSkill_name).text = getpet.skillName
             view.findViewById<TextView>(R.id.dialog_skillCondition).text = getpet.description
             view.findViewById<TextView>(R.id.dialog_attackType).text = dict.ATK_STRING[getpet.attackType]
-            view.findViewById<TextView>(R.id.dialog_count).text = getpet.count.toString() + "turn(s) to make an attack"
+//            view.findViewById<TextView>(R.id.dialog_count).text = getpet.count.toString() + "turn(s) to make an attack"
         }
 
         return view
Index: app/src/main/res/layout/activity_game.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".gamePlay.gameActivity\"\r\n    android:fitsSystemWindows=\"true\"\r\n    android:paddingBottom=\"?attr/actionBarSize\"\r\n    android:background=\"#FFEBCC\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/turnView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:text=\"Turn 1\"\r\n        android:textSize=\"24sp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/bossFrame\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"200dp\"\r\n        android:background=\"@drawable/game_word_background\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.496\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/turnView\">\r\n\r\n\r\n        <ImageView\r\n            android:id=\"@+id/bossView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@drawable/game_enemy_goblin\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/effect\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\" />\r\n    </FrameLayout>\r\n\r\n    <FrameLayout\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"30dp\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:background=\"@drawable/game_hp_bar_background\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/bossFrame\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/hp_bar\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"30dp\"\r\n            android:layout_gravity=\"start\"\r\n            android:background=\"#FF0000\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/hp_fraction\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:text=\"200/200\"\r\n            android:textColor=\"#FFFFFF\"\r\n            android:textStyle=\"bold\" />\r\n\r\n    </FrameLayout>\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"412dp\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Deck\"\r\n        android:textSize=\"30sp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline3\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline3\"\r\n        app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline3\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"542dp\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/constraintLayout2\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline\">\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/boardRecyclerView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            tools:spanCount=\"15\" />\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/constraintLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"80dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView\">\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/unitRecyclerView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.498\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            tools:spanCount=\"15\" />\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/hp_bar_player_BG\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"30dp\"\r\n        android:background=\"@drawable/game_hp_bar_background\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/constraintLayout\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/hp_bar_player\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"30dp\"\r\n            android:layout_gravity=\"start\"\r\n            android:background=\"#125F00\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/hp_fraction_player\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:text=\"100/100\"\r\n            android:textColor=\"#FFFFFF\"\r\n            android:textStyle=\"bold\" />\r\n\r\n    </FrameLayout>\r\n\r\n    <Button\r\n        android:id=\"@+id/temp_restart\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:layout_marginEnd=\"11dp\"\r\n        android:text=\"Temp\\nRestart\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_game.xml b/app/src/main/res/layout/activity_game.xml
--- a/app/src/main/res/layout/activity_game.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/layout/activity_game.xml	(date 1733177686240)
@@ -164,15 +164,27 @@
 
     </FrameLayout>
 
-    <Button
+<!--    <Button-->
+<!--        android:id="@+id/temp_restart"-->
+<!--        android:layout_width="wrap_content"-->
+<!--        android:layout_height="wrap_content"-->
+<!--        android:layout_marginTop="16dp"-->
+<!--        android:layout_marginEnd="11dp"-->
+<!--        android:text="Temp\nRestart"-->
+<!--        app:layout_constraintEnd_toEndOf="parent"-->
+<!--        app:layout_constraintTop_toTopOf="parent" />-->
+
+    <ImageView
         android:id="@+id/temp_restart"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="16dp"
-        android:layout_marginEnd="11dp"
-        android:text="Temp\nRestart"
+        android:layout_width="75dp"
+        android:layout_height="75dp"
+        android:src="@drawable/game_menu_icon"
+        app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        app:layout_constraintHorizontal_bias="0.922"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.049" />
 
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/eggenda/gameMonsterChoose/GameMonsterChooseMainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.gameMonsterChoose\r\n\r\nimport android.content.Intent\r\nimport android.media.Image\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.widget.Button\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.appcompat.app.AppCompatDelegate\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.core.view.isInvisible\r\nimport androidx.core.view.isVisible\r\nimport androidx.lifecycle.Observer\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.gamePetChoose.GamePetChooseMainActivity\r\nimport com.example.eggenda.gamePetChoose.PetChooseDialogFragment\r\nimport com.example.eggenda.gamePetChoose.SharedPreferenceManager\r\nimport com.example.eggenda.gamePlay.gameActivity\r\nimport com.example.eggenda.gamePlay.stageInfo\r\nimport org.w3c.dom.Text\r\n\r\nclass GameMonsterChooseMainActivity : AppCompatActivity () {\r\n\r\n    private lateinit var button: Button\r\n    private lateinit var infoButton : Button\r\n    private lateinit var sharedPreferenceManager: SharedPreferenceManager\r\n    private lateinit var stageInfo: stageInfo\r\n\r\n\r\n    private lateinit var viewModel: monsterChooseViewModel\r\n    private var stageId: Int = 0\r\n\r\n    private lateinit var stageTitle:TextView\r\n    private lateinit var bossTitle:TextView\r\n    private lateinit var backBtn:ImageView\r\n    private lateinit var nextBtn:ImageView\r\n    private lateinit var bossImage:ImageView\r\n    private lateinit var bossChallengeCover :ImageView  //add cover to boss image if the boss is not challengable at ths moment\r\n    private lateinit var stageDoneArrayList: ArrayList<Int>\r\n    private lateinit var monsterStatusIcon : ImageView\r\n    private lateinit var monsterStatusText : TextView\r\n    private lateinit var monsterWarningText : TextView\r\n    private lateinit var ownedPetsList : ArrayList<Int> // to check if the pets are enough for play or not\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)\r\n        setContentView(R.layout.game_monster_choose)\r\n        sharedPreferenceManager = SharedPreferenceManager(this)\r\n        stageInfo = stageInfo()\r\n        viewModel = monsterChooseViewModel()\r\n\r\n        stageTitle = findViewById(R.id.stage_Title)\r\n        bossTitle = findViewById(R.id.boss_title)\r\n        backBtn = findViewById(R.id.back_button)\r\n        nextBtn = findViewById(R.id.next_button)\r\n        bossImage = findViewById(R.id.bossView)\r\n        bossChallengeCover = findViewById(R.id.bossDefeatCover)\r\n        monsterStatusIcon = findViewById(R.id.monster_status_icon)\r\n        monsterStatusText = findViewById(R.id.monster_status_text)\r\n        monsterWarningText = findViewById(R.id.monster_pets_warning)\r\n\r\n        //handle stageDone\r\n        stageDoneArrayList = sharedPreferenceManager.getStageDone()\r\n        if(stageDoneArrayList.size != stageInfo.stageTotalNum){\r\n            stageDoneArrayList = getNewStageDone(stageDoneArrayList, stageInfo.stageTotalNum)\r\n            sharedPreferenceManager.saveStageDone(stageDoneArrayList)\r\n        }\r\n\r\n        //handle the owned pets size whenever the pets is updated or not\r\n        ownedPetsList = sharedPreferenceManager.getPetOwnership()\r\n         val ownedPets : IntArray = ownedPetsList.toIntArray()\r\n\r\n        var filteredPetsList = ownedPetsList.filterIndexed { index, _->\r\n            index < ownedPets.size && ownedPets[index] == 1\r\n        } .also { Log.d(\"FilteredPets\", \"filteredPetsList size: ${it.size}\") }\r\n\r\n\r\n        //set the button\r\n\r\n        button = findViewById(R.id.game_monster_go)\r\n\r\n        viewModel.chosenStageID.observe(this, Observer { newStageId->\r\n            if(newStageId == 0 ){\r\n                backBtn.isInvisible = true\r\n            }\r\n            else{\r\n                backBtn.isInvisible = false\r\n            }\r\n            if(newStageId  == stageInfo.stageTotalNum - 1){\r\n                nextBtn.isInvisible = true\r\n            }\r\n            else{\r\n                nextBtn.isInvisible = false\r\n            }\r\n            val selectedStage = stageInfo.StageInfoMap(newStageId)!!\r\n            val stageStr = \"Stage \"+(newStageId + 1).toString()+\":\"\r\n            val bossStr = selectedStage.name\r\n\r\n            //set the stage status bar\r\n            if(stageDoneArrayList[newStageId] == 1){\r\n                monsterStatusIcon.isVisible = true\r\n                monsterStatusIcon.setImageResource(R.drawable.game_monster_tick)\r\n                monsterStatusText.text = \"Finished!\"\r\n//                bossChallengeCover.isInvisible = false\r\n\r\n            }\r\n            else{\r\n                monsterStatusIcon.isVisible = false\r\n                monsterStatusText.text = \"You're ready to play!\"\r\n//                bossChallengeCover.isInvisible = true\r\n            }\r\n\r\n            //set the mask if the user does not get enough pets for that stage\r\n            if(stageInfo.StageInfoMap(newStageId)!!.deckSize > filteredPetsList.size){\r\n                bossChallengeCover.isVisible = true\r\n                monsterWarningText.isVisible = true\r\n                monsterWarningText.text = \"Warning : \\n The number of pets owned is insufficient to \" +\r\n                        \"challenge the boss! \\n Pets owned now: ${filteredPetsList.size} \\n\" + \"\" +\r\n                        \"Stage Required : ${stageInfo.StageInfoMap(newStageId)!!.deckSize}\"\r\n                monsterStatusIcon.isVisible = true\r\n                monsterStatusIcon.setImageResource(R.drawable.game_monster_cross)\r\n                monsterStatusText.text = \"Pets not enough!\"\r\n\r\n                // change it into non-selectable status\r\n                button.isVisible = false\r\n                button.setBackgroundColor(ContextCompat.getColor(this, R.color.disabled_color))\r\n                button.invalidate()\r\n\r\n\r\n            } else {\r\n                bossChallengeCover.isVisible = false\r\n                monsterWarningText.isVisible = false\r\n                buttonClickableStatus()\r\n\r\n            }\r\n\r\n            stageTitle.text = stageStr\r\n            bossTitle.text = bossStr\r\n            bossImage.setImageResource(selectedStage.bossImageId)\r\n            viewModel.updateAmount(selectedStage.deckSize)\r\n\r\n        })\r\n\r\n        bossImage.setOnLongClickListener {\r\n            val stageId = viewModel.chosenStageID.value ?: 0\r\n            showMonsterDetailDialog(stageId)\r\n            true\r\n        }\r\n\r\n\r\n        backBtn.setOnClickListener{\r\n            viewModel.subtractChosenStageID()\r\n        }\r\n        nextBtn.setOnClickListener{\r\n            viewModel.addChosenStageID()\r\n        }\r\n\r\n        infoButton = findViewById(R.id.game_monster_info_btn)\r\n\r\n        infoButton.setOnClickListener {\r\n            val stageId = viewModel.chosenStageID.value ?: 0\r\n            showMonsterDetailDialog(stageId)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    private fun buttonClickableStatus(){\r\n\r\n        button.isVisible = true\r\n        button.setBackgroundColor(ContextCompat.getColor(this, R.color.enable_color))\r\n        button.invalidate()\r\n\r\n        button.setOnClickListener {\r\n            //for pet amount\r\n            sharedPreferenceManager.savePetsAmount(viewModel.getAmount())\r\n            val retrievedList = sharedPreferenceManager.getPetOwnership()\r\n            val intArrayhihi : IntArray = retrievedList.toIntArray()\r\n            Log.d(\"Retrieved List\", \"IntArray: ${intArrayhihi.joinToString(\",\")}\")\r\n\r\n            //for stage id\r\n            Log.d(\"stageID\", \"chosen: ${viewModel.getChosenStageID()}\")\r\n            sharedPreferenceManager.saveStageChoose(viewModel.getChosenStageID())\r\n\r\n            Log.d(\"stageID\", \"saved: ${sharedPreferenceManager.getStageChoose()}\")\r\n            val intent = Intent(this, GamePetChooseMainActivity::class.java)\r\n            startActivity(intent)\r\n            finish()\r\n        }\r\n    }\r\n\r\n    //update the color state of the start button\r\n    private fun updateStartButtonState(isEnable:Boolean, selectedPetArray: MutableList<Int?>){\r\n        if(isEnable){\r\n            //validate start button and let it go to the next page\r\n            button.isEnabled = true\r\n            button.setBackgroundColor(ContextCompat.getColor(this, R.color.enable_color))\r\n            button.invalidate()\r\n\r\n            button.setOnClickListener {\r\n\r\n                //for stage id\r\n                Log.d(\"stageID\", \"chosen: ${viewModel.getChosenStageID()}\")\r\n                sharedPreferenceManager.saveStageChoose(viewModel.getChosenStageID())\r\n\r\n                Log.d(\"stageID\", \"saved: ${sharedPreferenceManager.getStageChoose()}\")\r\n                val intent = Intent(this, GamePetChooseMainActivity::class.java)\r\n                startActivity(intent)\r\n                finish()\r\n            }\r\n\r\n        }\r\n        else {\r\n            // change it into non-selectable status\r\n            button.isEnabled = false\r\n            button.setBackgroundColor(ContextCompat.getColor(this, R.color.disabled_color))\r\n            button.invalidate()\r\n\r\n        }\r\n    }\r\n\r\n    private fun getNewStageDone(oldStageDone: ArrayList<Int>, stageCount: Int):ArrayList<Int>{\r\n        val ret = ArrayList<Int>()\r\n        for(i in 1..stageCount){\r\n            ret.add(0)\r\n        }\r\n        var index = 0\r\n        while(index < oldStageDone.size && index < stageCount){\r\n            ret[index] = oldStageDone[index]\r\n            index ++\r\n        }\r\n        return ret\r\n    }\r\n\r\n    //set the show dialog funciton\r\n    private fun showMonsterDetailDialog(stageId:Int){\r\n        val dialog = GameMonsterDialogFragment.newInstance(stageId)\r\n        dialog.show(supportFragmentManager, \"MonsterChooseDialog\")\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/gameMonsterChoose/GameMonsterChooseMainActivity.kt b/app/src/main/java/com/example/eggenda/gameMonsterChoose/GameMonsterChooseMainActivity.kt
--- a/app/src/main/java/com/example/eggenda/gameMonsterChoose/GameMonsterChooseMainActivity.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/gameMonsterChoose/GameMonsterChooseMainActivity.kt	(date 1733177686144)
@@ -7,6 +7,7 @@
 import android.widget.Button
 import android.widget.ImageView
 import android.widget.TextView
+import android.widget.ViewSwitcher
 import androidx.activity.enableEdgeToEdge
 import androidx.appcompat.app.AppCompatActivity
 import androidx.appcompat.app.AppCompatDelegate
@@ -79,7 +80,6 @@
             index < ownedPets.size && ownedPets[index] == 1
         } .also { Log.d("FilteredPets", "filteredPetsList size: ${it.size}") }
 
-
         //set the button
 
         button = findViewById(R.id.game_monster_go)
@@ -112,13 +112,14 @@
             else{
                 monsterStatusIcon.isVisible = false
                 monsterStatusText.text = "You're ready to play!"
-//                bossChallengeCover.isInvisible = true
+
             }
 
             //set the mask if the user does not get enough pets for that stage
             if(stageInfo.StageInfoMap(newStageId)!!.deckSize > filteredPetsList.size){
                 bossChallengeCover.isVisible = true
                 monsterWarningText.isVisible = true
+                monsterWarningText.setTextColor(resources.getColor(R.color.fire))
                 monsterWarningText.text = "Warning : \n The number of pets owned is insufficient to " +
                         "challenge the boss! \n Pets owned now: ${filteredPetsList.size} \n" + "" +
                         "Stage Required : ${stageInfo.StageInfoMap(newStageId)!!.deckSize}"
@@ -134,8 +135,11 @@
 
             } else {
                 bossChallengeCover.isVisible = false
-                monsterWarningText.isVisible = false
+                monsterWarningText.isVisible = true
                 buttonClickableStatus()
+                monsterWarningText.setTextColor(resources.getColor(R.color.water))
+                monsterWarningText.text = "Pets Required : \nPets owned now: ${filteredPetsList.size} \n"  +
+                        "Stage Required : ${stageInfo.StageInfoMap(newStageId)!!.deckSize}"
 
             }
 
Index: app/src/main/java/com/example/eggenda/gamePlay/petDialog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.gamePlay\r\n\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.fragment.app.DialogFragment\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.gamePetChoose.PetChooseDialogFragment\r\nimport com.example.eggenda.gamePetChoose.PetChooseDialogFragment.Companion\r\n\r\nclass petDialog : DialogFragment(){\r\n\r\n    private var petId: Int? = null\r\n    private var petOrder: Int? = null\r\n    private var petCondition : String ?= null\r\n    private var petNextDmg : String? = null\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        val view =  inflater.inflate(R.layout.game_pet_play_dialog, container, false)\r\n\r\n        val petInfo = petInfo2()\r\n        val getId = arguments?.let {\r\n            petId = it.getInt(ARG_PET_ID)\r\n            petOrder = it.getInt(ARG_PET_ORDER)\r\n            petCondition = it.getString(ARG_PET_STATUS)\r\n            petNextDmg = it.getString(ARG_PET_NEXT_DMG)\r\n        }\r\n        val getpet = getId?.let { petInfo.getPetInfoById(petId!!) }\r\n\r\n\r\n        val element_background = dict.ELEMENT_STRING[getpet?.element!!]\r\n        val rarity = dict.RARETY_STRING[getpet?.rarity!!]\r\n        val rootLayout : View = view.findViewById(R.id.game_dialog_root_layout)\r\n\r\n\r\n        //rarity need to change\r\n        when (rarity){\r\n            \"LEGENDARY\" ->\r\n                when(element_background){\r\n                    \"Fire\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_fire_gold)\r\n                    \"Water\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_water_gold)\r\n                    \"Forest\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_forest_gold)\r\n                }\r\n            \"RARE\" ->\r\n                when(element_background){\r\n                    \"Fire\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_fire_silver)\r\n                    \"Water\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_water_silver)\r\n                    \"Forest\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_forest_silver)\r\n                }\r\n\r\n            \"NORMAL\" ->\r\n                when(element_background){\r\n                    \"Fire\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_fire_gray)\r\n                    \"Water\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_water_gray)\r\n                    \"Forest\" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_forest_gray)\r\n                }\r\n\r\n\r\n        }\r\n\r\n        //set the data on views\r\n        if (getpet != null) {\r\n            view.findViewById<ImageView>(R.id.game_card_pet_image).setImageResource(getpet.imageId)\r\n            view.findViewById<TextView>(R.id.game_card_petId).text = String.format(\"%03d\", getpet.id)\r\n            view.findViewById<TextView>(R.id.game_card_petName).text = getpet.name\r\n            view.findViewById<TextView>(R.id.game_dialog_petSkill_name).text = getpet.skillName\r\n            view.findViewById<TextView>(R.id.game_dialog_skillDescription).text = getpet.description\r\n            view.findViewById<TextView>(R.id.game_dialog_next_reminder).text = petCondition\r\n            view.findViewById<TextView>(R.id.game_dialog_nextDmgAmount).text = petNextDmg\r\n        }\r\n\r\n        return view\r\n    }\r\n\r\n    override fun onCreate (savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        Log.d(\"DialogFragment\", \"SecondDialogFragment created\")\r\n        val petInfo = petInfo2()\r\n        val getId = arguments?.getInt(ARG_PET_ID)\r\n        val getpet = getId?.let { petInfo.getPetInfoById(it) }\r\n    }\r\n\r\n\r\n    companion object{\r\n        private const val ARG_PET_ID = \"pet_id\"\r\n        private const val ARG_PET_ORDER = \"pet_order\"\r\n        private const val ARG_PET_STATUS = \"pet_status\"\r\n        private const val ARG_PET_NEXT_DMG = \"pet_next_damage\"\r\n\r\n        fun newInstance(petId : Int, petOrder : Int, petStatus: String, petNextDmg : String) : petDialog {\r\n            val fragment = petDialog()\r\n            val args = Bundle().apply {\r\n                putInt(ARG_PET_ID, petId)\r\n                putInt(ARG_PET_ORDER, petOrder)\r\n                putString(ARG_PET_STATUS, petStatus)\r\n                putString(ARG_PET_NEXT_DMG, petNextDmg)}\r\n            fragment.arguments = args\r\n            return fragment\r\n        }\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n\r\n        //set the size of the dialog\r\n        dialog?.window?.setLayout(\r\n            resources.getDimensionPixelSize(R.dimen.card_width),\r\n            resources.getDimensionPixelSize(R.dimen.card_hight),\r\n\r\n            )\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/gamePlay/petDialog.kt b/app/src/main/java/com/example/eggenda/gamePlay/petDialog.kt
--- a/app/src/main/java/com/example/eggenda/gamePlay/petDialog.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/gamePlay/petDialog.kt	(date 1733178266871)
@@ -48,6 +48,7 @@
                     "Fire" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_fire_gold)
                     "Water" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_water_gold)
                     "Forest" -> dialog?.window?.setBackgroundDrawableResource(R.drawable.game_dialog_forest_gold)
+
                 }
             "RARE" ->
                 when(element_background){
@@ -66,6 +67,7 @@
 
         }
 
+
         //set the data on views
         if (getpet != null) {
             view.findViewById<ImageView>(R.id.game_card_pet_image).setImageResource(getpet.imageId)
@@ -73,8 +75,17 @@
             view.findViewById<TextView>(R.id.game_card_petName).text = getpet.name
             view.findViewById<TextView>(R.id.game_dialog_petSkill_name).text = getpet.skillName
             view.findViewById<TextView>(R.id.game_dialog_skillDescription).text = getpet.description
-            view.findViewById<TextView>(R.id.game_dialog_next_reminder).text = petCondition
+//            view.findViewById<TextView>(R.id.game_dialog_next_reminder).text = petCondition
+            view.findViewById<TextView>(R.id.game_dialog_next_dmg_title).text = petCondition
             view.findViewById<TextView>(R.id.game_dialog_nextDmgAmount).text = petNextDmg
+            view.findViewById<ImageView>(R.id.game_card_pet_bg).setImageResource(getpet.backgroundId)
+//            view.findViewById<ImageView>(R.id.pet_card_icon).setImageResource(R.drawable.game_petcard_water)
+//            when (element_background){
+//                "Fire" -> view.findViewById<ImageView>(R.id.pet_card_icon).setImageResource(R.drawable.game_petcard_fire)
+//                "Water" -> view.findViewById<ImageView>(R.id.pet_card_icon).setImageResource(R.drawable.game_petcard_water)
+//                "Forest" -> view.findViewById<ImageView>(R.id.pet_card_icon).setImageResource(R.drawable.game_petcard_forest)
+//                else -> view.findViewById<ImageView>(R.id.pet_card_icon).setImageResource(R.drawable.pet_c_shyraccoon)
+//            }
         }
 
         return view
Index: app/src/main/res/layout/game_character_choose.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/yellow\"\r\n    android:fitsSystemWindows=\"true\"\r\n    tools:context=\".gamePetChoose.GamePetChooseMainActivity\">\r\n\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/monster_constraint_layout\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:background=\"@color/disabled_color\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/monsterHorLine\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/chooseVerLine\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/chooseVerLine\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/monsterHorLine\">\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/game_pet_choose_monseter\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Innocent Sapling\"\r\n            android:textSize=\"20dp\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/monsterBoxHorLine\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.185\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/monsterBoxHorLine\"\r\n            app:layout_constraintVertical_bias=\"0.481\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/game_pet_choose_monster_image\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"100dp\"\r\n            android:src=\"@drawable/game_enemy_sapling\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/monsterBoxHorLine\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/game_pet_choose_monseter\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/monsterBoxHorLine\" />\r\n\r\n        <androidx.constraintlayout.widget.Guideline\r\n            android:id=\"@+id/monsterBoxHorLine\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            app:layout_constraintGuide_begin=\"50dp\" />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <ViewSwitcher\r\n        android:id=\"@+id/viewSwitcher\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/infoHorLine\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/chooseVerLine\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/chooseVerLine\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/infoHorLine\">\r\n\r\n        <!-- TextView to display text -->\r\n        <ImageView\r\n            android:id=\"@+id/game_pet_choose_image\"\r\n            android:layout_width=\"150dp\"\r\n            android:layout_height=\"150dp\"\r\n            android:layout_gravity=\"center\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/infoHorLine\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/chooseVerLine\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/chooseVerLine\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/infoHorLine\"\r\n            app:layout_constraintVertical_bias=\"0.413\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/game_pet_choose_text\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/titan_one\"\r\n            android:text=\"Please Choose a Pet\"\r\n            android:layout_gravity=\"center\"\r\n            android:textSize=\"30sp\" />\r\n    </ViewSwitcher>\r\n\r\n<!--    <ImageView-->\r\n<!--        android:id=\"@+id/game_pet_choose_image\"-->\r\n<!--        android:layout_width=\"150dp\"-->\r\n<!--        android:layout_height=\"150dp\"-->\r\n<!--        app:layout_constraintBottom_toTopOf=\"@+id/infoHorLine\"-->\r\n<!--        app:layout_constraintEnd_toStartOf=\"@+id/chooseVerLine\"-->\r\n<!--        app:layout_constraintStart_toStartOf=\"@+id/chooseVerLine\"-->\r\n<!--        app:layout_constraintTop_toTopOf=\"@+id/infoHorLine\"-->\r\n<!--        app:layout_constraintVertical_bias=\"0.413\"-->\r\n<!--        app:srcCompat=\"@drawable/game_choose_nth_3\" />-->\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView2\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Choose Your Pets to Fight\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:textSize=\"20dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline12\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/chooseVerLine\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/chooseVerLine\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline12\" />\r\n\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"160dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView2\">\r\n\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/game_characterchoose_recyclerView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.498\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            tools:spanCount=\"15\">\r\n\r\n        </androidx.recyclerview.widget.RecyclerView>\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Pets to fight\"\r\n        android:fontFamily=\"@font/titan_one\"\r\n        android:textSize=\"20dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/guideline18\"\r\n        app:layout_constraintEnd_toStartOf=\"@+id/chooseVerLine\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/chooseVerLine\"\r\n        app:layout_constraintTop_toTopOf=\"@+id/guideline18\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/constraintLayout4\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"80dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView\">\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/game_character_selectedList\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.498\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            tools:spanCount=\"15\">\r\n\r\n\r\n        </androidx.recyclerview.widget.RecyclerView>\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <Button\r\n        android:id=\"@+id/fight_start\"\r\n        android:layout_width=\"105dp\"\r\n        android:layout_height=\"40dp\"\r\n        android:layout_marginBottom=\"16dp\"\r\n        android:background=\"@drawable/game_start_button\"\r\n        android:enabled=\"false\"\r\n        android:fontFamily=\"monospace\"\r\n        android:text=\"START\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.498\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/constraintLayout4\"\r\n        app:layout_constraintVertical_bias=\"1.0\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/infoHorLine\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"212dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/chooseVerLine\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintGuide_begin=\"205dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/chooseBoxHorLine\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"420dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/selectBoxHHorLine\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"579dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/monsterHorLine\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"78dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline18\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"553dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline12\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintGuide_begin=\"318dp\" />\r\n\r\n    <!--    <TextView-->\r\n    <!--        android:layout_width=\"wrap_content\"-->\r\n    <!--        android:layout_height=\"wrap_content\"-->\r\n    <!--        android:background=\"@color/block_background\"-->\r\n    <!--        android:text=\"Deck View\"-->\r\n    <!--        android:textSize=\"20dp\"-->\r\n    <!--        app:layout_constraintBottom_toTopOf=\"@+id/constraintLayout\"-->\r\n    <!--        app:layout_constraintEnd_toEndOf=\"parent\"-->\r\n    <!--        app:layout_constraintHorizontal_bias=\"0.261\"-->\r\n    <!--        app:layout_constraintStart_toStartOf=\"parent\"-->\r\n    <!--        app:layout_constraintTop_toTopOf=\"@+id/constraintLayout\"-->\r\n    <!--        app:layout_constraintVertical_bias=\"1.0\" />-->\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/game_character_choose.xml b/app/src/main/res/layout/game_character_choose.xml
--- a/app/src/main/res/layout/game_character_choose.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/layout/game_character_choose.xml	(date 1733177686246)
@@ -84,17 +84,6 @@
             android:textSize="30sp" />
     </ViewSwitcher>
 
-<!--    <ImageView-->
-<!--        android:id="@+id/game_pet_choose_image"-->
-<!--        android:layout_width="150dp"-->
-<!--        android:layout_height="150dp"-->
-<!--        app:layout_constraintBottom_toTopOf="@+id/infoHorLine"-->
-<!--        app:layout_constraintEnd_toStartOf="@+id/chooseVerLine"-->
-<!--        app:layout_constraintStart_toStartOf="@+id/chooseVerLine"-->
-<!--        app:layout_constraintTop_toTopOf="@+id/infoHorLine"-->
-<!--        app:layout_constraintVertical_bias="0.413"-->
-<!--        app:srcCompat="@drawable/game_choose_nth_3" />-->
-
     <TextView
         android:id="@+id/textView2"
         android:layout_width="wrap_content"
@@ -173,6 +162,7 @@
         android:id="@+id/fight_start"
         android:layout_width="105dp"
         android:layout_height="40dp"
+        android:layout_marginTop="80dp"
         android:layout_marginBottom="16dp"
         android:background="@drawable/game_start_button"
         android:enabled="false"
@@ -182,8 +172,7 @@
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.498"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/constraintLayout4"
-        app:layout_constraintVertical_bias="1.0" />
+        app:layout_constraintTop_toTopOf="@+id/guideline18" />
 
     <androidx.constraintlayout.widget.Guideline
         android:id="@+id/infoHorLine"
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <!-- Default screen margins, per the Android Design guidelines. -->\r\n    <dimen name=\"activity_horizontal_margin\">16dp</dimen>\r\n    <dimen name=\"activity_vertical_margin\">16dp</dimen>\r\n    <dimen name=\"nav_header_vertical_spacing\">8dp</dimen>\r\n    <dimen name=\"nav_header_height\">176dp</dimen>\r\n    <dimen name=\"fab_margin\">16dp</dimen>\r\n    <dimen name=\"card_width\">350dp</dimen>\r\n    <dimen name=\"card_hight\">550dp</dimen>\r\n    <dimen name=\"menu_width\">300dp</dimen>\r\n    <dimen name=\"menu_hight\">300dp</dimen>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
--- a/app/src/main/res/values/dimens.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/values/dimens.xml	(date 1733177686251)
@@ -9,4 +9,6 @@
     <dimen name="card_hight">550dp</dimen>
     <dimen name="menu_width">300dp</dimen>
     <dimen name="menu_hight">300dp</dimen>
+    <dimen name="tutorial_width">370dp</dimen>
+    <dimen name="tutorial_hight">650dp</dimen>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"purple_200\">#FFD798</color>\r\n    <color name=\"purple_500\">#FFB034</color>\r\n    <color name=\"purple_700\">#FF9B00</color>\r\n    <color name=\"teal_200\">#FFD798</color>\r\n    <color name=\"teal_700\">#FF9B00</color>\r\n    <color name=\"black\">#FF000000</color>\r\n    <color name=\"white\">#FFFFFFFF</color>\r\n    <color name=\"bold_yellow\">#FFB034</color>\r\n    <color name=\"yellow\">#FFEBCC</color>\r\n    <color name=\"dark_blue\">#1B1F31</color>\r\n    <color name=\"enable_color\">#FFB554</color>\r\n    <color name=\"gold_rare\">#EEFFDB59</color>\r\n    <color name=\"silver_rare\">#C0C0C0</color>\r\n    <color name=\"bronze_rare\">#B08D57</color>\r\n    <color name=\"fire\">#EEFF5959</color>\r\n    <color name=\"water\">#EE66A0FF</color>\r\n    <color name=\"forest\">#EE87FFAB</color>\r\n    <color name=\"disabled_color\">#D7D7D7</color>\r\n<!--    <color name=\"disabled_color\">#A0A0A0</color>-->\r\n    <color name=\"link\">#1f9acf</color>\r\n    <color name=\"red\">#FD2222</color>\r\n    <color name=\"strike_through_color\">@color/bold_yellow</color> <!-- Red for strike-through -->\r\n    <color name=\"normal_text_color\">#FF0000</color>    <!-- Black for normal text -->\r\n    <color name=\"brown\">#4A310A</color>\r\n    <color name=\"light_brown\">#CC4A310A</color>\r\n    <color name=\"dialog_btn_norm\">#99DB9B</color>\r\n    <color name=\"dialog_btn_norm1\">#60AF60</color>\r\n    <color name=\"dialog_btn_chosen\">#FF8181</color>\r\n    <color name=\"dialog_btn_chosen1\">#D44848</color>\r\n    <color name=\"yellow_subbackground\">#EAD7BF</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/res/values/colors.xml	(date 1733177686251)
@@ -18,7 +18,7 @@
     <color name="water">#EE66A0FF</color>
     <color name="forest">#EE87FFAB</color>
     <color name="disabled_color">#D7D7D7</color>
-<!--    <color name="disabled_color">#A0A0A0</color>-->
+    <color name="dialog_bg_color">#EDD9B0</color>
     <color name="link">#1f9acf</color>
     <color name="red">#FD2222</color>
     <color name="strike_through_color">@color/bold_yellow</color> <!-- Red for strike-through -->
Index: app/src/main/java/com/example/eggenda/ui/gallery/GalleryFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.ui.gallery\r\n\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.fragment.app.DialogFragment\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.databinding.FragmentGalleryBinding\r\nimport com.example.eggenda.gamePetChoose.GamePetChooseViewModel\r\nimport com.example.eggenda.gamePetChoose.PetChooseDialogFragment\r\nimport com.example.eggenda.gamePetChoose.SharedPreferenceManager\r\nimport com.example.eggenda.gamePlay.petInfo2\r\nimport com.google.firebase.crashlytics.buildtools.reloc.org.apache.commons.io.input.ObservableInputStream\r\n\r\nclass GalleryFragment : Fragment() {\r\n\r\n    private lateinit var sharedPreferenceManager: SharedPreferenceManager\r\n    private lateinit var petInfo: petInfo2\r\n    private lateinit var galleryViewModel: GalleryViewModel\r\n    private lateinit var allPetsArrayID : IntArray\r\n    private lateinit var petsAdapter: GalleryAdapter\r\n    private lateinit var characterRecyclerView: RecyclerView\r\n\r\n    private var _binding: FragmentGalleryBinding? = null\r\n\r\n\r\n    // This property is only valid between onCreateView and\r\n    // onDestroyView.edrqwe\r\n    private val binding get() = _binding!!\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        //inflate the layout for the gallery fragment\r\n        _binding = FragmentGalleryBinding.inflate(inflater, container, false)\r\n        sharedPreferenceManager = SharedPreferenceManager(requireContext())\r\n        petInfo = petInfo2()\r\n\r\n        val binding = FragmentGalleryBinding.inflate(inflater, container, false)\r\n        val root: View = binding.root\r\n        characterRecyclerView = binding.galleryCharacterchooseRecyclerView\r\n\r\n        characterRecyclerView = root.findViewById(R.id.gallery_characterchoose_recyclerView)\r\n        characterRecyclerView.layoutManager = GridLayoutManager(requireContext(), 3)\r\n\r\n        //the mutuable list that can save the list of the pets ,that can send to the game part\r\n        val selectedPetID =  MutableLiveData<Int?>()\r\n\r\n//        val factory = GalleryViewModel.GalleryViewModelFactory(sharedPreferenceManager)\r\n        galleryViewModel = ViewModelProvider(this)[GalleryViewModel::class.java]\r\n\r\n        //initialize pets array that has in the code in int array\r\n        //here should take it from pet info class\r\n        allPetsArrayID = intArrayOf(0,1,2,3,4,5,6,7,8,9)\r\n\r\n        //initalized classes and views\r\n        characterRecyclerView = root.findViewById(R.id.gallery_characterchoose_recyclerView)\r\n\r\n        //set the adapter to show the pets\r\n        petsAdapter = GalleryAdapter(\r\n            allPetsArrayID,\r\n            sharedPreferenceManager,\r\n            {petId -> galleryViewModel.selectPet(petId)},\r\n            {petId -> showPetDetailDialog(petId)})\r\n\r\n        petsAdapter.notifyDataSetChanged()\r\n        characterRecyclerView.adapter = petsAdapter\r\n\r\n        galleryViewModel.allPets.observe(viewLifecycleOwner, Observer { photos ->\r\n            Log.d(\"Gallery Fragment\", \"allPets updated: $photos\")\r\n            petsAdapter.updatePetsChoose(photos)\r\n        })\r\n\r\n\r\n        galleryViewModel.currentSelectedPet.observe(viewLifecycleOwner){ petId ->\r\n\r\n            //set the chosen image\r\n            val petChosenImage = root.findViewById<ImageView>(R.id.gallery_pet_show)\r\n            val petChoosenText = root.findViewById<TextView>(R.id.gallery_pet_name)\r\n\r\n            if (petId == null) {\r\n                // No pet selected, return to the initalized format\r\n                petChosenImage.setImageResource(R.drawable.game_choose_nth_3)\r\n                petChoosenText.text = \"Please Select a Pet!\"\r\n                petChosenImage.setOnLongClickListener(null)\r\n            } else {\r\n                // Pet selected, display the image\r\n                petChosenImage.setImageResource(petInfo.getPetInfoById(petId)?.imageId ?: R.layout.gallery_pet_items_frame)\r\n                petChoosenText.text = petInfo.getPetInfoById(petId)?.name\r\n                petChosenImage.visibility = View.VISIBLE\r\n\r\n                //set a long click so it can show the info of the pet\r\n                petChosenImage.setOnLongClickListener{\r\n                    showPetDetailDialog(petId)\r\n                    true\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        return root\r\n    }\r\n\r\n    private fun showPetDetailDialog(petId: Int) {\r\n        // Show a dialog with pet details\r\n        val dialog = PetChooseDialogFragment.newInstance(petId)\r\n        dialog.show(parentFragmentManager, \"PetChooseDialog\")\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryFragment.kt b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryFragment.kt
--- a/app/src/main/java/com/example/eggenda/ui/gallery/GalleryFragment.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/ui/gallery/GalleryFragment.kt	(date 1733177686171)
@@ -7,7 +7,10 @@
 import android.view.ViewGroup
 import android.widget.ImageView
 import android.widget.TextView
+import android.widget.ViewSwitcher
 import androidx.activity.enableEdgeToEdge
+import androidx.constraintlayout.widget.ConstraintLayout
+import androidx.core.view.isVisible
 import androidx.fragment.app.DialogFragment
 import androidx.fragment.app.Fragment
 import androidx.lifecycle.MutableLiveData
@@ -17,10 +20,12 @@
 import androidx.recyclerview.widget.RecyclerView
 import com.example.eggenda.R
 import com.example.eggenda.databinding.FragmentGalleryBinding
+import com.example.eggenda.gameMonsterChoose.GameMonsterDialogFragment
 import com.example.eggenda.gamePetChoose.GamePetChooseViewModel
 import com.example.eggenda.gamePetChoose.PetChooseDialogFragment
 import com.example.eggenda.gamePetChoose.SharedPreferenceManager
 import com.example.eggenda.gamePlay.petInfo2
+import com.example.eggenda.gamePlay.stageInfo
 import com.google.firebase.crashlytics.buildtools.reloc.org.apache.commons.io.input.ObservableInputStream
 
 class GalleryFragment : Fragment() {
@@ -30,7 +35,16 @@
     private lateinit var galleryViewModel: GalleryViewModel
     private lateinit var allPetsArrayID : IntArray
     private lateinit var petsAdapter: GalleryAdapter
+    private lateinit var monsterAdapter : GalleryMonsterAdapter
     private lateinit var characterRecyclerView: RecyclerView
+    private lateinit var allStageArrayID : IntArray
+    private lateinit var stageInfo: stageInfo
+    private lateinit var pet_view_button : View
+    private lateinit var monster_view_button:View
+    private lateinit var viewSwitcher : ViewSwitcher
+    private lateinit var petChosenImage : ImageView
+    private lateinit var petChoosenText : TextView
+    private lateinit var gallery_pet_invisible : View
 
     private var _binding: FragmentGalleryBinding? = null
 
@@ -48,27 +62,66 @@
         _binding = FragmentGalleryBinding.inflate(inflater, container, false)
         sharedPreferenceManager = SharedPreferenceManager(requireContext())
         petInfo = petInfo2()
+        stageInfo = stageInfo()
 
         val binding = FragmentGalleryBinding.inflate(inflater, container, false)
         val root: View = binding.root
         characterRecyclerView = binding.galleryCharacterchooseRecyclerView
 
+        pet_view_button = root.findViewById(R.id.gallery_pet_button)
+        monster_view_button = root.findViewById(R.id.gallery_monster_button)
+
         characterRecyclerView = root.findViewById(R.id.gallery_characterchoose_recyclerView)
         characterRecyclerView.layoutManager = GridLayoutManager(requireContext(), 3)
-
-        //the mutuable list that can save the list of the pets ,that can send to the game part
-        val selectedPetID =  MutableLiveData<Int?>()
-
-//        val factory = GalleryViewModel.GalleryViewModelFactory(sharedPreferenceManager)
         galleryViewModel = ViewModelProvider(this)[GalleryViewModel::class.java]
-
-        //initialize pets array that has in the code in int array
-        //here should take it from pet info class
-        allPetsArrayID = intArrayOf(0,1,2,3,4,5,6,7,8,9)
-
         //initalized classes and views
         characterRecyclerView = root.findViewById(R.id.gallery_characterchoose_recyclerView)
 
+        monster_view_button.setBackgroundResource(R.drawable.gallery_switch_background)
+        pet_view_button.setBackgroundResource(R.drawable.game_dialog_btn_norm)
+        viewSwitcher  = root.findViewById(R.id.viewSwitcher)
+
+        petChosenImage = root.findViewById(R.id.game_pet_choose_image)
+        petChoosenText = root.findViewById(R.id.gallery_pet_name)
+        gallery_pet_invisible = root.findViewById(R.id.gallery_pet_invisible)
+        val textTitleSetting : TextView= root.findViewById(R.id.gallery_pet_name)
+        val box_title : TextView = root.findViewById(R.id.gallery_title)
+
+        //initialize pets array that has in the code in int array
+
+        allPetsArrayID = IntArray(petInfo.getTotalPetAmount()) { it }
+        allStageArrayID = IntArray(stageInfo.stageTotalNum){it}
+
+
+        //initalize it as pet first
+        gallery_pet_invisible.visibility = View.VISIBLE
+        petViewButton()
+        // Make sure both views are clickable
+        pet_view_button.isClickable = true
+        monster_view_button.isClickable = true
+
+        pet_view_button.setOnClickListener {
+            textTitleSetting.text = "Please Select a Pet!"
+            box_title.text = "Pet Gallery"
+            gallery_pet_invisible.visibility = View.VISIBLE
+            petViewButton()
+        } // end of pets view click listener
+
+        monster_view_button.setOnClickListener {
+            textTitleSetting.text = "Please Select a Monster!"
+            box_title.text = "Monster Gallery"
+            gallery_pet_invisible.visibility = View.GONE
+            monsterViewButton()
+        } // end of pets view click listener
+
+        return root
+    }
+
+    private fun petViewButton(){
+        monster_view_button.setBackgroundResource(R.drawable.gallery_switch_background)
+        pet_view_button.setBackgroundResource(R.drawable.game_dialog_btn_norm)
+        galleryViewModel.clearSelectionMonster()
+
         //set the adapter to show the pets
         petsAdapter = GalleryAdapter(
             allPetsArrayID,
@@ -79,25 +132,20 @@
         petsAdapter.notifyDataSetChanged()
         characterRecyclerView.adapter = petsAdapter
 
-        galleryViewModel.allPets.observe(viewLifecycleOwner, Observer { photos ->
-            Log.d("Gallery Fragment", "allPets updated: $photos")
-            petsAdapter.updatePetsChoose(photos)
-        })
 
 
+        //variables to set
+        viewSwitcher.setDisplayedChild(1) //preset the format
         galleryViewModel.currentSelectedPet.observe(viewLifecycleOwner){ petId ->
 
             //set the chosen image
-            val petChosenImage = root.findViewById<ImageView>(R.id.gallery_pet_show)
-            val petChoosenText = root.findViewById<TextView>(R.id.gallery_pet_name)
-
             if (petId == null) {
                 // No pet selected, return to the initalized format
-                petChosenImage.setImageResource(R.drawable.game_choose_nth_3)
-                petChoosenText.text = "Please Select a Pet!"
+                viewSwitcher.setDisplayedChild(1)
                 petChosenImage.setOnLongClickListener(null)
             } else {
                 // Pet selected, display the image
+                viewSwitcher.setDisplayedChild(0)
                 petChosenImage.setImageResource(petInfo.getPetInfoById(petId)?.imageId ?: R.layout.gallery_pet_items_frame)
                 petChoosenText.text = petInfo.getPetInfoById(petId)?.name
                 petChosenImage.visibility = View.VISIBLE
@@ -110,10 +158,46 @@
             }
 
         }
+    }
+
+    private fun monsterViewButton(){
+        Log.d("GalleryFragment", "Monster button clicked")
+        monster_view_button.setBackgroundResource(R.drawable.game_dialog_btn_chosen)
+        pet_view_button.setBackgroundResource(R.drawable.gallery_switch_background)
+        galleryViewModel.clearSelectionPets()
 
+        //set the adapter to show the pets
+        monsterAdapter = GalleryMonsterAdapter(allStageArrayID,
+            sharedPreferenceManager,
+            {monsterId -> galleryViewModel.selectMonster(monsterId)},
+            {monsterId -> showMonsterDetailDialog(monsterId)})
 
+        monsterAdapter.notifyDataSetChanged()
+        characterRecyclerView.adapter = monsterAdapter
 
-        return root
+
+        //variables to set
+        galleryViewModel.currentSelectedMonster.observe(viewLifecycleOwner){ monsterId ->
+
+            if (monsterId == null) {
+                // No pet selected, return to the initalized format
+                viewSwitcher.setDisplayedChild(1)
+                petChosenImage.setOnLongClickListener(null)
+            } else {
+                // Pet selected, display the image
+                viewSwitcher.setDisplayedChild(0)
+                petChosenImage.setImageResource(stageInfo.StageInfoMap(monsterId)?.bossImageId ?: R.layout.gallery_pet_items_frame)
+                petChoosenText.text = stageInfo.StageInfoMap(monsterId)?.name
+                petChosenImage.visibility = View.VISIBLE
+
+                //set a long click so it can show the info of the pet
+                petChoosenText.setOnLongClickListener{
+                    showMonsterDetailDialog(monsterId)
+                    true
+                }
+            }
+
+        }
     }
 
     private fun showPetDetailDialog(petId: Int) {
@@ -122,6 +206,13 @@
         dialog.show(parentFragmentManager, "PetChooseDialog")
     }
 
+    //set the show dialog funciton
+    private fun showMonsterDetailDialog(stageId:Int){
+        val dialog = GameMonsterDialogFragment.newInstance(stageId)
+        dialog.show(parentFragmentManager, "MonsterChooseDialog")
+
+    }
+
     override fun onDestroyView() {
         super.onDestroyView()
         _binding = null
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"17\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/.idea/compiler.xml	(date 1733177706570)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="17" />
+    <bytecodeTargetLevel target="21" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/.idea/misc.xml	(date 1733178077884)
@@ -1,6 +1,6 @@
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="jbr-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#GRADLE_LOCAL_JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/.idea/gradle.xml	(date 1733178124979)
@@ -4,6 +4,7 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
+        <option name="testRunner" value="CHOOSE_PER_TEST" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="gradleJvm" value="#GRADLE_LOCAL_JAVA_HOME" />
         <option name="modules">
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-feature android:name=\"android.hardware.camera\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.VIBRATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\r\n\r\n    <uses-permission android:name=\"android.permission.SCHEDULE_EXACT_ALARM\" />\r\n    <uses-permission android:name=\"android.permission.USE_EXACT_ALARM\" />\r\n    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\r\n    <uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Eggenda\"\r\n        tools:targetApi=\"31\">\r\n\r\n        <activity\r\n            android:name=\".gamePlay.gameActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".gamePetChoose.GamePetChooseMainActivity\"\r\n            android:exported=\"false\"/>\r\n        <activity\r\n            android:name=\".gameMonsterChoose.GameMonsterChooseMainActivity\"\r\n            android:exported=\"false\"/>\r\n\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.Eggenda.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <receiver android:name=\".services.BootReceiver\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\r\n            </intent-filter>\r\n        </receiver>\r\n\r\n        <receiver\r\n            android:name=\".services.TaskAlarmReceiver\"\r\n            android:exported=\"true\" />\r\n\r\n        <service android:name=\".services.NotifyService\" />\r\n\r\n\r\n        <activity android:name=\".ui.settings.ProfileActivity\"/>\r\n        <activity android:name=\".ui.account.LoginActivity\"/>\r\n        <activity android:name=\".ui.account.CreateAccountActivity\"/>\r\n        <activity android:name=\".ui.account.CreateProfileActivity\"/>\r\n        <activity android:name=\".ui.task.AddTaskActivity\"/>\r\n        <activity android:name=\".ui.task.ConfirmTasksActivity\"/>\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"com.example.eggenda\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/file_paths\" />\r\n        </provider>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/AndroidManifest.xml	(date 1733177842467)
@@ -3,18 +3,14 @@
     xmlns:tools="http://schemas.android.com/tools">
 
     <uses-feature android:name="android.hardware.camera" />
+
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.VIBRATE" />
-    <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
-    <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM" />
-    <uses-permission android:name="android.permission.USE_EXACT_ALARM" />
-    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
-    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
-
     <application
         android:allowBackup="true"
         android:dataExtractionRules="@xml/data_extraction_rules"
@@ -25,7 +21,9 @@
         android:supportsRtl="true"
         android:theme="@style/Theme.Eggenda"
         tools:targetApi="31">
-
+        <activity
+            android:name=".gameTutorial.tutorialActivity"
+            android:exported="false" />
         <activity
             android:name=".gamePlay.gameActivity"
             android:exported="false" />
Index: app/src/main/java/com/example/eggenda/gamePlay/petInfo2.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.gamePlay\r\n\r\nimport com.example.eggenda.R\r\nimport kotlin.math.abs\r\n\r\nclass petInfo2 {\r\n\r\n    private val TOTAL = 10\r\n\r\n    private val GLUTINOUS_BUNNY= 0\r\n    private val EVIL_WATER = 1\r\n    private val FLAMING_SKULL = 2\r\n    private val LIL_MOTHY = 3\r\n    private val SHY_RACCOON = 4\r\n    private val HEALING_SPRITE = 5\r\n    private val BABY_OWLBEAR = 6\r\n    private val AMBUSH_MOUSEVIPER = 7\r\n    private val ANIMATED_NUTCRACKER = 8\r\n    private val DEEPSEA_MERMAN = 9\r\n\r\n    fun getPetInfoById(id: Int):Pet?{\r\n        val petMap: Map<Int, () -> Pet> = mapOf(\r\n            // TODO\r\n            BABY_OWLBEAR to {babyOwlbear()},\r\n            AMBUSH_MOUSEVIPER to {ambushMouseviper()},\r\n            EVIL_WATER to {evilWater()},\r\n            ANIMATED_NUTCRACKER to {animatedNutcracker()},\r\n            DEEPSEA_MERMAN to {deepseaMerman()},\r\n            FLAMING_SKULL to {flamingSkull()},\r\n            GLUTINOUS_BUNNY to {glutinousBunny()},\r\n            HEALING_SPRITE to {healingSprite()},\r\n            LIL_MOTHY to {lilMothman()},\r\n            SHY_RACCOON to {shyRaccoon()}\r\n\r\n        )\r\n        return petMap[id]?.invoke()\r\n    }\r\n\r\n    fun getTotalPetAmount():Int{return TOTAL}\r\n\r\n    interface Pet{\r\n        val id: Int\r\n        val name: String\r\n        val imageId: Int\r\n        val element: Int\r\n        val attackType: Int\r\n        val damage: Int\r\n        val count: Int\r\n        val skillName: String\r\n        val description: String\r\n        val rarity: Int\r\n\r\n        fun dealDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int):Int\r\n        fun attackCountdown(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int):Int\r\n        fun condition(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int):String\r\n        fun nextDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int):String\r\n        fun resetAfterDamage():Boolean\r\n    }\r\n\r\n    private class glutinousBunny :Pet {\r\n        override val id: Int = 0\r\n        override val name: String = \"Glutinous Bunny\"\r\n        override val imageId: Int = R.drawable.pet_c_glutinousbunny\r\n        override val element: Int = dict.ELEMENT_FOREST\r\n        override val attackType: Int = dict.ATK_TYPE_STAY\r\n        override val damage: Int = -30\r\n        override val count: Int = 2\r\n        override val skillName :String =\"Sleepy...\"\r\n        override val description: String = \"Heals \"+(damage * -1)+\" hp every \"+count +\" turns\\n\" +\r\n                \"when it stays on the board.\"\r\n        override val rarity: Int = dict.RARITY_NORMAL\r\n\r\n        override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            if(petStatus[petOrder]!!.stayNum != 0 && petStatus[petOrder]!!.stayNum % count == 0 && petStatus[petOrder]!!.location == dict.onBoard) {\r\n\r\n                return damage\r\n            }\r\n            return 0////\r\n        }\r\n\r\n        override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return 0\r\n            }\r\n//        return (petStatus[petOrder]!!.stayNum % (catInfo.count) )\r\n            return count - petStatus[petOrder]!!.stayNum % (count+1)\r\n        }\r\n\r\n        override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return count.toString()+\" more turn(s) to stay on the board \"\r\n            }\r\n            else{\r\n                return attackCountdown(petStatus, petOrder,deckSize).toString()+\" more turn(s) to stay on the board\"\r\n            }\r\n\r\n        }\r\n\r\n        override fun nextDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int): String {\r\n            return \"Heals \"+(damage * -1).toString()+\" hp\"\r\n        }\r\n\r\n        override fun resetAfterDamage(): Boolean {\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    private class evilWater() :Pet {\r\n        override val id: Int = 1\r\n        override val name: String = \"Evil Water\"\r\n        override val imageId: Int = R.drawable.pet_b_evilwater\r\n        override val element: Int = dict.ELEMENT_WATER\r\n        override val attackType: Int = dict.ATK_TYPE_RETURN\r\n        override val damage: Int = 20\r\n        override val count: Int = 1\r\n        override val skillName :String =\"Fragile!\"\r\n        override val description: String = \"Deal \"+damage.toString()+\" \"+dict.ELEMENT_STRING[element]+\" damages\\n\" +\r\n                \"when it is knocked out from the board\\n\" +\r\n                \"on the next turn after it is placed on the board.\"\r\n        override val rarity: Int = dict.RARITY_NORMAL\r\n\r\n        override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            if(petStatus[petOrder]!!.stayNum == count && petStatus[petOrder]!!.location == dict.onDECK ) {\r\n                return damage\r\n            }\r\n            return 0\r\n        }\r\n\r\n        override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            val stayNum = petStatus[petOrder]!!.stayNum\r\n            if( stayNum <= 1 ){\r\n                return count - stayNum\r\n            }\r\n            return -1\r\n        }\r\n\r\n        override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return \"Knocked out from the board after\\n\" +\r\n                        \"1 more turn it stays on the board \"\r\n            }\r\n            else{\r\n                val count = attackCountdown(petStatus, petOrder,deckSize)\r\n                var countStr = \"∞\"\r\n                if(count >= 0){\r\n                    countStr = count.toString()\r\n                }\r\n                return \"Knocked out from the board after\\n\" +\r\n                        countStr+\" more turn it stays on the board \"\r\n            }\r\n        }\r\n\r\n        override fun nextDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int): String {\r\n            val count = attackCountdown(petStatus, petOrder,deckSize)\r\n            if(count >= 0){\r\n                return damage.toString()+\" \" +dict.ELEMENT_STRING[element]+\" damages\"\r\n            }\r\n            return \"0 \" +dict.ELEMENT_STRING[element]+\" damages\"\r\n        }\r\n\r\n        override fun resetAfterDamage(): Boolean {\r\n            return true\r\n        }\r\n    }\r\n\r\n    private class flamingSkull :Pet {\r\n        override val id: Int = 2\r\n        override val name: String = \"Flaming Skull\"\r\n        override val imageId: Int = R.drawable.pet_c_flamingskull\r\n        override val element: Int =  dict.ELEMENT_FIRE\r\n        override val attackType: Int = dict.ATK_TYPE_BOUNCE\r\n        override val damage: Int = 40\r\n        override val count: Int = 2\r\n        override val skillName:String = \"You can't catch me!\"\r\n        override val description: String = \"Deal \"+damage+\" \"+dict.ELEMENT_STRING[element]+\" damage\\n\" +\r\n                \"after every \"+count+ \" position change when it is on the board.\"\r\n        override val rarity: Int = dict.RARITY_RARE\r\n\r\n        override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            val skullStatus = petStatus[petOrder]!!\r\n            if(skullStatus.bounceNum !=0 && skullStatus.bounceNum % count == 0 && skullStatus.location == dict.onBoard) {\r\n                return damage\r\n            }\r\n            return 0\r\n        }\r\n\r\n        override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            return count - petStatus[petOrder]!!.bounceNum\r\n        }\r\n\r\n        override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return count.toString()+\" more bounce when it stay on the board\\n\"\r\n            }\r\n            else{\r\n                val count = attackCountdown(petStatus, petOrder,deckSize)\r\n                return count.toString()+\" more bounce when it stay on the board\\n\"\r\n            }\r\n        }\r\n\r\n        override fun nextDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            return damage.toString()+\" \"+dict.ELEMENT_STRING[element]+\" damages\"\r\n        }\r\n\r\n        override fun resetAfterDamage(): Boolean {\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    private class lilMothman :Pet {\r\n        override val id: Int = 3\r\n        override val name: String = \"Lil' Mothman\"\r\n        override val imageId: Int = R.drawable.pet_c_lilmothy\r\n        override val element: Int =  dict.ELEMENT_FIRE\r\n        override val attackType: Int = dict.ATK_TYPE_STAY\r\n        override val damage: Int = 20\r\n        override val count: Int = 1\r\n        override val skillName: String = \"Math is important! \"\r\n//        override val description: String = \"dealing 9, 16, 21, 24, 25, 24, 21, 16, 9\\n\"+dict.ELEMENT_STRING[element]+\" damages sequentially \\n\" +\r\n//                \"after it placed on the board\"\r\n        override val description: String =\"Let x = number of turns it stays on the board,\\n\" +\r\n        \"deals (x mod 10) * (10 - (x mod 10) ) \"+ dict.ELEMENT_STRING[element]+\" damages\"\r\n        override val rarity: Int = dict.RARITY_LEGENDARY\r\n\r\n        override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            if(petStatus[petOrder]!!.location == dict.onBoard){\r\n                val stayNum = petStatus[petOrder]!!.stayNum\r\n                return (stayNum % 10) * (10 - stayNum % 10)\r\n//                return 0\r\n            }\r\n            return 0\r\n            //he\r\n        }\r\n\r\n        override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            if(petStatus[petOrder]!!.location == dict.onBoard && petStatus[petOrder]!!.stayNum >0 ){\r\n                return 0\r\n            }\r\n            return 1\r\n        }\r\n\r\n        override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return count.toString()+\" more turns to stay on the board\\n\"\r\n            }\r\n            else{\r\n                val count = attackCountdown(petStatus, petOrder,deckSize)\r\n                return count.toString()+\" more turns to stay on the board\\n\"\r\n            }\r\n        }\r\n\r\n        override fun nextDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return \" 9 fire damages\"\r\n            }\r\n            else{\r\n                return dealDamage(petStatus, petOrder,deckSize).toString()+\" \"+dict.ELEMENT_STRING[element]+\" damages\"\r\n            }\r\n        }\r\n\r\n        override fun resetAfterDamage(): Boolean {\r\n            return false\r\n        }\r\n    }\r\n    private class shyRaccoon :Pet {\r\n        override val id: Int = 4\r\n        override val name: String = \"Shy Raccoon\"\r\n        override val imageId: Int = R.drawable.pet_c_shyraccoon\r\n        override val element: Int =  dict.ELEMENT_WATER\r\n        override val attackType: Int = dict.ATK_TYPE_STAY\r\n        override val damage: Int = 30\r\n        override val count: Int = 1\r\n        override val skillName: String = \"Hello...\"\r\n        override val description: String = \"Deal (\"+damage+\"x the number of pet on board) \"+dict.ELEMENT_STRING[element]+\" damages\\n\" +\r\n                \"on the \"+count+ \"th turn\\n\" +\r\n                \"after it is placed on the board\"\r\n        override val rarity: Int = dict.RARITY_LEGENDARY\r\n\r\n        override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            var petOnBoard = 0\r\n            for(i in 0..<deckSize){\r\n                if(petStatus[i]!!.location == dict.onBoard){\r\n                    petOnBoard++\r\n                }\r\n            }\r\n            if(attackCountdown(petStatus, petOrder,deckSize) == 0){\r\n                return damage * petOnBoard\r\n            }\r\n            return 0\r\n        }\r\n\r\n        override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            if(petStatus[petOrder]!!.stayNum < 2  && petStatus[petOrder]!!.location == dict.onBoard){\r\n                return count - petStatus[petOrder]!!.stayNum\r\n            }\r\n            else if (petStatus[petOrder]!!.location == dict.onDECK){\r\n                return count\r\n            }\r\n            return -1\r\n        }\r\n\r\n        override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return count.toString()+\" more turns to stay on the board\\n\"\r\n            }\r\n            else{\r\n                val count = attackCountdown(petStatus, petOrder,deckSize)\r\n                var countStr = \"∞\"\r\n                if(count >= 0){\r\n                    countStr = count.toString()\r\n                }\r\n                return  countStr+\" more turns to stay on the board\\n\"\r\n            }\r\n        }\r\n\r\n        override fun nextDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            val count = attackCountdown(petStatus, petOrder,deckSize)\r\n            var petOnBoard = 0\r\n            for(i in 0..<deckSize){\r\n                if(petStatus[i]!!.location == dict.onBoard){\r\n                    petOnBoard++\r\n                }\r\n            }\r\n            if(attackCountdown(petStatus, petOrder,deckSize) != -1){\r\n                val mulDmg = petOnBoard * damage\r\n                return mulDmg.toString()+\" \" +dict.ELEMENT_STRING[element]+\" damages\"\r\n            }\r\n            return \"0 \" +dict.ELEMENT_STRING[element]+\" damages\"\r\n        }\r\n\r\n        override fun resetAfterDamage(): Boolean {\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    private class healingSprite :Pet {\r\n        // TODO: make pet unique\r\n        override val id: Int = 5\r\n        override val name: String = \"Healing Sprite\"\r\n        override val imageId: Int = R.drawable.pet_c_healingsprite\r\n        override val element: Int = dict.ELEMENT_WATER\r\n        override val attackType: Int = dict.ATK_TYPE_STAY\r\n        override val damage: Int = -20\r\n        override val count: Int = 4\r\n        override val skillName :String =\"Light of the hospital\"\r\n        override val description: String = \"Heals \"+(damage * -1)+\" hp if there are \"+count+\" pets on the board\"\r\n        override val rarity: Int = dict.RARITY_NORMAL\r\n\r\n        override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            var temp = 0\r\n            for(i in 0..<deckSize){\r\n                if (petStatus[i]?.location == dict.onBoard){\r\n                    temp ++\r\n                }\r\n            }\r\n            if(temp == count) {\r\n\r\n                return damage\r\n            }\r\n            return 0\r\n        }\r\n\r\n        override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n//        return (petStatus[petOrder]!!.stayNum % (catInfo.count) )\r\n            var temp = 0\r\n            for(i in 0..<deckSize){\r\n                if (petStatus[i]?.location == dict.onBoard){\r\n                    temp ++\r\n                }\r\n            }\r\n            return abs(temp - count)\r\n        }\r\n\r\n        override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            var temp = 0\r\n            for(i in 0..<deckSize){\r\n                if (petStatus[i]?.location == dict.onBoard){\r\n                    temp ++\r\n                }\r\n            }\r\n            if(temp > count){\r\n                return (temp - count).toString()+\" pets to knock out from the board.\"\r\n            }\r\n            else{\r\n                return (count - temp).toString()+\" pets to put on the board.\"\r\n            }\r\n\r\n        }\r\n\r\n        override fun nextDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int): String {\r\n            return \"Heals \"+(damage * -1).toString()+\" hp\"\r\n        }\r\n\r\n        override fun resetAfterDamage(): Boolean {\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    private class babyOwlbear :Pet {\r\n        // TODO: make this pet unique\r\n        override val id: Int = 6\r\n        override val name: String = \"Baby Owlbear\"\r\n        override val imageId: Int = R.drawable.pet_a_babyowlbear\r\n        override val element: Int = dict.ELEMENT_FOREST\r\n        override val attackType: Int = dict.ATK_TYPE_RETURN\r\n        override val damage: Int = 15\r\n        override val count: Int = 0\r\n        override val skillName :String =\"Good place to eat...\"\r\n        override val description: String = \"Deals number of turns it stay on the board x \"+damage+dict.ELEMENT_STRING[element]+\" damage\\n\" +\r\n                \"when it is knocked out from the board.\"\r\n        override val rarity: Int = dict.RARITY_NORMAL\r\n\r\n        override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            if(petStatus[petOrder]!!.stayNum > 0 && petStatus[petOrder]!!.location == dict.onDECK ) {\r\n                return damage * petStatus[petOrder]!!.stayNum\r\n            }\r\n            return 0\r\n        }\r\n\r\n        override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return 1\r\n            }\r\n\r\n            return 0\r\n        }\r\n\r\n        override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n\r\n            return count.toString()+\" more turn(s) to stay on the board \"\r\n\r\n        }\r\n\r\n        override fun nextDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int): String {\r\n            return \"Deals \"+(damage * petStatus[petOrder]!!.stayNum ).toString()+\" damage\"\r\n        }\r\n\r\n        override fun resetAfterDamage(): Boolean {\r\n            return true\r\n        }\r\n    }\r\n\r\n    private class ambushMouseviper() :Pet {\r\n        // TODO: make this pet unique\r\n        override val id: Int = 7\r\n        override val name: String = \"Ambush Mouseviper\"\r\n        override val imageId: Int = R.drawable.pet_b_ambushmouseviper\r\n        override val element: Int = dict.ELEMENT_FOREST\r\n        override val attackType: Int = dict.ATK_TYPE_RETURN\r\n        override val damage: Int = 30\r\n        override val count: Int = 2\r\n        override val skillName :String =\"Toxic\"\r\n        override val description: String = \"Deal \"+damage.toString()+\" \"+dict.ELEMENT_STRING[element]+\" damages\\n\" +\r\n                \"after every \"+count+\" turns\"\r\n        override val rarity: Int = dict.RARITY_NORMAL\r\n\r\n        override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            if(petStatus[petOrder]!!.stayNum != 0 && petStatus[petOrder]!!.stayNum % count == 0 && petStatus[petOrder]!!.location == dict.onBoard) {\r\n                return damage\r\n            }\r\n            return 0\r\n        }\r\n\r\n        override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n//            val stayNum = petStatus[petOrder]!!.stayNum\r\n//            if( stayNum <= 1 ){\r\n//                return count - stayNum\r\n//            }\r\n//            return -1\r\n\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return 0\r\n            }\r\n//        return (petStatus[petOrder]!!.stayNum % (catInfo.count) )\r\n            return count - petStatus[petOrder]!!.stayNum % (count+1)\r\n        }\r\n\r\n        override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n//            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n//                return \"Knocked out from the board after\\n\" +\r\n//                        \"1 more turn it stays on the board \"\r\n//            }\r\n//            else{\r\n//                val count = attackCountdown(petStatus, petOrder,deckSize)\r\n//                var countStr = \"∞\"\r\n//                if(count >= 0){\r\n//                    countStr = count.toString()\r\n//                }\r\n//                return \"Knocked out from the board after\\n\" +\r\n//                        countStr+\" more turn it stays on the board \"\r\n//            }\r\n\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return count.toString()+\" more turn(s) to stay on the board \"\r\n            }\r\n            else{\r\n                return attackCountdown(petStatus, petOrder,deckSize).toString()+\" more turn(s) to stay on the board\"\r\n            }\r\n        }\r\n\r\n        override fun nextDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int): String {\r\n//            val count = attackCountdown(petStatus, petOrder,deckSize)\r\n//            if(count >= 0){\r\n//                return damage.toString()+\" \" +dict.ELEMENT_STRING[element]+\" damages\"\r\n//            }\r\n//            return \"0 \" +dict.ELEMENT_STRING[element]+\" damages\"\r\n            return \"Deals \"+(damage ).toString()+dict.ELEMENT_STRING[element]+\" damages\\n\"\r\n        }\r\n\r\n        override fun resetAfterDamage(): Boolean {\r\n            return true\r\n        }\r\n    }\r\n\r\n    private class animatedNutcracker() :Pet {\r\n        // TODO: make this pet unique\r\n        override val id: Int = 8\r\n        override val name: String = \"Animated Nutcracker\"\r\n        override val imageId: Int = R.drawable.pet_c_animatednutcracker\r\n        override val element: Int = dict.ELEMENT_FIRE\r\n        override val attackType: Int = dict.ATK_TYPE_STAY\r\n        override val damage: Int = 100\r\n        override val count: Int = 0\r\n        override val skillName :String =\"Nut Cracker!\"\r\n        override val description: String = \"Deal \"+damage.toString()+\" \"+dict.ELEMENT_STRING[element]+\" damages\\n\" +\r\n                \"if there is no pets on the deck when this pet is placed on the board\"\r\n        override val rarity: Int = dict.RARITY_NORMAL\r\n\r\n        override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            var petOnBoard = 0\r\n            for(i in 0..<deckSize){\r\n                if(petStatus[i]!!.location == dict.onBoard){\r\n                    petOnBoard++\r\n                }\r\n            }\r\n            if(petStatus[petOrder]!!.stayNum == 0 && petOnBoard == deckSize && petStatus[petOrder]!!.location == dict.onBoard){\r\n                return damage\r\n            }\r\n            return 0\r\n\r\n        }\r\n\r\n        override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            val stayNum = petStatus[petOrder]!!.stayNum\r\n            if( petStatus[petOrder]!!.location == dict.onBoard && stayNum == 0){\r\n                return 0\r\n            }\r\n            else if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return 1\r\n            }\r\n            return -1\r\n        }\r\n\r\n        override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return \"0 more turn to stay on the board\\n\"\r\n            }\r\n            else{\r\n                val count = attackCountdown(petStatus, petOrder,deckSize)\r\n                var countStr = \"∞\"\r\n                if(count >= 0){\r\n                    countStr = count.toString()\r\n                }\r\n                return  countStr+\" more turn to stays on the board \"\r\n\r\n            }\r\n        }\r\n\r\n        override fun nextDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int): String {\r\n//            var petOnBoard = 0\r\n//            for(i in 0..<deckSize){\r\n//                if(petStatus[i]!!.location == dict.onBoard){\r\n//                    petOnBoard++\r\n//                }\r\n//            }\r\n            if(attackCountdown(petStatus, petOrder,deckSize) != -1){\r\n//                val mulDmg = petOnBoard * damage\r\n                return damage.toString()+\" \" +dict.ELEMENT_STRING[element]+\" damages\"\r\n            }\r\n            return \"0 \" +dict.ELEMENT_STRING[element]+\" damages\"\r\n        }\r\n\r\n        override fun resetAfterDamage(): Boolean {\r\n            return false\r\n        }\r\n    }\r\n\r\n    private class deepseaMerman() :Pet {\r\n        // TODO: make this pet unique\r\n        override val id: Int = 9\r\n        override val name: String = \"Deap-sea Merman\"\r\n        override val imageId: Int = R.drawable.pet_c_deepseamerman\r\n        override val element: Int = dict.ELEMENT_WATER\r\n        override val attackType: Int = dict.ATK_TYPE_RETURN\r\n        override val damage: Int = 15\r\n        override val count: Int = 1\r\n        override val skillName :String =\"Golden Fork\"\r\n        override val description: String = \"Deal \"+damage.toString()+\"x water pets on the board \"+dict.ELEMENT_STRING[element]+\" damages\\n\" +\r\n                \"after it is placed on the board.\"\r\n        override val rarity: Int = dict.RARITY_NORMAL\r\n\r\n        override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n\r\n            var petOnBoard = 0\r\n            for(i in 0..<deckSize){\r\n                if(petStatus[i]!!.location == dict.onBoard && petStatus[i]!!.element == dict.ELEMENT_WATER){\r\n                    petOnBoard++\r\n                }\r\n            }\r\n            if(attackCountdown(petStatus, petOrder,deckSize) == 0 && petStatus[petOrder]!!.location == dict.onBoard){\r\n                return damage * petOnBoard\r\n            }\r\n            return 0\r\n\r\n        }\r\n\r\n        override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {\r\n            val stayNum = petStatus[petOrder]!!.stayNum\r\n            if( stayNum == 0 ){\r\n                return stayNum\r\n            }\r\n            return -1\r\n        }\r\n\r\n        override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {\r\n            if(petStatus[petOrder]!!.location == dict.onDECK){\r\n                return \"0 more turn to stay on the board\\n\"\r\n            }\r\n            else{\r\n                val count = attackCountdown(petStatus, petOrder,deckSize)\r\n                var countStr = \"∞\"\r\n                if(count >= 0){\r\n                    countStr = count.toString()\r\n                }\r\n                return  countStr+\" more turn to stays on the board \"\r\n\r\n            }\r\n        }\r\n\r\n        override fun nextDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int): String {\r\n            var petOnBoard = 0\r\n            for(i in 0..<deckSize){\r\n                if(petStatus[i]!!.location == dict.onBoard && petStatus[i]!!.element == dict.ELEMENT_WATER){\r\n                    petOnBoard++\r\n                }\r\n            }\r\n            if(attackCountdown(petStatus, petOrder,deckSize) != -1){\r\n                val mulDmg = petOnBoard * damage\r\n                return mulDmg.toString()+\" \" +dict.ELEMENT_STRING[element]+\" damages\"\r\n            }\r\n            return \"0 \" +dict.ELEMENT_STRING[element]+\" damages\"\r\n        }\r\n\r\n        override fun resetAfterDamage(): Boolean {\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/gamePlay/petInfo2.kt b/app/src/main/java/com/example/eggenda/gamePlay/petInfo2.kt
--- a/app/src/main/java/com/example/eggenda/gamePlay/petInfo2.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/gamePlay/petInfo2.kt	(date 1733177706536)
@@ -49,6 +49,7 @@
         val skillName: String
         val description: String
         val rarity: Int
+        val backgroundId: Int
 
         fun dealDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int):Int
         fun attackCountdown(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int):Int
@@ -66,16 +67,17 @@
         override val damage: Int = -30
         override val count: Int = 2
         override val skillName :String ="Sleepy..."
-        override val description: String = "Heals "+(damage * -1)+" hp every "+count +" turns\n" +
-                "when it stays on the board."
+        override val description: String = "It heals the player " + (damage * -1)+ " hp only if it remains on the board for " + count.toString()+ " turn(s).\n\n" + "" +
+                "If it’s knocked out, no healing occurs"
         override val rarity: Int = dict.RARITY_NORMAL
+        override val backgroundId: Int = R.drawable.background_bunny_happyplains
 
         override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
             if(petStatus[petOrder]!!.stayNum != 0 && petStatus[petOrder]!!.stayNum % count == 0 && petStatus[petOrder]!!.location == dict.onBoard) {
 
                 return damage
             }
-            return 0////
+            return 0
         }
 
         override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
@@ -88,10 +90,18 @@
 
         override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {
             if(petStatus[petOrder]!!.location == dict.onDECK){
-                return count.toString()+" more turn(s) to stay on the board "
+                return "Ability after " +count.toString()+  " turns (not on board yet)"
+//                return count.toString()+" more turn(s) to stay on the board to heal" + (damage * -1)+ "hp"
+//                return "It heals the player " + (damage * -1)+ " hp only if it remains on the board for " + count.toString()+ " turn(s).\n\n" +
+//                        "If it’s knocked out, no healing occurs."
             }
             else{
-                return attackCountdown(petStatus, petOrder,deckSize).toString()+" more turn(s) to stay on the board"
+                return "Ability after " +attackCountdown(petStatus, petOrder,deckSize).toString()+  " turns"
+//                return attackCountdown(petStatus, petOrder,deckSize).toString()+" more turn(s) to stay on the board"
+//                return "This pet heals the player only if it remains on the board for [X] more turn(s). If it’s knocked out, no healing occurs"
+//                return "It heals the player " + (damage * -1)+ " hp only if it remains on the board for " + attackCountdown(petStatus, petOrder,deckSize).toString()+ " more turn(s).\n\n" +
+//                        "If it’s knocked out, no healing occurs."
+//                return name + " has " + attackCountdown(petStatus, petOrder,deckSize).toString()+" more turn(s) to heal the player" + (damage * -1)+ "hp"
             }
 
         }
@@ -115,10 +125,15 @@
         override val damage: Int = 20
         override val count: Int = 1
         override val skillName :String ="Fragile!"
-        override val description: String = "Deal "+damage.toString()+" "+dict.ELEMENT_STRING[element]+" damages\n" +
-                "when it is knocked out from the board\n" +
-                "on the next turn after it is placed on the board."
+        override val description: String = "If Evil Water is knocked out of the board within 1 turn it was placed, " +
+                "deal " + damage.toString() + " Water Elemental damage to the Boss.\n\n" +
+                "If it remains on the board after 1 turn, deal 0 damage to Boss."
+
+//            "Deal "+damage.toString()+" "+dict.ELEMENT_STRING[element]+" damages " +
+//                "when it is knocked out from the board" +
+//                "on the next turn after it is placed on the board."
         override val rarity: Int = dict.RARITY_NORMAL
+        override val backgroundId: Int = R.drawable.background_evilwater_lab
 
         override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
             if(petStatus[petOrder]!!.stayNum == count && petStatus[petOrder]!!.location == dict.onDECK ) {
@@ -137,26 +152,34 @@
 
         override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {
             if(petStatus[petOrder]!!.location == dict.onDECK){
-                return "Knocked out from the board after\n" +
-                        "1 more turn it stays on the board "
+                return "Ability after " +count.toString()+  " turns (not on board yet)"
+//                return "If it's knocked out of the board within 1 turn it was placed, deal " + damage.toString() + " Water Elemental damage to the Boss.\n\n"
+//                        "If it remains on the board next turn, deal 0 damage to Boss."
             }
             else{
                 val count = attackCountdown(petStatus, petOrder,deckSize)
                 var countStr = "∞"
                 if(count >= 0){
                     countStr = count.toString()
+//                    return "Abilities after " + count.toString()+  " turns (not on board yet)"
+//                    return "If Evil Water is knocked out of the board next turn, deal " + damage.toString() + " Water Elemental damage to the Boss.\n\n" +
+//                            "If it remains on the board at next turn, deal 0 damage to Boss."
+
                 }
-                return "Knocked out from the board after\n" +
-                        countStr+" more turn it stays on the board "
+                return "Ability after " + countStr+  " turns"
+//                return "Evil Water is not knocked out of the board, no damages will deal until it's knocked out from the board."
+
+//                return "Knocked out from the board after\n" +
+//                        countStr+" more turn it stays on the board "
             }
         }
 
         override fun nextDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int): String {
             val count = attackCountdown(petStatus, petOrder,deckSize)
             if(count >= 0){
-                return damage.toString()+" " +dict.ELEMENT_STRING[element]+" damages"
+                return "Being knocked out to make " + damage.toString()+" " +dict.ELEMENT_STRING[element]+" damages"
             }
-            return "0 " +dict.ELEMENT_STRING[element]+" damages"
+            return "Being knocked out to make 0 " +dict.ELEMENT_STRING[element]+" damages"
         }
 
         override fun resetAfterDamage(): Boolean {
@@ -173,9 +196,15 @@
         override val damage: Int = 40
         override val count: Int = 2
         override val skillName:String = "You can't catch me!"
-        override val description: String = "Deal "+damage+" "+dict.ELEMENT_STRING[element]+" damage\n" +
-                "after every "+count+ " position change when it is on the board."
+//        "When Infernal Skull's position changes (by allies or enemies) for 2 times, it deals "+damage+" "+dict.ELEMENT_STRING[element]+ Fire Elemental damage to the enemy. Infernal Counter resets to 0. "
+        override val description: String = "When Flaming Skull's position changes (by allies or enemies), gain a Flam Counter.\n\n " +
+        "Once it has " + count + " Flam Counters, it consumes them & deal " +
+        damage + " "+dict.ELEMENT_STRING[element] + " damages to the enemy.\n Flaming Counter resets to 0."
+
+        //            "Deal "+damage+" "+dict.ELEMENT_STRING[element]+" damage\n" +
+//                "after every "+count+ " position change when it is on the board."
         override val rarity: Int = dict.RARITY_RARE
+        override val backgroundId: Int = R.drawable.background_flameskull_darkdungeons
 
         override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
             val skullStatus = petStatus[petOrder]!!
@@ -191,16 +220,20 @@
 
         override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {
             if(petStatus[petOrder]!!.location == dict.onDECK){
-                return count.toString()+" more bounce when it stay on the board\n"
+                return "Ability after " + count.toString()+  " turns(not on board yet)"
+//                return count.toString()+" more bounce when it stay on the board\n"
             }
             else{
                 val count = attackCountdown(petStatus, petOrder,deckSize)
-                return count.toString()+" more bounce when it stay on the board\n"
+//                return count.toString()+" more bounce when it stay on the board\n"
+                return "Ability after " + count.toString()+  " turns"
             }
         }
 
         override fun nextDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {
-            return damage.toString()+" "+dict.ELEMENT_STRING[element]+" damages"
+//            return damage.toString()+" "+dict.ELEMENT_STRING[element]+" damages"
+            val numcount = attackCountdown(petStatus, petOrder,deckSize)
+            return numcount.toString() + " more Counter(s) needed to deal " + damage.toString()+" "+dict.ELEMENT_STRING[element]+" damages"
         }
 
         override fun resetAfterDamage(): Boolean {
@@ -208,10 +241,6 @@
         }
     }
 
-
-
-
-
     private class lilMothman :Pet {
         override val id: Int = 3
         override val name: String = "Lil' Mothman"
@@ -224,17 +253,16 @@
 //        override val description: String = "dealing 9, 16, 21, 24, 25, 24, 21, 16, 9\n"+dict.ELEMENT_STRING[element]+" damages sequentially \n" +
 //                "after it placed on the board"
         override val description: String ="Let x = number of turns it stays on the board,\n" +
-        "deals (x mod 10) * (10 - (x mod 10) ) "+ dict.ELEMENT_STRING[element]+" damages"
+        "it deals (x mod 10) * (10 - (x mod 10) ) "+ dict.ELEMENT_STRING[element]+" damages"
         override val rarity: Int = dict.RARITY_LEGENDARY
+        override val backgroundId: Int = R.drawable.background_mothman_deadlands
 
         override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
             if(petStatus[petOrder]!!.location == dict.onBoard){
                 val stayNum = petStatus[petOrder]!!.stayNum
                 return (stayNum % 10) * (10 - stayNum % 10)
-//                return 0
             }
             return 0
-            //he
         }
 
         override fun attackCountdown(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
@@ -246,20 +274,22 @@
 
         override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {
             if(petStatus[petOrder]!!.location == dict.onDECK){
-                return count.toString()+" more turns to stay on the board\n"
+//                return count.toString()+" more turns to stay on the board\n"
+                return "Ability after " + count.toString()+  " turns(not on board yet)"
             }
             else{
                 val count = attackCountdown(petStatus, petOrder,deckSize)
-                return count.toString()+" more turns to stay on the board\n"
+//                return count.toString()+" more turns to stay on the board\n"
+                return "Ability after " + count.toString()+  " turns"
             }
         }
 
         override fun nextDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {
             if(petStatus[petOrder]!!.location == dict.onDECK){
-                return " 9 fire damages"
+                return " Stay on board to deal 9 Fire Damages"
             }
             else{
-                return dealDamage(petStatus, petOrder,deckSize).toString()+" "+dict.ELEMENT_STRING[element]+" damages"
+                return "Stays on board to deal "+dealDamage(petStatus, petOrder,deckSize).toString()+" "+dict.ELEMENT_STRING[element]+" damages"
             }
         }
 
@@ -275,11 +305,16 @@
         override val attackType: Int = dict.ATK_TYPE_STAY
         override val damage: Int = 30
         override val count: Int = 1
-        override val skillName: String = "Hello..."
-        override val description: String = "Deal ("+damage+"x the number of pet on board) "+dict.ELEMENT_STRING[element]+" damages\n" +
-                "on the "+count+ "th turn\n" +
-                "after it is placed on the board"
+        override val skillName: String = "Hello...(shy)"
+        override val description: String = "When it stays on board for " + count +" turn, " +
+        "dealing (number of pets on board * " + damage+" "+ dict.ELEMENT_STRING[element] + ") damages.\n\n"+
+        "No further damage will be made after attacking, unless it's' knocked out from the board."
+//
+//            "Deal ("+damage+"x the number of pet on board) "+dict.ELEMENT_STRING[element]+" damages\n" +
+//                "on the "+count+ "th turn\n" +
+//                "after it is placed on the board"
         override val rarity: Int = dict.RARITY_LEGENDARY
+        override val backgroundId: Int = R.drawable.background_raccoon_housetrash
 
         override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
             var petOnBoard = 0
@@ -306,7 +341,8 @@
 
         override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {
             if(petStatus[petOrder]!!.location == dict.onDECK){
-                return count.toString()+" more turns to stay on the board\n"
+//                return count.toString()+" more turns to stay on the board\n"
+                return "Ability after " + count.toString()+" turns(not on board yet)"
             }
             else{
                 val count = attackCountdown(petStatus, petOrder,deckSize)
@@ -314,7 +350,8 @@
                 if(count >= 0){
                     countStr = count.toString()
                 }
-                return  countStr+" more turns to stay on the board\n"
+//                return  countStr+" more turns to stay on the board\n"
+                return "Ability after " + countStr+  " turns"
             }
         }
 
@@ -328,9 +365,9 @@
             }
             if(attackCountdown(petStatus, petOrder,deckSize) != -1){
                 val mulDmg = petOnBoard * damage
-                return mulDmg.toString()+" " +dict.ELEMENT_STRING[element]+" damages"
+                return "Stay on board to make " + mulDmg.toString()+" " +dict.ELEMENT_STRING[element]+" damages"
             }
-            return "0 " +dict.ELEMENT_STRING[element]+" damages"
+            return "Stay on board to make 0 " +dict.ELEMENT_STRING[element]+" damages"
         }
 
         override fun resetAfterDamage(): Boolean {
@@ -351,6 +388,7 @@
         override val skillName :String ="Light of the hospital"
         override val description: String = "Heals "+(damage * -1)+" hp if there are "+count+" pets on the board"
         override val rarity: Int = dict.RARITY_NORMAL
+        override val backgroundId: Int = R.drawable.background_sprite_spiritrealm
 
         override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
             var temp = 0
@@ -385,10 +423,10 @@
                 }
             }
             if(temp > count){
-                return (temp - count).toString()+" pets to knock out from the board."
+                return "Ability with " + (temp - count).toString()+" pets to knock out from the board."
             }
             else{
-                return (count - temp).toString()+" pets to put on the board."
+                return "Ability with " +(count - temp).toString()+" pets to put on the board."
             }
 
         }
@@ -413,9 +451,10 @@
         override val damage: Int = 15
         override val count: Int = 0
         override val skillName :String ="Good place to eat..."
-        override val description: String = "Deals number of turns it stay on the board x "+damage+dict.ELEMENT_STRING[element]+" damage\n" +
-                "when it is knocked out from the board."
+        override val description: String = "Deals number of turns it stay on the board * "+damage+dict.ELEMENT_STRING[element]+" damage\n" +
+                "when  knocked out from the board."
         override val rarity: Int = dict.RARITY_NORMAL
+        override val backgroundId: Int = R.drawable.background_owlbear_temperateforest
 
         override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
             if(petStatus[petOrder]!!.stayNum > 0 && petStatus[petOrder]!!.location == dict.onDECK ) {
@@ -434,12 +473,13 @@
 
         override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {
 
-            return count.toString()+" more turn(s) to stay on the board "
+//            return count.toString()+" more turn(s) to stay on the board "
+            return "Ability on Turn " + count.toString()+" to make damage."
 
         }
 
         override fun nextDamage(petStatus: Array<petStatus?>,petOrder:Int,deckSize:Int): String {
-            return "Deals "+(damage * petStatus[petOrder]!!.stayNum ).toString()+" damage"
+            return "Deals "+(damage * petStatus[petOrder]!!.stayNum ).toString()+dict.ELEMENT_STRING[element]+" damage"
         }
 
         override fun resetAfterDamage(): Boolean {
@@ -460,6 +500,7 @@
         override val description: String = "Deal "+damage.toString()+" "+dict.ELEMENT_STRING[element]+" damages\n" +
                 "after every "+count+" turns"
         override val rarity: Int = dict.RARITY_NORMAL
+        override val backgroundId: Int = R.drawable.background_mouseviper_noidea
 
         override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
             if(petStatus[petOrder]!!.stayNum != 0 && petStatus[petOrder]!!.stayNum % count == 0 && petStatus[petOrder]!!.location == dict.onBoard) {
@@ -498,10 +539,12 @@
 //            }
 
             if(petStatus[petOrder]!!.location == dict.onDECK){
-                return count.toString()+" more turn(s) to stay on the board "
+//                return count.toString()+" more turn(s) to stay on the board "
+                return "Ability after " + count.toString()+" turns(not on board yet)"
             }
             else{
-                return attackCountdown(petStatus, petOrder,deckSize).toString()+" more turn(s) to stay on the board"
+                return "Ability after " + attackCountdown(petStatus, petOrder,deckSize)+" turns"
+//                return attackCountdown(petStatus, petOrder,deckSize).toString()+" more turn(s) to stay on the board"
             }
         }
 
@@ -511,7 +554,8 @@
 //                return damage.toString()+" " +dict.ELEMENT_STRING[element]+" damages"
 //            }
 //            return "0 " +dict.ELEMENT_STRING[element]+" damages"
-            return "Deals "+(damage ).toString()+dict.ELEMENT_STRING[element]+" damages\n"
+
+            return "Stay on board to make "+(damage ).toString()+dict.ELEMENT_STRING[element]+" damages\n"
         }
 
         override fun resetAfterDamage(): Boolean {
@@ -530,8 +574,9 @@
         override val count: Int = 0
         override val skillName :String ="Nut Cracker!"
         override val description: String = "Deal "+damage.toString()+" "+dict.ELEMENT_STRING[element]+" damages\n" +
-                "if there is no pets on the deck when this pet is placed on the board"
+                "If there is no pets on the deck when this pet is placed on the board"
         override val rarity: Int = dict.RARITY_NORMAL
+        override val backgroundId: Int  = R.drawable.background_nutcracker_homelyhome
 
         override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
             var petOnBoard = 0
@@ -560,7 +605,7 @@
 
         override fun condition(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): String {
             if(petStatus[petOrder]!!.location == dict.onDECK){
-                return "0 more turn to stay on the board\n"
+                return "Ability for 0 more turn to stay on the board\n"
             }
             else{
                 val count = attackCountdown(petStatus, petOrder,deckSize)
@@ -568,7 +613,7 @@
                 if(count >= 0){
                     countStr = count.toString()
                 }
-                return  countStr+" more turn to stays on the board "
+                return  "Ability for " + countStr+" turn."
 
             }
         }
@@ -580,7 +625,7 @@
 //                    petOnBoard++
 //                }
 //            }
-            if(attackCountdown(petStatus, petOrder,deckSize) != -1){
+            if(attackCountdown(petStatus, petOrder,deckSize) != -1 ){
 //                val mulDmg = petOnBoard * damage
                 return damage.toString()+" " +dict.ELEMENT_STRING[element]+" damages"
             }
@@ -603,8 +648,10 @@
         override val count: Int = 1
         override val skillName :String ="Golden Fork"
         override val description: String = "Deal "+damage.toString()+"x water pets on the board "+dict.ELEMENT_STRING[element]+" damages\n" +
-                "after it is placed on the board."
+                "after it is placed on the board.\n\n" +
+                "No further damage will be made after attacking, unless it's' knocked out from the board."
         override val rarity: Int = dict.RARITY_NORMAL
+        override val backgroundId: Int = R.drawable.background_merman_deepseacaverns
 
         override fun dealDamage(petStatus: Array<petStatus?>, petOrder: Int,deckSize:Int): Int {
 
Index: app/src/main/java/com/example/eggenda/ui/game/GameFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.ui.game\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport android.widget.TextView\r\nimport androidx.constraintlayout.widget.ConstraintLayout\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.databinding.FragmentGalleryBinding\r\nimport com.example.eggenda.databinding.FragmentGameBinding\r\nimport com.example.eggenda.gameMonsterChoose.GameMonsterChooseMainActivity\r\nimport com.example.eggenda.gamePetChoose.GamePetChooseMainActivity\r\nimport com.example.eggenda.ui.gallery.GalleryViewModel\r\n\r\nclass GameFragment : Fragment(R.layout.fragment_game) {\r\n\r\n    private var _binding: FragmentGameBinding? = null\r\n    private lateinit var gameInfo: Button\r\n    private lateinit var gameItem : ConstraintLayout\r\n    private lateinit var tutorialItem : ConstraintLayout\r\n\r\n    // This property is only valid between onCreateView and\r\n    // onDestroyView.\r\n    private val binding get() = _binding!!\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?\r\n    ): View {\r\n        val gameViewModel =\r\n            ViewModelProvider(this).get(GameViewModel::class.java)\r\n\r\n        _binding = FragmentGameBinding.inflate(inflater, container, false)\r\n        val root: View = binding.root\r\n\r\n        gameItem = root.findViewById(R.id.game_frag_fight_conlay)\r\n        tutorialItem = root.findViewById(R.id.game_frag_tutorial_conlay)\r\n\r\n        //game item goes to game page\r\n        gameItem.setOnClickListener {\r\n            //use intent to goto another activity\r\n            val intent = Intent(requireContext(),GameMonsterChooseMainActivity::class.java )\r\n            startActivity(intent)\r\n        }\r\n\r\n        //tutorial item goes to tutorial class\r\n        tutorialItem.setOnClickListener {\r\n        }\r\n\r\n\r\n        //About this game or it does not needed\r\n\r\n\r\n\r\n        return root\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/ui/game/GameFragment.kt b/app/src/main/java/com/example/eggenda/ui/game/GameFragment.kt
--- a/app/src/main/java/com/example/eggenda/ui/game/GameFragment.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/ui/game/GameFragment.kt	(date 1733177686177)
@@ -15,6 +15,7 @@
 import com.example.eggenda.databinding.FragmentGameBinding
 import com.example.eggenda.gameMonsterChoose.GameMonsterChooseMainActivity
 import com.example.eggenda.gamePetChoose.GamePetChooseMainActivity
+import com.example.eggenda.gameTutorial.tutorialActivity
 import com.example.eggenda.ui.gallery.GalleryViewModel
 
 class GameFragment : Fragment(R.layout.fragment_game) {
@@ -49,6 +50,8 @@
 
         //tutorial item goes to tutorial class
         tutorialItem.setOnClickListener {
+            val intent = Intent(requireContext(), tutorialActivity::class.java )
+            startActivity(intent)
         }
 
 
Index: app/src/main/java/com/example/eggenda/gamePlay/gameActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.eggenda.gamePlay\r\n\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.Gravity\r\nimport android.view.animation.TranslateAnimation\r\nimport android.widget.Button\r\nimport android.widget.FrameLayout\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.activity.viewModels\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.appcompat.app.AppCompatDelegate\r\nimport androidx.core.view.isInvisible\r\nimport androidx.fragment.app.DialogFragment\r\nimport androidx.lifecycle.Observer\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.eggenda.MainActivity\r\nimport com.example.eggenda.R\r\nimport com.example.eggenda.gameMonsterChoose.GameMonsterDialogFragment\r\nimport com.example.eggenda.gamePetChoose.SharedPreferenceManager\r\nimport com.example.eggenda.ui.home.HomeFragment\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.Job\r\nimport kotlinx.coroutines.delay\r\nimport kotlinx.coroutines.launch\r\nimport org.w3c.dom.Text\r\nimport java.time.LocalDateTime\r\nimport kotlin.math.abs\r\n\r\nclass gameActivity : AppCompatActivity() {\r\n\r\n    private lateinit var sharedPreferenceManager: SharedPreferenceManager\r\n\r\n    //load the info from hardcoded dataset\r\n    private lateinit var stageInfo:stageInfo\r\n//    private lateinit var petInfo: petInfo\r\n\r\n    private lateinit var petInfo: petInfo2\r\n\r\n    private val viewModel: gameViewModel2 by viewModels()\r\n\r\n    //load info from other activities\r\n    private  var selectedStage:Int = -1\r\n    private lateinit var chosenPetId:IntArray\r\n    private var boardRow = -1\r\n    private var boardCol = -1\r\n    private var boardSize = -1\r\n    private var deckSize = -1\r\n\r\n\r\n    private lateinit var initBoard: IntArray\r\n    private lateinit var initDeck :IntArray\r\n\r\n    //UI component\r\n    private lateinit var turnView: TextView\r\n    private lateinit var bossView: ImageView\r\n    private lateinit var hpFractionView: TextView\r\n    private lateinit var hpBarView: ImageView\r\n    private var hpBarLength:Int = 0\r\n\r\n    private lateinit var player_hpBarBGview :FrameLayout\r\n    private lateinit var player_hpFractionView: TextView\r\n    private lateinit var player_hpBarView: ImageView\r\n    private var player_hpBarLength:Int = 0\r\n\r\n    private lateinit var boardRecyclerView: RecyclerView\r\n    private lateinit var boardAdapter: boardAdapter\r\n\r\n    private lateinit var unitRecyclerView: RecyclerView\r\n    private lateinit var deckAdapter: deckAdapter\r\n\r\n    private lateinit var tempRestart: Button\r\n\r\n    //variables for UI\r\n    private var selectedPetOrder: Int = -1\r\n    private var newSelectedPetOrder: Int = -1\r\n\r\n    private var petClicked: Int = 0\r\n\r\n    private var selectedGird: Int = -1\r\n    private var boardClicked: Int = 0\r\n\r\n    //buffer for game status\r\n    private var turnBuffer: Int = 0\r\n    private var currentBossHpBuffer: Int = 0\r\n    private lateinit var petStatusBuffer:Array<petStatus?>\r\n    private lateinit var boardStatusBuffer: IntArray\r\n    private lateinit var deckStatusBuffer: IntArray\r\n    private var allowPick:Boolean = false\r\n    private lateinit var damageDealtBuffer: IntArray\r\n    private var currentPlayerHpBuffer: Int = 0\r\n    private var damageFromBossBuffer: Int = 0\r\n    private var healToPlayerBuffer :Int = 0\r\n\r\n\r\n    //game visual purpose\r\n    private var hitNum = 0\r\n    private lateinit var bounceNumResetQueue: ArrayDeque<Int>\r\n    private lateinit var bounceNumAddQueue: ArrayDeque<Int>\r\n    private lateinit var stayNumResetQueue: ArrayDeque<Int>\r\n    private lateinit var oldBoard: IntArray\r\n    private lateinit var oldEffectBoardIndex:ArrayDeque<Int>\r\n//    private lateinit var oldEffectBoardIndex2:ArrayDeque<Int>\r\n    private lateinit var oldEffectBoardDir:ArrayDeque<Int>\r\n    private lateinit var newEffectBoardIndex:ArrayDeque<Int>\r\n    private lateinit var newEffectBoardDir:ArrayDeque<Int>\r\n\r\n    private val coroutineScope = CoroutineScope(Dispatchers.Main + Job())\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)\r\n        setContentView(R.layout.activity_game)\r\n//        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->\r\n//            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())\r\n//            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)\r\n//            insets\r\n//        }\r\n        //hi\r\n\r\n        //load the info from hardcoded dataset\r\n        stageInfo = stageInfo()\r\n        petInfo = petInfo2()\r\n        sharedPreferenceManager = SharedPreferenceManager(this)\r\n\r\n\r\n//        selectedStage = 2\r\n        selectedStage = sharedPreferenceManager.getStageChoose()\r\n//        chosenPetId = intArrayOf(0,1,2,3,4)\r\n        chosenPetId = sharedPreferenceManager.getPetsList()\r\n        boardRow = 3\r\n        boardCol = 5\r\n        boardSize = boardRow * boardCol\r\n        deckSize = stageInfo.StageInfoMap(selectedStage)!!.deckSize\r\n\r\n        //initialize the board and deck\r\n        initBoard = IntArray(boardSize) { dict.noPet }\r\n        initDeck = IntArray(deckSize) {dict.hasPet}\r\n\r\n        //boss info\r\n        turnView = findViewById(R.id.turnView)\r\n        turnFractionVisualization(stageInfo.StageInfoMap(selectedStage)!!.maxTurn)\r\n\r\n        bossView = findViewById(R.id.bossView)\r\n        bossView.setImageResource(stageInfo.StageInfoMap(selectedStage)!!.bossImageId)\r\n\r\n        hpFractionView = findViewById(R.id.hp_fraction)\r\n        hpFractionVisualization(stageInfo.StageInfoMap(selectedStage)!!.damageRequirement)\r\n\r\n        hpBarView = findViewById(R.id.hp_bar)\r\n        hpBarView.post{\r\n            hpBarLength = hpBarView.layoutParams.width\r\n            Log.d(\"hp\", \"len${hpBarView.layoutParams.width}\")\r\n        }\r\n\r\n        player_hpFractionView = findViewById(R.id.hp_fraction_player)\r\n        player_hpBarView = findViewById(R.id.hp_bar_player)\r\n        player_hpBarBGview = findViewById(R.id.hp_bar_player_BG)\r\n        if(stageInfo.StageInfoMap(selectedStage)!!.objectiveType == dict.STAGE_OBJECTIVE_FIGHT){\r\n            player_hpBarView.post{\r\n                player_hpBarLength = player_hpBarView.layoutParams.width\r\n            }\r\n        }\r\n        else{\r\n            player_hpBarBGview.isInvisible = true\r\n            player_hpFractionView.isInvisible = true\r\n            player_hpBarView.isInvisible = true\r\n        }\r\n\r\n        //set boss image that can long click and see their info\r\n        bossView.setOnLongClickListener{\r\n            showMonsterDetailDialog(selectedStage)\r\n            true\r\n        }\r\n\r\n\r\n        //board UI\r\n        boardRecyclerView = findViewById(R.id.boardRecyclerView)\r\n        boardRecyclerView.layoutManager = GridLayoutManager(this, boardCol) // 5 columns\r\n        boardAdapter = boardAdapter(boardSize,\r\n            onItemClick = {boardPosition ->\r\n            Log.d(\"boardUI\",\"short clicked clicked: ${boardPosition}\")\r\n            Log.d(\"boardUI\",\"petClicked: ${petClicked}\")\r\n\r\n            Log.d(\"forceReturn\", \"boardClicked\")\r\n            Log.d(\"forceReturn\", \"viewModel.forceReturn.value: ${viewModel.forceReturn.value} \")\r\n\r\n            if(selectedPetOrder != -1 && allowPick){\r\n//            if(selectedPetOrder != -1 && viewModel.allowPick.value == true){\r\n                boardClicked = 1\r\n                selectedGird = boardPosition\r\n            }\r\n\r\n        },\r\n            onItemLongClick = {boardPosition ->\r\n                Log.d(\"boardUI\",\"Long clicked: ${boardPosition}\")\r\n                Log.d(\"boardUI\",\"petClicked: ${petClicked}\")\r\n                if(boardStatusBuffer[boardPosition]>=0 && allowPick){\r\n                    showPetCard(chosenPetId[boardStatusBuffer[boardPosition]], boardStatusBuffer[boardPosition])\r\n                }\r\n            })\r\n\r\n\r\n        boardRecyclerView.adapter = boardAdapter\r\n\r\n        //deck UI\r\n        unitRecyclerView = findViewById(R.id.unitRecyclerView)\r\n        unitRecyclerView.layoutManager = GridLayoutManager(this, deckSize) // 5 columns\r\n        deckAdapter = deckAdapter(deckSize,\r\n            onItemClick = {position ->\r\n                Log.d(\"deckUI\",\"deck clicked: ${position}\")\r\n                if(allowPick == true && deckStatusBuffer[position] >= dict.hasPet){\r\n//            if(viewModel.allowPick.value == true && deckStatusBuffer[position] >= dict.hasPet){\r\n                    newSelectedPetOrder = position\r\n                    petClicked = 1\r\n                    Log.d(\"deckUI\",\"inside IF\")\r\n                }\r\n\r\n            },\r\n            onItemLongClick = {position ->\r\n                if(allowPick && deckStatusBuffer[position] >= dict.hasPet){\r\n                    showPetCard(chosenPetId[position], position)\r\n                }\r\n            })\r\n        unitRecyclerView.adapter = deckAdapter\r\n\r\n//        viewModel.init(stageInfo.StageInfoMap[selectedStage]!!.damage, dict.ALLOW, chosenPetId, initPetStatus(chosenPetId), initBoard, gameObjBuilder())\r\n\r\n        //temp restart\r\n        tempRestart = findViewById(R.id.temp_restart)\r\n//        tempRestart.setOnClickListener {\r\n//            viewModel.updateGameRunState(dict.GAME_NOT_START)\r\n//            recreate()\r\n//        }\r\n        tempRestart.setOnClickListener {\r\n            showMenuDialog()\r\n        }\r\n\r\n\r\n\r\n        //buffers initialization\r\n        turnBuffer = 1\r\n        currentBossHpBuffer = stageInfo.StageInfoMap(selectedStage)!!.damageRequirement\r\n        petStatusBuffer = initPetStatus(chosenPetId).copyOf()\r\n        boardStatusBuffer = initBoard.copyOf()\r\n        deckStatusBuffer = initDeck.copyOf()\r\n        damageDealtBuffer = IntArray(3){0}\r\n\r\n        currentPlayerHpBuffer = 100\r\n        damageFromBossBuffer = 0\r\n        healToPlayerBuffer = 0\r\n\r\n        //Plug init value to viewModel\r\n        if(viewModel.getGameRunState() != dict.GAME_START){\r\n            viewModel.updateTurn(turnBuffer)\r\n            viewModel.updateCurrentBossHp(currentBossHpBuffer)\r\n            viewModel.updatePetStatus(petStatusBuffer)\r\n            viewModel.updateBoardStatus(boardStatusBuffer)\r\n            viewModel.updateDeckStatus(deckStatusBuffer)\r\n            viewModel.updateDamageDealt(damageDealtBuffer)\r\n\r\n            viewModel.updateCurrentPlayerHp(currentPlayerHpBuffer)\r\n            viewModel.updateDamageFromBoss(damageFromBossBuffer)\r\n            viewModel.updateHealToPLayer(healToPlayerBuffer)\r\n        }\r\n\r\n        if(stageInfo.StageInfoMap(selectedStage)!!.objectiveType != dict.STAGE_OBJECTIVE_FIGHT){\r\n            gameDummyStart()\r\n        }\r\n        else{\r\n            gameFightStart()\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //put pet-> bounce-> count dmg(include stay\r\n    //-> win if target hp = 0, lose if damage too high for some objective\r\n    //->lose of no pet to place\r\n    private fun dummyLoader(){\r\n        turnBuffer = viewModel.getTurn()\r\n        currentBossHpBuffer = viewModel.getCurrentBossHp()\r\n        deckStatusBuffer = viewModel.getDeckStatus()\r\n        boardStatusBuffer = viewModel.getBoardStatus()\r\n        petStatusBuffer = viewModel.getPetStatus()\r\n        damageDealtBuffer = viewModel.getDamageDealt()\r\n    }\r\n\r\n    private fun dummySaver(){\r\n        viewModel.updateTurn(turnBuffer)\r\n        viewModel.updateCurrentBossHp(currentBossHpBuffer)\r\n        viewModel.updatePetStatus(petStatusBuffer)\r\n        viewModel.updateBoardStatus(boardStatusBuffer)\r\n        viewModel.updateDeckStatus(deckStatusBuffer)\r\n        viewModel.updateDamageDealt(damageDealtBuffer)\r\n    }\r\n\r\n    private fun gameDummyStart() {\r\n        coroutineScope.launch {\r\n            var allPetOnBoard = 0\r\n            var turnExceed = false\r\n            var damageMatchRequired = 0\r\n            var result = 0\r\n\r\n            bounceNumResetQueue = ArrayDeque()\r\n//            stayNumPlusQueue = ArrayDeque()\r\n            stayNumResetQueue = ArrayDeque()\r\n            oldEffectBoardIndex = ArrayDeque()\r\n//            oldEffectBoardIndex2 = ArrayDeque()\r\n            oldEffectBoardDir = ArrayDeque()\r\n            newEffectBoardIndex = ArrayDeque()\r\n            newEffectBoardDir = ArrayDeque()\r\n            deckVisualize()\r\n            boardVisualize()\r\n            viewModel.updateGameRunState(dict.GAME_START)\r\n            while (true) {\r\n                dummyLoader()\r\n                showTurnDialog(turnBuffer)\r\n\r\n                turnFractionVisualization(turnBuffer)\r\n                hpBarVisualization(currentBossHpBuffer)\r\n                deckVisualize()\r\n                boardVisualize()\r\n\r\n                updateStayNum()\r\n                allowPick = true\r\n\r\n                handlePutPet(deckStatusBuffer, boardStatusBuffer, petStatusBuffer)\r\n                allowPick = false\r\n                handleBounceVictim(\r\n                    selectedGird,\r\n                    deckStatusBuffer,\r\n                    boardStatusBuffer,\r\n                    petStatusBuffer\r\n                )\r\n\r\n                Log.d(\"effect\", \"hi:${oldEffectBoardIndex.toString()}\")\r\n//                Log.d(\"move\", \"${oldEffectBoardIndex2}\")\r\n                oldBoardMoveEffect()\r\n//                oldBoardDisappearEffect()\r\n                deckVisualize()\r\n                boardVisualize()\r\n\r\n                val reportList = handleDamageDealt(damageDealtBuffer,true)\r\n\r\n                if (reportList.size > 0) {\r\n                    showReportDialog(reportList)\r\n                }\r\n                hpBarVisualization(currentBossHpBuffer)\r\n                while (bounceNumResetQueue.size > 0) {\r\n                    val petOrder = bounceNumResetQueue.removeFirst()\r\n                    petStatusBuffer[petOrder]!!.bounceNum = 0\r\n                }\r\n\r\n                while (stayNumResetQueue.size > 0){\r\n                    val petOrder = stayNumResetQueue.removeFirst()\r\n                    petStatusBuffer[petOrder]!!.stayNum = 0\r\n                }\r\n\r\n                bossImageFlash(hitNum)\r\n\r\n\r\n                deckVisualize()\r\n                boardVisualize()\r\n\r\n                damageMatchRequired = checkDamage()\r\n                if(damageMatchRequired != 0){\r\n                    result = damageMatchRequired\r\n                    delay(1000)\r\n                    break\r\n                }\r\n                allPetOnBoard = checkAllOnBoard()\r\n                if(allPetOnBoard != 0){\r\n                    result = dict.GAME_NO_PET\r\n                    delay(1000)\r\n                    break\r\n                }\r\n                turnExceed = checkTurnExceed()\r\n                if(turnExceed){\r\n                    result = dict.GAME_TURN_EXCEED\r\n                    delay(1000)\r\n                    break\r\n                }\r\n                Log.d(\"end info\", \"current turn ${turnBuffer}\")\r\n                Log.d(\"end info\", \"allPetOnBoard ${allPetOnBoard}\")\r\n                Log.d(\"end info\", \"damageMatchRequired ${damageMatchRequired}\")\r\n                turnBuffer += 1\r\n\r\n                delay(500)\r\n                dummySaver()\r\n\r\n            }\r\n            Log.d(\"end info\", \"outside While\")\r\n            if(result == dict.GAME_WON){\r\n                val oldRecord = sharedPreferenceManager.getStageDone()\r\n                oldRecord[selectedStage] = 1\r\n                sharedPreferenceManager.saveStageDone(oldRecord)\r\n            }\r\n            viewModel.updateGameRunState(result)\r\n            showResultDialog(result)\r\n        }\r\n    }\r\n\r\n    //put pet-> bounce-> count dmg(include stay)-> win if boss hp = 0\r\n    //-> boss attack -> lose if player hp = 0\r\n    //-> boss push -> count dmg(not include stay -> win if boss hp =0\r\n    //->lose of no pet to place\r\n\r\n    private fun fightLoader(){\r\n        turnBuffer = viewModel.getTurn()\r\n        currentBossHpBuffer = viewModel.getCurrentBossHp()\r\n        deckStatusBuffer = viewModel.getDeckStatus()\r\n        boardStatusBuffer = viewModel.getBoardStatus()\r\n        petStatusBuffer = viewModel.getPetStatus()\r\n        damageDealtBuffer = viewModel.getDamageDealt()\r\n\r\n        currentPlayerHpBuffer = viewModel.getCurrentPlayerHp()\r\n        damageFromBossBuffer = viewModel.getDamageFromBoss()\r\n        healToPlayerBuffer = viewModel.getHealToPLayer()\r\n    }\r\n\r\n    private fun fightSaver(){\r\n        viewModel.updateTurn(turnBuffer)\r\n        viewModel.updateCurrentBossHp(currentBossHpBuffer)\r\n        viewModel.updatePetStatus(petStatusBuffer)\r\n        viewModel.updateBoardStatus(boardStatusBuffer)\r\n        viewModel.updateDeckStatus(deckStatusBuffer)\r\n        viewModel.updateDamageDealt(damageDealtBuffer)\r\n\r\n        viewModel.updateCurrentPlayerHp(currentPlayerHpBuffer)\r\n        viewModel.updateDamageFromBoss(damageFromBossBuffer)\r\n        viewModel.updateHealToPLayer(healToPlayerBuffer)\r\n    }\r\n\r\n    private fun gameFightStart(){\r\n        coroutineScope.launch {\r\n            var allPetOnBoard = 0\r\n            var turnExceed = false\r\n            var damageMatchRequired = 0\r\n            var result = 0\r\n\r\n            bounceNumResetQueue = ArrayDeque()\r\n//            stayNumPlusQueue = ArrayDeque()\r\n            stayNumResetQueue = ArrayDeque()\r\n            bounceNumAddQueue = ArrayDeque()\r\n            oldEffectBoardIndex = ArrayDeque()\r\n            oldEffectBoardDir = ArrayDeque()\r\n            newEffectBoardIndex = ArrayDeque()\r\n            newEffectBoardDir = ArrayDeque()\r\n\r\n\r\n            deckVisualize()\r\n            boardVisualize()\r\n            viewModel.updateGameRunState(dict.GAME_START)\r\n            while (true) {\r\n                fightLoader()\r\n\r\n                showTurnDialog(turnBuffer)\r\n                turnFractionVisualization(turnBuffer)\r\n                deckVisualize()\r\n                boardVisualize()\r\n                hpBarVisualization(currentBossHpBuffer)\r\n                playerHpBarVisualization(currentPlayerHpBuffer)\r\n\r\n                updateStayNum()\r\n\r\n                allowPick = true\r\n                handlePutPet(deckStatusBuffer, boardStatusBuffer, petStatusBuffer)\r\n                allowPick = false\r\n\r\n                handleBounceVictim(\r\n                    selectedGird,\r\n                    deckStatusBuffer,\r\n                    boardStatusBuffer,\r\n                    petStatusBuffer\r\n                )\r\n                Log.d(\"effect\", \"${oldEffectBoardIndex}\")\r\n//                oldBoardDisappearEffect()\r\n                oldBoardMoveEffect()\r\n                deckVisualize()\r\n                boardVisualize()\r\n\r\n                var reportList = handleDamageDealt(damageDealtBuffer, true)\r\n\r\n                if (reportList.size > 0) {\r\n                    showReportDialog(reportList)\r\n                    playerHpBarVisualization(currentPlayerHpBuffer)\r\n                }\r\n\r\n                while (bounceNumResetQueue.size > 0) {\r\n                    val petOrder = bounceNumResetQueue.removeFirst()\r\n                    petStatusBuffer[petOrder]!!.bounceNum = 0\r\n                }\r\n\r\n                while (stayNumResetQueue.size > 0){\r\n                    val petOrder = stayNumResetQueue.removeFirst()\r\n                    petStatusBuffer[petOrder]!!.stayNum = 0\r\n                }\r\n\r\n                bossImageFlash(hitNum)\r\n                playerHpBarVisualization(currentPlayerHpBuffer)\r\n                hpBarVisualization(currentBossHpBuffer)\r\n                deckVisualize()\r\n                boardVisualize()\r\n\r\n//                allPetOnBoard = checkAllOnBoard()\r\n                damageMatchRequired = checkDamage()\r\n\r\n                //check if the boss is killed\r\n                if(damageMatchRequired != 0){\r\n                    result = damageMatchRequired\r\n                    break\r\n                }\r\n\r\n                //boss action\r\n                val bossDamageList =  handleBossDamage (turnBuffer,damageFromBossBuffer, deckStatusBuffer,boardStatusBuffer, petStatusBuffer)\r\n                if (bossDamageList.size > 0) {\r\n                    showReportDialog(bossDamageList)\r\n                    playerHpBarVisualization(currentPlayerHpBuffer)\r\n                }\r\n\r\n                if(currentPlayerHpBuffer == 0){\r\n                    result = dict.GAME_PLAYER_HP_ZERO\r\n                    break\r\n                }\r\n\r\n                val bossPushList = handleBossPush (turnBuffer, deckStatusBuffer,boardStatusBuffer, petStatusBuffer)\r\n\r\n                if (bossPushList.size > 0) {\r\n                    showReportDialog(bossPushList)\r\n                }\r\n                while(bounceNumAddQueue.size > 0){\r\n                    var petOrder = bounceNumAddQueue.removeFirst()\r\n                    petStatusBuffer[petOrder]!!.bounceNum ++\r\n                }\r\n//                oldBoardDisappearEffect()\r\n                oldBoardMoveEffect()\r\n                deckVisualize()\r\n                boardVisualize()\r\n\r\n\r\n                reportList = handleDamageDealt(damageDealtBuffer,false)\r\n\r\n                if (reportList.size > 0) {\r\n                    showReportDialog(reportList)\r\n                }\r\n\r\n                while (bounceNumResetQueue.size > 0) {\r\n                    val petOrder = bounceNumResetQueue.removeFirst()\r\n                    petStatusBuffer[petOrder]!!.bounceNum = 0\r\n                }\r\n                while (stayNumResetQueue.size > 0){\r\n                    val petOrder = stayNumResetQueue.removeFirst()\r\n                    petStatusBuffer[petOrder]!!.stayNum = 0\r\n                }\r\n\r\n                bossImageFlash(hitNum)\r\n                hpBarVisualization(currentBossHpBuffer)\r\n\r\n                deckVisualize()\r\n                boardVisualize()\r\n\r\n                allPetOnBoard = checkAllOnBoard()\r\n\r\n                damageMatchRequired = checkDamage()\r\n\r\n                if(damageMatchRequired != 0){\r\n                    result = damageMatchRequired\r\n                    delay(1000)\r\n                    break\r\n                }\r\n                if(allPetOnBoard != 0){\r\n                    result = dict.GAME_NO_PET\r\n                    delay(1000)\r\n                    break\r\n                }\r\n                turnExceed = checkTurnExceed()\r\n                if(turnExceed){\r\n                    result = dict.GAME_TURN_EXCEED\r\n                    delay(1000)\r\n                    break\r\n                }\r\n\r\n                delay(500)\r\n                turnBuffer += 1\r\n\r\n                fightSaver()\r\n            }\r\n            if(result == dict.GAME_WON){\r\n                val oldRecord = sharedPreferenceManager.getStageDone()\r\n                oldRecord[selectedStage] = 1\r\n                sharedPreferenceManager.saveStageDone(oldRecord)\r\n            }\r\n            Log.d(\"end info\", \"outside While\")\r\n            viewModel.updateGameRunState(result)\r\n            showResultDialog(result)\r\n        }\r\n    }\r\n\r\n    //Clean\r\n    private suspend fun showTurnDialog(turn:Int ){\r\n        val dialogView = layoutInflater.inflate(R.layout.game_turn_dialog, null)\r\n\r\n        // Create the dialog\r\n        val customDialog = AlertDialog.Builder(this)\r\n            .setView(dialogView)\r\n            .setCancelable(false) // Prevent dismissing if needed\r\n            .create()\r\n\r\n\r\n        customDialog.show()\r\n        val textView = dialogView.findViewById<TextView>(R.id.turnStart)\r\n\r\n        val display = \"Turn \"+turn.toString()+\" start!!\"\r\n        textView.text = display\r\n        delay(2000)\r\n        customDialog.dismiss()\r\n\r\n    }\r\n\r\n    //Dirty: modify petStatusBuffer\r\n    private suspend fun updateStayNum(){\r\n//        val petStatus = viewModel.getPetStatus()\r\n        val petStatus = petStatusBuffer\r\n        for (i in 0..deckSize-1){\r\n            val pet = petStatus[i]!!\r\n            if(pet.location == dict.onBoard){\r\n                pet.stayNum += 1\r\n            }\r\n            else if(pet.location == dict.onDECK){\r\n                pet.stayNum = 0\r\n                pet.bounceNum = 0\r\n            }\r\n            Log.d(\"stay\",\"id: ${chosenPetId[i]}\")\r\n            Log.d(\"stay\",\"stay: ${petStatus[i]!!.stayNum}\")\r\n\r\n        }\r\n    }\r\n\r\n    //Dirty: modify deckStatusBuffer, boardStatusBuffer, petStatusBuffer\r\n    private suspend fun handlePutPet(deckStatusBuffer:IntArray, boardStatusBuffer:IntArray, petStatusBuffer: Array<petStatus?>){\r\n        var putSuccess = 0\r\n        selectedPetOrder = -1\r\n        selectedGird = -1\r\n\r\n        while (putSuccess == 0) {\r\n            if (petClicked == 1 && newSelectedPetOrder != -1) {\r\n                selectedPetOrder = toggleFrame(newSelectedPetOrder)\r\n                newSelectedPetOrder = -1\r\n                petClicked = 1\r\n            }\r\n            if (boardClicked == 1 && selectedPetOrder != -1 && boardStatusBuffer[selectedGird] == dict.noPet) {\r\n//            if (boardClicked == 1 && selectedPetOrder != -1 && viewModel.boardStatus.value?.get(selectedGird) == dict.noPet) {\r\n                //update board status\r\n                val boardStatus = boardStatusBuffer\r\n                boardStatus[selectedGird] = selectedPetOrder\r\n                boardVisualize()\r\n                delay(50)\r\n\r\n                Log.d(\"check\", \"selectedGird: ${selectedGird}\")\r\n                //update deck status\r\n                val deckStatus = deckStatusBuffer\r\n                deckStatus[selectedPetOrder] = dict.noPet\r\n\r\n                val petStatus = petStatusBuffer\r\n                val petGo = petStatus[selectedPetOrder]!!\r\n                petGo.endPos = selectedGird\r\n                petGo.stayNum = 0\r\n                petGo.location = dict.onBoard\r\n\r\n                // Exit the loop after updating\r\n                putSuccess = 1\r\n                selectedPetOrder = toggleFrame(selectedPetOrder)\r\n                boardClicked = 0\r\n            }\r\n\r\n            delay(100) // Suspend the coroutine for 100 milliseconds\r\n        }\r\n        Log.d(\"Coroutine\", \"Coroutine end\")\r\n    }\r\n\r\n    //dirty: modify global buffer\r\n    private suspend fun handleBounceVictim(petPut: Int,deckStatusBuffer:IntArray, boardStatusBuffer:IntArray, petStatusBuffer: Array<petStatus?>){\r\n        val victimPos = makeVictimPos(petPut)\r\n        val victimPosBack = makeVictimBackPos(victimPos)\r\n        val boardStatus = boardStatusBuffer\r\n        val petStatus = petStatusBuffer\r\n//        newEffectBoardIndex = ArrayList()\r\n        oldBoard = boardStatusBuffer.copyOf()\r\n\r\n        Log.d(\"handleBounceVictim\", \"petPut: ${petPut}\")\r\n        for (t in 0..7) {\r\n            Log.d(\"handleBounceVictim\", \"Loop: ${t}: victimPos: ${victimPos[t]}\")\r\n            if (victimPos[t] in 0..boardSize - 1) {\r\n                val victimOrder = boardStatus[victimPos[t]]\r\n//                Log.d(\"handleBounceVictim\", \"Loop: ${t}: victimOrder: ${victimOrder}\")\r\n                if (victimOrder >= 0) {   //it has a pet\r\n                    val victimPet = petStatus[victimOrder]\r\n//                        Log.d(\"handleBounceVictim\", \"victimID: ${victimPet?.unitId}\")\r\n                    //the support of the victim pet is on the board\r\n\r\n                    Log.d(\"handleBounceVictim\", \"victimPos[t]: ${victimPos[t]}\")\r\n                    Log.d(\"handleBounceVictim\", \"victimPosBack[t]: ${victimPosBack[t]}\")\r\n\r\n\r\n//                    for(k in 0..7){\r\n//                        Log.d(\"handleBounceVictim\", \"victimPos: ${victimPos[k]}\")\r\n//                    }\r\n//\r\n//                    for(k in 0..7){\r\n//                        Log.d(\"handleBounceVictim\", \"victimPosBack: ${victimPosBack[k]}\")\r\n//                    }\r\n                    if(victimPosBack[t]in 0..boardSize - 1){\r\n                        val victimBackOrder = boardStatus[victimPosBack[t]]\r\n\r\n                        //victim bounce to board\r\n                        if(victimBackOrder == dict.noPet){\r\n//                            Log.d(\"handleBounceVictim\", \"victimBackOrder == dict.noPet: ${victimBackOrder == dict.noPet}\")\r\n                            //update pet status\r\n                            victimPet!!.endPos = victimPosBack[t]\r\n                            victimPet.bounceNum +=1\r\n//                            viewModel.updatePetStatus(petStatus)\r\n\r\n                            //update board status\r\n                            boardStatus[victimPos[t]] = dict.noPet\r\n                            boardStatus[victimPosBack[t]] = victimOrder\r\n//                            viewModel.updateBoardStatus(boardStatus)\r\n\r\n                            //for moving effect\r\n                            oldEffectBoardIndex.add(victimPos[t])\r\n//                            newEffectBoardIndex. add(victimPosBack[t])\r\n//                            oldEffectBoardIndex2.add(victimPos[t])\r\n                            oldEffectBoardDir.add(t)\r\n                            newEffectBoardIndex.add(victimPosBack[t])\r\n                            newEffectBoardDir.add(t)\r\n\r\n\r\n                        }\r\n                    }\r\n                    else{   //victim return to deck\r\n                        victimPet!!.endPos = dict.outsideBoard\r\n                        victimPet.bounceNum +=1\r\n                        victimPet.location = dict.onDECK\r\n\r\n                        //update deckStatus\r\n//                        val deckStatus = viewModel.getDeckStatus()\r\n                        val deckStatus = deckStatusBuffer\r\n                        deckStatus[victimOrder] = dict.hasPet\r\n//                        viewModel.updateDeckStatus(deckStatus)\r\n\r\n                        //update board status\r\n                        boardStatus[victimPos[t]] = dict.noPet\r\n//                        viewModel.updateBoardStatus(boardStatus)\r\n\r\n                        //for moving effect\r\n                        oldEffectBoardIndex.add(victimPos[t])//\r\n                        oldEffectBoardDir.add(t)\r\n\r\n//                        newEffectBoardIndex.add(victimPosBack[t])\r\n//                        newEffectBoardDir.add(t)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Clean: helper function of handleBounceVictim\r\n    private fun makeVictimPos(petPut: Int):IntArray{\r\n        val ret = intArrayOf(petPut-6, petPut-5, petPut-4,\r\n            petPut-1, petPut+1,\r\n            petPut+4, petPut+5, petPut+6)\r\n\r\n        //upmost row\r\n        if(petPut / boardCol == 0){\r\n            for(i in 0..2){\r\n                ret[i] = dict.outsideBoard\r\n            }\r\n        }\r\n        //lowest row\r\n        if(petPut / boardCol == boardRow -1){\r\n            for(i in 5..7){\r\n                ret[i] = dict.outsideBoard\r\n            }\r\n        }\r\n\r\n        //left most col\r\n        if(petPut % boardCol == 0){\r\n            ret[0] = dict.outsideBoard\r\n            ret[3] = dict.outsideBoard\r\n            ret[5] = dict.outsideBoard\r\n        }\r\n\r\n        //rightmost col\r\n        if((petPut+1) % boardCol == 0){\r\n            ret[2] = dict.outsideBoard\r\n            ret[4] = dict.outsideBoard\r\n            ret[7] = dict.outsideBoard\r\n        }\r\n\r\n        return ret\r\n\r\n    }\r\n\r\n    //Clean: helper function of handleBounceVictim\r\n    private fun makeVictimBackPos(victimPos: IntArray):IntArray{\r\n        val dir = intArrayOf(-6, -5, -4, -1, +1, +4, +5, +6)\r\n        val victimBackPos = victimPos.copyOf()\r\n        for (i in 0..7){\r\n            if(victimBackPos[i] == dict.outsideBoard){\r\n                continue\r\n            }\r\n            when(i){\r\n                0 -> if(victimBackPos[i] / boardCol == 0 || victimBackPos[i] % boardCol == 0) victimBackPos[i] = dict.outsideBoard else victimBackPos[i] += dir[i]\r\n                1 -> if(victimBackPos[i] / boardCol == 0 ) victimBackPos[i] = dict.outsideBoard else victimBackPos[i] += dir[1]\r\n                2 -> if(victimBackPos[i] / boardCol == 0 || (victimBackPos[i] + 1) % boardCol == 0) victimBackPos[i] = -4 else victimBackPos[i] += dir[i]\r\n\r\n                3 -> if(victimBackPos[i] % boardCol == 0) victimBackPos[i] = dict.outsideBoard else victimBackPos[i] += dir[i]\r\n                4 -> if((victimBackPos[i] + 1) % boardCol == 0) victimBackPos[i] = dict.outsideBoard else victimBackPos[i] += dir[i]\r\n\r\n                5 -> if(victimBackPos[i] / boardCol == boardRow -1 || victimBackPos[i] % boardCol == 0) victimBackPos[i] = dict.outsideBoard else victimBackPos[i] += dir[i]\r\n                6 -> if(victimBackPos[i] / boardCol == boardRow -1) victimBackPos[i] = dict.outsideBoard else victimBackPos[i] += dir[i]\r\n                7 -> if(victimBackPos[i] / boardCol == boardRow -1 || (victimBackPos[i] + 1) % boardCol == 0) victimBackPos[i] = dict.outsideBoard else victimBackPos[i] += dir[i]\r\n            }\r\n        }\r\n\r\n        return victimBackPos\r\n    }\r\n\r\n    //Dirty, modify damageDealtBuffer, currentPlayerHpBuffer\r\n    private suspend fun handleDamageDealt(damageDealtBuffer:IntArray, includeStay: Boolean):MutableList<String>{\r\n        val damageHistory = damageDealtBuffer\r\n        val petStatus = petStatusBuffer\r\n        val reportList = mutableListOf<String>()\r\n        val acceptElement = stageInfo.StageInfoMap(selectedStage)!!.acceptElement\r\n        hitNum = 0//\r\n        for(i in 0..deckSize-1){\r\n            val damage = petInfo.getPetInfoById(chosenPetId[i])!!.dealDamage(petStatus,i, deckSize)\r\n            val petElement = petInfo.getPetInfoById(chosenPetId[i])!!.element\r\n            Log.d(\"damage dealt\", \"pet element : ${petElement}\")\r\n            Log.d(\"damage dealt\", \"accept element: ${acceptElement}\")\r\n            if (damage > 0 &&  (acceptElement == dict.STAGE_ACCEPT_ALL_ELEMENT || acceptElement == petElement)){\r\n                val petID = petStatus[i]?.unitId!!\r\n                val pet = petInfo.getPetInfoById(petID)!!\r\n                val atkElement = pet.element\r\n                val atkType = pet.attackType\r\n                val damageReport = pet.name+\" dealt \"+damage+\" \"+dict.ELEMENT_STRING[atkElement]+ \" damage!!\"\r\n\r\n\r\n//                if (atkType == dict.ATK_TYPE_BOUNCE && petStatus[i]?.location == dict.onBoard){\r\n//                    bounceNumResetQueue.add(i)\r\n//                }\r\n//                else if(atkType == dict.ATK_TYPE_RETURN && petStatus[i]?.location == dict.onDECK){\r\n//                    stayNumResetQueue.add(i)\r\n//                }\r\n                if(pet.resetAfterDamage()){\r\n                    if (atkType == dict.ATK_TYPE_BOUNCE && pet.resetAfterDamage()){\r\n                        bounceNumResetQueue.add(i)\r\n                    }\r\n                    else {\r\n                            stayNumResetQueue.add(i)\r\n                        }\r\n                }\r\n\r\n\r\n                if((atkType == dict.ATK_TYPE_STAY && includeStay)|| atkType != dict.ATK_TYPE_STAY){\r\n                    damageHistory[atkElement] += damage\r\n                    reportList.add(damageReport)\r\n                    hitNum ++\r\n                }\r\n\r\n            }\r\n            else if (damage < 0){\r\n\r\n                val stage = stageInfo.StageInfoMap(selectedStage)!!\r\n                if(stage.objectiveType == dict.STAGE_OBJECTIVE_FIGHT){\r\n                    val petID = petStatus[i]?.unitId!!\r\n                    val pet = petInfo.getPetInfoById(petID)!!\r\n                    val atkElement = pet.element\r\n                    val atkType = pet.attackType\r\n                    val healReport = pet.name+\" heals \"+(damage * -1)+\" hp!!\"\r\n\r\n\r\n                    if((atkType == dict.ATK_TYPE_STAY && includeStay)|| atkType != dict.ATK_TYPE_STAY){\r\n                        healToPlayerBuffer += damage\r\n                        reportList.add(healReport)\r\n                    }\r\n\r\n                    if(pet.resetAfterDamage()){\r\n                        if (atkType == dict.ATK_TYPE_BOUNCE && pet.resetAfterDamage()){\r\n                            bounceNumResetQueue.add(i)\r\n                        }\r\n                        else {\r\n                            stayNumResetQueue.add(i)\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return reportList\r\n\r\n    }\r\n\r\n    //clean\r\n    private suspend fun showReportDialog(reportList: MutableList<String>): Boolean {\r\n        // Inflate the custom layout\r\n        val dialogView = layoutInflater.inflate(R.layout.game_report_dialog, null)\r\n\r\n        // Create the dialog\r\n        val customDialog = AlertDialog.Builder(this)\r\n            .setView(dialogView)\r\n            .setCancelable(false) // Prevent dismissing if needed\r\n            .create()\r\n\r\n        val window = customDialog.window\r\n        if (window != null) {\r\n            val layoutParams = window.attributes\r\n            layoutParams.gravity = Gravity.BOTTOM or Gravity.CENTER_HORIZONTAL // Position at bottom center\r\n            layoutParams.y = 200 // Adjust vertical offset\r\n            window.attributes = layoutParams\r\n        }\r\n\r\n\r\n        // Show the dialog\r\n        customDialog.show()\r\n\r\n        // Optional: Set the message dynamically\r\n        val textView = dialogView.findViewById<TextView>(R.id.dialogReportText)\r\n        viewModel.damageReport.observe(this, Observer { newDamageReport->\r\n            textView.text = newDamageReport\r\n\r\n        })\r\n\r\n        for(report in reportList){\r\n            for(i in 0..report.length){\r\n                viewModel.updateDamageReport(report.take(i))\r\n                delay(100)\r\n            }\r\n            delay(100)\r\n            viewModel.updateDamageReport(\"\")\r\n        }\r\n//        dialogIsShowing = false\r\n        customDialog.dismiss()\r\n        return true\r\n    }\r\n\r\n    //clean\r\n    private suspend fun bossImageFlash(hitNum: Int){\r\n        for(i in 0..< hitNum){\r\n            bossView.isInvisible = true\r\n            delay(50)\r\n            bossView.isInvisible = false\r\n            delay(50)\r\n        }\r\n    }\r\n\r\n    //dirty: modify global buffer: currentBossHpBuffer\r\n    private suspend fun hpBarVisualization(currentBossHpBuffer: Int){\r\n        val stage = stageInfo.StageInfoMap(selectedStage)!!\r\n        val maxHp = stage.damageRequirement\r\n        val currentHp = currentBossHpBuffer\r\n        Log.d(\"hp\", \"max hp: ${maxHp}\")\r\n        Log.d(\"hp\", \"currentHp: ${currentHp}\")\r\n\r\n        var newCurrentHp = maxHp\r\n\r\n        for (i in 0..2) {\r\n            newCurrentHp -= damageDealtBuffer[i]\r\n        }\r\n        Log.d(\"hp\", \"newCurrentHp: ${newCurrentHp}\")\r\n        if( newCurrentHp <0){\r\n            newCurrentHp = 0\r\n        }\r\n        val diff = currentHp - newCurrentHp\r\n        val totalTime = 300\r\n        val interval = (totalTime.toDouble()/diff.toDouble()).toInt().toLong()\r\n\r\n        if(diff >0){\r\n            val layoutParams = hpBarView.layoutParams\r\n            Log.d(\"hp\", \"hpBarLength: $hpBarLength\")\r\n\r\n            for (i in 0..diff){\r\n                val newHpBarLen = (((currentHp.toDouble()-i.toDouble())/maxHp.toDouble()) * hpBarLength.toDouble()).toInt()\r\n                Log.d(\"hp\", \"new hpBarLength: ${newHpBarLen}\")\r\n                hpBarView.layoutParams.width = newHpBarLen\r\n                hpBarView.layoutParams = layoutParams\r\n                delay(interval)\r\n            }\r\n            this@gameActivity.currentBossHpBuffer = newCurrentHp\r\n        }\r\n        hpFractionVisualization(newCurrentHp)\r\n    }\r\n\r\n    //dirty: modify global buffer: currentBossHpBuffer\r\n    private suspend fun playerHpBarVisualization(currentPlayerHpBuffer: Int){\r\n        val stage = stageInfo.StageInfoMap(selectedStage)!!\r\n        val maxHp = 100\r\n        val currentHp = currentPlayerHpBuffer\r\n        Log.d(\"hp\", \"max hp: ${maxHp}\")\r\n        Log.d(\"hp\", \"currentHp: ${currentHp}\")\r\n\r\n        var newCurrentHp = maxHp\r\n\r\n//        for (i in 0..2) {\r\n//            newCurrentHp -= damageDealtBuffer[i]\r\n//        }\r\n        newCurrentHp -= damageFromBossBuffer\r\n        newCurrentHp += abs(healToPlayerBuffer)\r\n\r\n\r\n        if( newCurrentHp < 0){\r\n            newCurrentHp = 0\r\n        }\r\n        if(newCurrentHp > 100){\r\n            newCurrentHp = 100\r\n        }\r\n        Log.d(\"playerHp\", \"currentHp: ${currentHp}\")\r\n        Log.d(\"playerHp\", \"newCurrentHp: ${newCurrentHp}\")\r\n        val diff = currentHp - newCurrentHp\r\n        Log.d(\"playerHp\",\"diff: ${diff}\")\r\n        val totalTime = 300\r\n        val interval = (totalTime.toDouble()/abs(diff.toDouble())).toInt().toLong()\r\n\r\n        if(diff >0){\r\n            val layoutParams = player_hpBarView.layoutParams\r\n\r\n            for (i in 0..diff){\r\n                val newHpBarLen = (((currentHp.toDouble()-i.toDouble())/maxHp.toDouble()) * player_hpBarLength.toDouble()).toInt()\r\n                Log.d(\"hp\", \"new hpBarLength: ${newHpBarLen}\")\r\n                player_hpBarView.layoutParams.width = newHpBarLen\r\n                player_hpBarView.layoutParams = layoutParams\r\n                delay(interval)\r\n            }\r\n            this@gameActivity.currentPlayerHpBuffer = newCurrentHp\r\n        }\r\n        else if( diff == 0){\r\n\r\n        }\r\n        else if(diff < 0){\r\n            val layoutParams = player_hpBarView.layoutParams\r\n            for (i in 0..abs(diff)){\r\n                val newHpBarLen = (((currentHp.toDouble() + i.toDouble())/maxHp.toDouble()) * player_hpBarLength.toDouble()).toInt()\r\n                Log.d(\"hp\", \"new hpBarLength: ${newHpBarLen}\")\r\n                player_hpBarView.layoutParams.width = newHpBarLen\r\n                player_hpBarView.layoutParams = layoutParams\r\n                delay(interval)\r\n            }\r\n            this@gameActivity.currentPlayerHpBuffer = newCurrentHp\r\n        }\r\n        playerHpFractionVisualization(newCurrentHp)\r\n    }\r\n\r\n    private fun turnFractionVisualization(currentTurn: Int){\r\n        val display = \"Turn \"+currentTurn.toString() + \"/\" + stageInfo.StageInfoMap(selectedStage)!!.maxTurn\r\n        turnView.text =display\r\n    }\r\n\r\n    private fun hpFractionVisualization(currentHp: Int){\r\n        val display = currentHp.toString() + \"/\" + stageInfo.StageInfoMap(selectedStage)!!.damageRequirement.toString()\r\n        hpFractionView.text = display\r\n    }\r\n\r\n    private fun playerHpFractionVisualization(currentHp: Int){\r\n        val display = currentHp.toString() + \"/100\"\r\n        player_hpFractionView.text = display\r\n    }\r\n\r\n    private fun checkAllOnBoard():Int{\r\n//        val petStatus = viewModel.getPetStatus()\r\n        val petStatus = petStatusBuffer\r\n        for(i in 0..< deckSize){\r\n            if(petStatus[i]!!.location == dict.onDECK){\r\n                return 0\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n\r\n    private fun checkTurnExceed():Boolean{\r\n        val stage = stageInfo.StageInfoMap(selectedStage)!!\r\n        val requiredTurn = stage.maxTurn\r\n        val currentTurn = turnBuffer\r\n        return if (currentTurn >= requiredTurn) true else false\r\n    }\r\n\r\n    private fun checkDamage():Int{\r\n        val stage = stageInfo.StageInfoMap(selectedStage)!!\r\n        val objType = stageInfo.StageInfoMap(selectedStage)!!.objectiveType\r\n//        val currentTurn = turnBuffer\r\n        val requiredTurn = stage.maxTurn\r\n        val currentBossHp = currentBossHpBuffer\r\n\r\n        val below = -1\r\n        val just = 0\r\n        val over = 1\r\n\r\n        var damageMatch = below    //-1 below, 0 just, 1 over\r\n//        var turnExceed = if (currentTurn >= requiredTurn) true else false\r\n\r\n        if((objType == dict.STAGE_OBJECTIVE_BEST || objType == dict.STAGE_OBJECTIVE_FIGHT)&& currentBossHp == 0){\r\n            damageMatch = 0\r\n        }\r\n        else if(objType == dict.STAGE_OBJECTIVE_EXACT && currentBossHp <= 0 ){\r\n            var allDamage = 0\r\n                    val damageHistory = damageDealtBuffer\r\n                    for(i in 0..2){\r\n                        allDamage += damageHistory[i]\r\n                    }\r\n                    if(allDamage == stage.damageRequirement){ //win\r\n                        damageMatch = just\r\n                    }\r\n                    else if(allDamage > stage.damageRequirement){ //too much\r\n                        damageMatch = over\r\n                    }\r\n        }\r\n\r\n        when(damageMatch){\r\n            below -> return 0\r\n            just -> return dict.GAME_WON\r\n            over -> return dict.GAME_DAMAGE_EXCEED\r\n\r\n        }\r\n\r\n//        if(turnExceed){\r\n//            when(damageMatch){\r\n//                below -> return dict.GAME_TURN_EXCEED\r\n//                just -> return dict.GAME_WON\r\n//                over -> return dict.GAME_DAMAGE_EXCEED\r\n//\r\n//            }\r\n//        }\r\n//        else if(!turnExceed){\r\n//            when(damageMatch){\r\n//                below -> return 0\r\n//                just -> return dict.GAME_WON\r\n//                over -> return dict.GAME_DAMAGE_EXCEED\r\n//\r\n//            }\r\n//        }\r\n        return 0\r\n    }\r\n\r\n    private fun showResultDialog(gameResult: Int){\r\n        val dialogView = layoutInflater.inflate(R.layout.game_reusult_dialog, null)\r\n\r\n        // Create the dialog\r\n        val customDialog = AlertDialog.Builder(this)\r\n            .setView(dialogView)\r\n            .setCancelable(false) // Prevent dismissing if needed\r\n            .create()\r\n\r\n        // Show the dialog\r\n        customDialog.show()\r\n        val textView = dialogView.findViewById<TextView>(R.id.gameResult)\r\n        when(gameResult){\r\n                dict.GAME_NO_PET -> textView.text = \"Objective failed:\\nNo pet to fight!\"\r\n                dict.GAME_WON -> textView.text = \"Objective done:\\nYou Win!!\"\r\n                dict.GAME_TURN_EXCEED -> textView.text = \"Objective failed:\\nTurn exceed!\"\r\n                dict.GAME_DAMAGE_EXCEED -> textView.text = \"Objective failed:\\nDealt too much damage!\"\r\n                dict.GAME_PLAYER_HP_ZERO -> textView.text = \"Objective failed:\\nYou died!\"\r\n        }\r\n\r\n        val restartBtn = dialogView.findViewById<Button>(R.id.game_restart)\r\n        restartBtn.setOnClickListener{\r\n            viewModel.updateGameRunState(dict.GAME_NOT_START)\r\n            customDialog.dismiss()\r\n            recreate()\r\n        }\r\n\r\n        val goHomeBtn = dialogView.findViewById<Button>(R.id.game_toBossChoose)\r\n        goHomeBtn.setOnClickListener {\r\n            viewModel.updateGameRunState(dict.GAME_NOT_START)\r\n\r\n            val intent = Intent(this, MainActivity::class.java)\r\n\r\n            // Optionally, you can add extra data to the intent\r\n            // intent.putExtra(\"key\", \"value\")\r\n\r\n            // Start the SecondActivity\r\n            finish()\r\n            startActivity(intent)\r\n            customDialog.dismiss()\r\n\r\n        }\r\n\r\n//        dialogIsShowing = false\r\n//        customDialog.dismiss()\r\n//        return true\r\n    }\r\n\r\n    //dirty, may affect all the buffer but the turnBuffer\r\n    private fun handleBossDamage (turnBuffer: Int,damageFromBossBuffer:Int, deckStatusBuffer: IntArray,boardStatusBuffer: IntArray, petStatusBuffer: Array<petStatus?>):MutableList<String>{\r\n        Log.d(\"fight\", \"turn: ${turnBuffer}\")\r\n        val stage = stageInfo.StageInfoMap(selectedStage)!!\r\n        val reportList = mutableListOf<String>()\r\n        Log.d(\"fight\", \"stage.actionType(turnBuffer): ${stage.actionType(turnBuffer)}\")\r\n        if(stage.actionType(turnBuffer) == dict.STAGE_ACTION_ATTACK){\r\n            val damageDealt: Int = stage.actionAmount(turnBuffer, petStatusBuffer)\r\n            Log.d(\"fight\", \"Boss dmg: ${damageDealt}\")\r\n            this@gameActivity.damageFromBossBuffer += damageDealt\r\n\r\n            Log.d(\"fight\", \"damageFromBossBuffer: ${this@gameActivity.damageFromBossBuffer}\")\r\n\r\n            val report = stage.actionDescription(turnBuffer, petStatusBuffer)\r\n\r\n            Log.d(\"fight\", \"report: ${report}\")\r\n\r\n            reportList.add(report)\r\n        }\r\n\r\n        Log.d(\"fight\", \"reportList.size: ${reportList.size}\")\r\n        return reportList\r\n    }\r\n\r\n    //dirty, may modify boardStatusBuffer\r\n    private suspend fun handleBossPush (turnBuffer: Int, deckStatusBuffer: IntArray,boardStatusBuffer: IntArray, petStatusBuffer: Array<petStatus?>):MutableList<String>{\r\n        Log.d(\"push\", \"turn: ${turnBuffer}\")\r\n        val stage = stageInfo.StageInfoMap(selectedStage)!!\r\n        val reportList = mutableListOf<String>()\r\n        Log.d(\"push\", \"stage.actionType(turnBuffer): ${stage.actionType(turnBuffer)}\")\r\n\r\n        Log.d(\"effect\", \"boardStatusBuffer: ${boardStatusBuffer.toString()}\")\r\n        Log.d(\"effect\", \"oldEffectBoardIndex: ${oldEffectBoardIndex}\")\r\n\r\n        if(stage.actionType(turnBuffer) == dict.STAGE_ACTION_PUSH){\r\n            val dir = stage.actionAmount(turnBuffer, petStatusBuffer)\r\n            Log.d(\"push\", \"Boss push dir: ${dir}\")\r\n\r\n            oldBoard = boardStatusBuffer.copyOf()\r\n\r\n            if (dir == dict.STAGE_PUSH_NORTH){\r\n                for (i in 0..<boardSize){\r\n                    if(boardStatusBuffer[i] >= 0){\r\n                        oldEffectBoardIndex.add(i)\r\n                        oldEffectBoardDir.add(1)\r\n\r\n                    }\r\n                }\r\n                for(i in 0..< deckSize){\r\n                    if(petStatusBuffer[i]!!.location == dict.onBoard){\r\n                        bounceNumAddQueue.add(i)\r\n//                        petStatusBuffer[i]!!.bounceNum ++\r\n                    }\r\n                }\r\n                for(i in 0 ..< boardCol){\r\n                    val petOrder = boardStatusBuffer[i]\r\n                    if(petOrder >= 0){\r\n                        petStatusBuffer[petOrder]!!.location = dict.onDECK\r\n                        deckStatusBuffer[petOrder] = dict.hasPet\r\n                    }\r\n                }\r\n                for(i in 0 ..< boardSize-boardCol){\r\n                    boardStatusBuffer[i] = boardStatusBuffer[i+boardCol]\r\n                    if(boardStatusBuffer[i+boardCol] >= 0){\r\n                        newEffectBoardIndex.add(i)\r\n                        newEffectBoardDir.add(1)\r\n                    }\r\n                }\r\n\r\n                for(i in boardSize-boardCol ..< boardSize){\r\n                    boardStatusBuffer[i] = dict.noPet\r\n                }\r\n\r\n            }\r\n\r\n            else if (dir == dict.STAGE_PUSH_SOUTH){\r\n//                oldBoard = boardStatusBuffer.copyOf()\r\n                for (i in 0..<boardSize){\r\n                    if(boardStatusBuffer[i] >= 0){\r\n                        oldEffectBoardIndex.add(i)\r\n                        oldEffectBoardDir.add(6)\r\n                    }\r\n                }\r\n                for (i in 0..<boardSize){\r\n                    if(boardStatusBuffer[i] >= 0){\r\n                        oldEffectBoardIndex.add(i)\r\n                    }\r\n                }\r\n                for(i in 0..< deckSize){\r\n                    if(petStatusBuffer[i]!!.location == dict.onBoard){\r\n//                        petStatusBuffer[i]!!.bounceNum ++\r\n                        bounceNumAddQueue.add(i)\r\n                    }\r\n                }\r\n                for(i in boardSize-boardCol ..< boardSize){\r\n                    val petOrder = boardStatusBuffer[i]\r\n                    if(petOrder >= 0){\r\n                        petStatusBuffer[petOrder]!!.location = dict.onDECK\r\n                        deckStatusBuffer[petOrder] = dict.hasPet\r\n                    }\r\n                    boardStatusBuffer[i] = boardStatusBuffer[i-boardCol]\r\n                    if(boardStatusBuffer[i-boardCol] >= 0){\r\n                        newEffectBoardIndex.add(i)\r\n                        newEffectBoardDir.add(6)\r\n                    }\r\n                }\r\n\r\n                for(i in boardCol ..< boardSize-boardCol){\r\n                    boardStatusBuffer[i] = boardStatusBuffer[i-boardCol]\r\n                    if(boardStatusBuffer[i-boardCol] >= 0){\r\n                        newEffectBoardIndex.add(i)\r\n                        newEffectBoardDir.add(6)\r\n                    }\r\n                }\r\n\r\n                for(i in 0 ..< boardCol){\r\n                    boardStatusBuffer[i] = dict.noPet\r\n                }\r\n\r\n            }\r\n\r\n            val report = stage.actionDescription(turnBuffer, petStatusBuffer)\r\n            Log.d(\"push\", \"report: ${report}\")\r\n\r\n            reportList.add(report)\r\n        }\r\n\r\n        Log.d(\"push\", \"reportList.size: ${reportList.size}\")\r\n        return reportList\r\n    }\r\n\r\n    private suspend fun oldBoardDisappearEffect(){\r\n        Log.d(\"effect\", \"size: ${oldEffectBoardIndex.size}\")\r\n        if(oldEffectBoardIndex.size == 0){\r\n            return\r\n        }\r\n        for(index in oldEffectBoardIndex){\r\n            boardAlpha(index, 0.6f)\r\n        }\r\n        delay(6)\r\n        for(index in oldEffectBoardIndex){\r\n            boardAlpha(index, 0.4f)\r\n        }\r\n        delay(5)\r\n        for(index in oldEffectBoardIndex){\r\n            boardAlpha(index, 0.2f)\r\n        }\r\n        delay(4)\r\n//        for(index in oldEffectBoardIndex){\r\n//            boardAlpha(index, 0.2f)\r\n//        }\r\n        while(oldEffectBoardIndex.size > 0){\r\n            boardAlpha(oldEffectBoardIndex.removeFirst(), 0.0f)\r\n        }\r\n        delay(50)\r\n\r\n    }\r\n\r\n    private suspend fun oldBoardMoveEffect(){\r\n        if(oldEffectBoardIndex.size == 0){\r\n            return\r\n        }\r\n        val size = oldEffectBoardIndex.size\r\n\r\n        for(i in 0..<size){\r\n\r\n            boardItemMargin(oldEffectBoardIndex[i], oldEffectBoardDir[i], 20)\r\n        }\r\n        delay(6)\r\n        for(i in 0..<size){\r\n\r\n            boardItemMargin(oldEffectBoardIndex[i], oldEffectBoardDir[i], 50)\r\n        }\r\n        delay(5)\r\n//        for(index in oldEffectBoardIndex2){\r\n////            boardAlpha(index, 0.6f)\r\n//            boardItemMargin(index, oldEffectBoardDir[index], 75)\r\n//        }\r\n        while(oldEffectBoardIndex.size > 0){\r\n            boardItemMargin(oldEffectBoardIndex.removeFirst(), oldEffectBoardDir.removeFirst(), 75)\r\n        }\r\n        delay(3)\r\n\r\n    }\r\n\r\n    private fun boardItemMargin(boardIndex:Int, dir: Int, margin: Int ){\r\n        boardRecyclerView.post {\r\n            val targetboard= boardRecyclerView.findViewHolderForAdapterPosition(boardIndex) as? boardAdapter.ViewHolder\r\n            val masterFrame = targetboard!!.masterFrame!!\r\n            val params = targetboard!!.masterFrame!!.layoutParams as FrameLayout.LayoutParams\r\n//            params.marginStart = 0\r\n//            params.marginEnd = 0\r\n//            params.topMargin = 0\r\n//            params.bottomMargin = 0\r\n            if(dir ==0 ){ //top left\r\n                params.marginEnd = margin\r\n                params.bottomMargin = margin\r\n            }\r\n            else if(dir == 1){//top\r\n                params.bottomMargin = margin\r\n            }\r\n            else if(dir == 2){//top right\r\n                params.marginStart = margin\r\n                params.bottomMargin = margin\r\n            }\r\n            else if(dir == 3){//left\r\n                params.marginEnd = margin\r\n            }\r\n            else if (dir == 4){//right\r\n                params.marginStart = margin\r\n            }\r\n            else if (dir == 5){//bottom left\r\n                params.marginEnd = margin\r\n                params.topMargin = margin\r\n            }\r\n            else if (dir == 6){//bottom\r\n                params.topMargin = margin\r\n            }\r\n            else if(dir == 7){//bottom right\r\n                params.marginStart = margin\r\n                params.topMargin = margin\r\n            }\r\n            targetboard!!.masterFrame!!.layoutParams = params\r\n        }\r\n    }\r\n    //Small helper functions\r\n\r\n    private fun showPetCard(petId : Int, petOrder: Int){\r\n        val pet = petInfo.getPetInfoById(petId)!!\r\n        val conditionText : String =  pet.condition(petStatusBuffer, petOrder, deckSize)\r\n        val nextDmg : String = pet.nextDamage(petStatusBuffer, petOrder, deckSize)\r\n\r\n        //debug\r\n        val oldDialog = supportFragmentManager.findFragmentByTag(\"PetChooseDialog\")\r\n        if (oldDialog != null) {\r\n            (oldDialog as DialogFragment).dismiss()\r\n        }\r\n\r\n        val dialog = petDialog.newInstance(petId, petOrder, conditionText, nextDmg)\r\n        dialog.show(supportFragmentManager, \"PetGameDialog\")\r\n    }\r\n\r\n/*\r\n    private fun showPetCard(petId:Int, petOrder: Int){\r\n        val dialogView = layoutInflater.inflate(R.layout.game_pet_detail_dialog, null)\r\n\r\n        // Create the dialog\r\n        val customDialog = AlertDialog.Builder(this)\r\n            .setView(dialogView)\r\n            .setCancelable(true) // Prevent dismissing if needed\r\n            .create()\r\n\r\n\r\n        val pet = petInfo.getPetInfoById(petId)!!\r\n        customDialog.show()\r\n        val petImage = dialogView.findViewById<ImageView>(R.id.detail_petImage)\r\n        petImage.setImageResource(pet.imageId)\r\n\r\n        val petName = dialogView.findViewById<TextView>(R.id.detail_petName)\r\n        petName.text = pet.name\r\n\r\n        val petIdView = dialogView.findViewById<TextView>(R.id.detail_petId)\r\n        petIdView.text = String.format(\"%03d\", pet.id)\r\n        when(pet.element){\r\n            dict.ELEMENT_FIRE ->  petIdView.setTextColor(Color.RED)\r\n            dict.ELEMENT_WATER -> petIdView.setTextColor(Color.BLUE)\r\n            dict.ELEMENT_FOREST -> petIdView.setTextColor(Color.parseColor(\"#4CAF50\"))\r\n        }\r\n\r\n        val skillName = dialogView.findViewById<TextView>(R.id.detail_petSkill)\r\n        skillName.text = pet.skillName\r\n\r\n\r\n        val elementDot = dialogView.findViewById<ImageView>(R.id.detail_element)\r\n        when(pet.element){\r\n            dict.ELEMENT_FIRE -> elementDot.setImageResource(R.drawable.game_element_frame_fire)\r\n            dict.ELEMENT_WATER -> elementDot.setImageResource(R.drawable.game_element_frame_water)\r\n            dict.ELEMENT_FOREST -> elementDot.setImageResource(R.drawable.game_element_frame_forest)\r\n        }\r\n\r\n        val description = dialogView.findViewById<TextView>(R.id.detail_skillCondition)\r\n        description.text = pet.description\r\n\r\n\r\n        val condition = dialogView.findViewById<TextView>(R.id.detail_nextReminder)\r\n        condition.text = pet.condition(petStatusBuffer, petOrder, deckSize)\r\n\r\n        val nextDmg = dialogView.findViewById<TextView>(R.id.detail_nextDmgAmount)\r\n        nextDmg.text = pet.nextDamage(petStatusBuffer, petOrder, deckSize)\r\n\r\n//        val textView = dialogView.findViewById<TextView>(R.id.card_pet_name)\r\n\r\n    }\r\n\r\n    */\r\n    private fun initPetStatus(chosenPetId: IntArray): Array<petStatus?>{\r\n        val unitsOnBoard: Array<petStatus?> = arrayOfNulls<petStatus?>(deckSize)\r\n        for (i in 0..deckSize-1) {\r\n            unitsOnBoard[i] = petStatus().apply {\r\n                element = petInfo.getPetInfoById(chosenPetId[i])!!.element\r\n                unitId = chosenPetId[i]\r\n                location = dict.onDECK\r\n                startPos = dict.outsideBoard\r\n                endPos = dict.outsideBoard\r\n            }\r\n        }\r\n        return unitsOnBoard.copyOf()\r\n    }\r\n\r\n\r\n\r\n    private fun gameObjBuilder():String{\r\n        val stage = stageInfo.StageInfoMap(selectedStage)!!\r\n        val stageType = stage.objectiveType\r\n        val maxTurn = stage.maxTurn\r\n        val targetDamage = stage.damageRequirement\r\n        var obj = \"Deal \"\r\n        if(stageType == dict.STAGE_OBJECTIVE_EXACT){\r\n            obj +=\"exact \"\r\n        }\r\n        obj += targetDamage.toString()+ \" damages before \"+maxTurn.toString()+\"th turn!\"\r\n        return obj\r\n    }\r\n\r\n    private fun toggleFrame(position: Int): Int {\r\n        Log.d(\"toggle\",\"\")\r\n        val targetFrame= unitRecyclerView.findViewHolderForAdapterPosition(position) as? deckAdapter.ViewHolder\r\n        val selectedFrame = unitRecyclerView.findViewHolderForAdapterPosition(selectedPetOrder) as? deckAdapter.ViewHolder\r\n\r\n        if(selectedPetOrder == position){\r\n            targetFrame?.frameView?.setBackgroundResource(R.drawable.game_stroke_background)\r\n//            selectedPetOrder = -1\r\n            return -1\r\n        }\r\n\r\n        else if(selectedPetOrder == -1){\r\n            targetFrame?.frameView?.setBackgroundResource(R.drawable.game_stroke_background_click)\r\n//            selectedPetOrder = position\r\n            return position\r\n        }\r\n        else{\r\n            selectedFrame?.frameView?.setBackgroundResource(R.drawable.game_stroke_background)\r\n            targetFrame?.frameView?.setBackgroundResource(R.drawable.game_stroke_background_click)\r\n//            selectedPetOrder = position\r\n            return position\r\n        }\r\n    }\r\n\r\n    private suspend fun deckVisualize(){\r\n        for (i in 0..deckSize-1){\r\n//            Log.d(\"deckStatus\", \"value: ${viewModel.deckStatus.value?.get(i)!! == dict.hasPet}\")\r\n            if(deckStatusBuffer[i]== dict.hasPet){\r\n                Log.d(\"deckStatus\", \"in if\")\r\n                showPetOnDeck(i)\r\n            }\r\n            else{\r\n                invisPetOnDeck(i)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private suspend fun boardVisualize(){\r\n        for (i in 0..boardSize-1){\r\n//            Log.d(\"boardStatus\", \"value: ${viewModel.boardStatus.value?.get(i)!! == dict.noPet}\")\r\n            if(boardStatusBuffer[i] >= 0){\r\n                showPetOnBoard(i)\r\n//                    returnPet(i,0,0)\r\n            }\r\n            else if (boardStatusBuffer[i] == dict.noPet){\r\n                invisPetOnBoard(i)\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun showPetOnDeck(petOrder: Int){\r\n//        val pet= viewModel.petStatus.value?.get(petOrder)\r\n//        val imageId = inventory.getViewInfoById(chosenPetId[petOrder])?.imageId\r\n        val imageId = petInfo.getPetInfoById(chosenPetId[petOrder])?.imageId\r\n\r\n//        Log.d(\"returnPet\",\"returnPet triggered\")\r\n        unitRecyclerView.post {\r\n\r\n            val targetDeck= unitRecyclerView.findViewHolderForAdapterPosition(petOrder) as? deckAdapter.ViewHolder\r\n            targetDeck?.imageView?.isInvisible = false\r\n            targetDeck?.imageView?.setImageResource(imageId!!)\r\n        }\r\n    }\r\n\r\n    private fun invisPetOnDeck(petOrder:Int){\r\n//        Log.d(\"returnPet\",\"returnPet triggered\")\r\n        unitRecyclerView.post {\r\n            val targetDeck= unitRecyclerView.findViewHolderForAdapterPosition(petOrder) as? deckAdapter.ViewHolder\r\n            targetDeck?.imageView?.isInvisible = true\r\n//            targetDeck?.imageView?.setImageResource(imageId!!)\r\n        }\r\n    }\r\n\r\n    private fun showPetOnBoard(boardIndex: Int){\r\n//        val board = viewModel.getBoardStatus()\r\n        val board = boardStatusBuffer\r\n//        val pet= viewModel.petStatus.value?.get(board[boardIndex])\r\n\r\n//        val petStatus = viewModel.getPetStatus()\r\n        val petStatus = petStatusBuffer\r\n        val petOrder = board[boardIndex]\r\n//        val pet = viewModel.getPetStatus()[petOrder]\r\n        val pet = petStatus[petOrder]\r\n//        val imageId = inventory.getViewInfoById(pet?.unitId!!)?.imageId\r\n        val imageId = petInfo.getPetInfoById(pet?.unitId!!)?.imageId\r\n//        Log.d(\"returnPet\",\"returnPet triggered\")\r\n        boardRecyclerView.post {\r\n            val targetboard= boardRecyclerView.findViewHolderForAdapterPosition(boardIndex) as? boardAdapter.ViewHolder\r\n//            targetboard?.imageView?.isInvisible = false\r\n//            targetboard?.imageView?.alpha = 1.0f\r\n//            targetboard?.countView?.isInvisible = false\r\n//            targetboard?.countView?.alpha = 1.0f\r\n//            targetboard?.elementFrame?.isInvisible = false\r\n//            targetboard?.elementFrame?.alpha = 1.0f\r\n//            targetboard?.countFrame?.isInvisible = false\r\n//            targetboard?.countFrame?.alpha = 1.0f\r\n\r\n            targetboard?.imageView?.setImageResource(imageId!!)\r\n\r\n//            val count = petInfo.getPetCount(petStatus,petOrder)\r\n\r\n            val count = petInfo.getPetInfoById(chosenPetId[petOrder])!!.attackCountdown(petStatus,petOrder, deckSize)\r\n            if(count >=0){\r\n                targetboard?.countView?.text = count.toString()\r\n            }\r\n            else{\r\n                targetboard?.countView?.text = \"∞\"\r\n            }\r\n\r\n            val element = petInfo.getPetInfoById(pet?.unitId!!)?.element\r\n            if(element == dict.ELEMENT_FIRE){\r\n//                targetboard?.nextDmgFrame\r\n                targetboard?.countFrame?.setImageResource(R.drawable.game_count_frame_fire)\r\n                targetboard?.elementFrame?.setImageResource(R.drawable.game_element_frame_fire)\r\n\r\n            }\r\n            else if(element == dict.ELEMENT_WATER){\r\n                targetboard?.countFrame?.setImageResource(R.drawable.game_count_frame_water)\r\n                targetboard?.elementFrame?.setImageResource(R.drawable.game_element_frame_water)\r\n            }\r\n            else if(element == dict.ELEMENT_FOREST){\r\n                targetboard?.countFrame?.setImageResource(R.drawable.game_count_frame_forest)\r\n                targetboard?.elementFrame?.setImageResource(R.drawable.game_element_frame_forest)\r\n            }\r\n\r\n            targetboard?.masterFrame?.alpha = 1.0f\r\n            val params = targetboard?.masterFrame?.layoutParams as FrameLayout.LayoutParams\r\n            params.marginStart = 0\r\n            params.topMargin = 0\r\n            params.marginEnd = 0\r\n            params.bottomMargin = 0\r\n//            val translateAnimation = TranslateAnimation(\r\n//                0f, -targetboard?.masterFrame?.width?.toFloat()!!, // start and end positions for X-axis\r\n//                0f, -targetboard?.masterFrame?.width?.toFloat()!! // start and end positions for Y-axis (no vertical movement)\r\n//            )\r\n//            translateAnimation.duration = 1000\r\n            targetboard?.masterFrame?.layoutParams = params\r\n            targetboard?.masterFrame?.isInvisible = false\r\n//            targetboard?.masterFrame?.startAnimation(translateAnimation)\r\n\r\n        }\r\n    }\r\n\r\n    private fun invisPetOnBoard(boardIndex: Int){\r\n        boardRecyclerView.post {\r\n            val targetboard= boardRecyclerView.findViewHolderForAdapterPosition(boardIndex) as? boardAdapter.ViewHolder\r\n//            targetboard?.imageView?.isInvisible = true\r\n//            targetboard?.countView?.isInvisible = true\r\n//            targetboard?.elementFrame?.isInvisible = true\r\n//            targetboard?.countFrame?.isInvisible = true\r\n            targetboard?.masterFrame?.isInvisible = true\r\n        }\r\n    }\r\n\r\n    private fun boardAlpha(boardIndex:Int, alpha: Float){\r\n        //        val board = viewModel.getBoardStatus()\r\n        val board = oldBoard\r\n//        val pet= viewModel.petStatus.value?.get(board[boardIndex])\r\n\r\n//        val petStatus = viewModel.getPetStatus()\r\n        val petStatus = petStatusBuffer\r\n        val petOrder = oldBoard[boardIndex]\r\n//        val pet = viewModel.getPetStatus()[petOrder]\r\n        val pet = petStatus[petOrder]\r\n//        val imageId = inventory.getViewInfoById(pet?.unitId!!)?.imageId\r\n        val imageId = petInfo.getPetInfoById(pet?.unitId!!)?.imageId\r\n//        Log.d(\"returnPet\",\"returnPet triggered\")\r\n        boardRecyclerView.post {\r\n            val targetboard= boardRecyclerView.findViewHolderForAdapterPosition(boardIndex) as? boardAdapter.ViewHolder\r\n\r\n            targetboard?.imageView?.setImageResource(imageId!!)\r\n\r\n//            val count = petInfo.getPetCount(petStatus,petOrder)\r\n\r\n            val count = petInfo.getPetInfoById(chosenPetId[petOrder])!!.attackCountdown(petStatus,petOrder, deckSize)\r\n            if(count >=0){\r\n                targetboard?.countView?.text = count.toString()\r\n            }\r\n            else{\r\n                targetboard?.countView?.text = \"∞\"\r\n            }\r\n\r\n            val element = petInfo.getPetInfoById(pet?.unitId!!)?.element\r\n            if(element == dict.ELEMENT_FIRE){\r\n//                targetboard?.nextDmgFrame\r\n                targetboard?.countFrame?.setImageResource(R.drawable.game_count_frame_fire)\r\n                targetboard?.elementFrame?.setImageResource(R.drawable.game_element_frame_fire)\r\n\r\n            }\r\n            else if(element == dict.ELEMENT_WATER){\r\n                targetboard?.countFrame?.setImageResource(R.drawable.game_count_frame_water)\r\n                targetboard?.elementFrame?.setImageResource(R.drawable.game_element_frame_water)\r\n            }\r\n            else if(element == dict.ELEMENT_FOREST){\r\n                targetboard?.countFrame?.setImageResource(R.drawable.game_count_frame_forest)\r\n                targetboard?.elementFrame?.setImageResource(R.drawable.game_element_frame_forest)\r\n            }\r\n\r\n//            targetboard?.imageView?.isInvisible = false\r\n//            targetboard?.imageView?.alpha = alpha\r\n//\r\n//            targetboard?.countView?.isInvisible = false\r\n//            targetboard?.countView?.alpha = alpha\r\n//\r\n//            targetboard?.elementFrame?.isInvisible = false\r\n//            targetboard?.elementFrame?.alpha = alpha\r\n//\r\n//            targetboard?.countFrame?.isInvisible = false\r\n//            targetboard?.countFrame?.alpha = alpha\r\n\r\n            targetboard?.masterFrame?.isInvisible = false\r\n            targetboard?.masterFrame?.alpha = alpha\r\n        }\r\n    }\r\n\r\n    //set the show dialog funciton\r\n    private fun showMonsterDetailDialog(stageId:Int){\r\n        val dialog = GameMonsterDialogFragment.newInstance(stageId)\r\n        dialog.show(supportFragmentManager, \"MonsterChooseDialog\")\r\n\r\n    }\r\n\r\n    //set the menu dialog funciton\r\n    private fun showMenuDialog(){\r\n        val dialog = menuDialog.newInstance()\r\n        dialog.show(supportFragmentManager, \"MenuDialog\")\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/eggenda/gamePlay/gameActivity.kt b/app/src/main/java/com/example/eggenda/gamePlay/gameActivity.kt
--- a/app/src/main/java/com/example/eggenda/gamePlay/gameActivity.kt	(revision c78f9c401aa910a9f0730238c52ce0a212b0fe9a)
+++ b/app/src/main/java/com/example/eggenda/gamePlay/gameActivity.kt	(date 1733177686153)
@@ -35,7 +35,7 @@
 import java.time.LocalDateTime
 import kotlin.math.abs
 
-class gameActivity : AppCompatActivity() {
+class gameActivity : AppCompatActivity(), menuDialog.MenuDialogListener {
 
     private lateinit var sharedPreferenceManager: SharedPreferenceManager
 
@@ -77,7 +77,7 @@
     private lateinit var unitRecyclerView: RecyclerView
     private lateinit var deckAdapter: deckAdapter
 
-    private lateinit var tempRestart: Button
+    private lateinit var tempRestart: ImageView
 
     //variables for UI
     private var selectedPetOrder: Int = -1
@@ -283,6 +283,19 @@
 
     }
 
+    override fun onRestartGame(){
+        viewModel.updateGameRunState(dict.GAME_NOT_START)
+        recreate()
+    }
+
+    override fun onQuitGame(){
+        viewModel.updateGameRunState(dict.GAME_NOT_START)
+        val intent = Intent(this, MainActivity::class.java)
+        startActivity(intent)
+    }
+
+
+
     //put pet-> bounce-> count dmg(include stay
     //-> win if target hp = 0, lose if damage too high for some objective
     //->lose of no pet to place
@@ -847,7 +860,7 @@
             val petElement = petInfo.getPetInfoById(chosenPetId[i])!!.element
             Log.d("damage dealt", "pet element : ${petElement}")
             Log.d("damage dealt", "accept element: ${acceptElement}")
-            if (damage > 0 &&  (acceptElement == dict.STAGE_ACCEPT_ALL_ELEMENT || acceptElement == petElement)){
+            if (damage > 0 ){
                 val petID = petStatus[i]?.unitId!!
                 val pet = petInfo.getPetInfoById(petID)!!
                 val atkElement = pet.element
@@ -871,7 +884,7 @@
                 }
 
 
-                if((atkType == dict.ATK_TYPE_STAY && includeStay)|| atkType != dict.ATK_TYPE_STAY){
+                if(((atkType == dict.ATK_TYPE_STAY && includeStay)|| atkType != dict.ATK_TYPE_STAY )&&  (acceptElement == dict.STAGE_ACCEPT_ALL_ELEMENT || acceptElement == petElement)){
                     damageHistory[atkElement] += damage
                     reportList.add(damageReport)
                     hitNum ++
@@ -1752,4 +1765,5 @@
     }
 
 
+
 }
\ No newline at end of file
